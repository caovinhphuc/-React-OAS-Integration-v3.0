{"version":3,"file":"static/js/670.053a0fdb.chunk.js","mappings":"4LAGA,MA8OA,EA9OgCA,KAAO,IAADC,EACpC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,OAChCO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,KACpCS,EAAYC,IAAiBV,EAAAA,EAAAA,WAAS,IACtCW,EAASC,IAAcZ,EAAAA,EAAAA,UAAS,CACrCa,KAAM,GACNC,MAAO,GACPC,OAAQ,YAIVC,EAAAA,EAAAA,WAAU,KACRC,KACC,IAEH,MAAMA,EAAkBC,UACtBhB,GAAa,GACbE,EAAS,MAET,UAEQ,IAAIe,QAAQC,GAAWC,WAAWD,EAAS,MAWjDZ,EARiB,CACf,CAAC,UAAQ,qBAAY,0BAAY,SAAO,qBAAc,oBACtD,CAAC,aAAc,uBAAc,IAAK,UAAW,mBAAc,0BAC3D,CAAC,aAAc,uBAAc,IAAK,UAAW,0BAAc,wBAC3D,CAAC,aAAc,uBAAc,IAAK,UAAW,mBAAc,oBAC3D,CAAC,aAAc,uBAAc,IAAK,UAAW,mBAAc,0BAI7DT,GAAe,GACfO,EAAW,2DACb,CAAE,MAAOgB,GACPlB,EAAS,sCAADmB,OAAmBD,EAAIE,UAC/BzB,GAAe,EACjB,CAAC,QACCG,GAAa,EACf,GAoCIuB,EAAkBV,IACtB,OAAQA,GACN,IAAK,mBACH,MAAO,iBACT,IAAK,0BACH,MAAO,iBACT,QACE,MAAO,mBAIb,OACEW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8CAINF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0CACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,oBAAAJ,OAAsBzB,EAAc,YAAc,gBAAiB8B,SAC9E9B,EAAc,4CAAkB,iDAIrC4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAErB,EAAUuB,aAG3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5B9B,EAAc,uBAAyB,sCAM7CK,IACCuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAAD,SAAOzB,KACP0B,EAAAA,EAAAA,KAAA,UAAQE,QAASA,IAAM3B,EAAS,MAAMwB,SAAC,YAI1CvB,IACCqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAAD,SAAOvB,KACPwB,EAAAA,EAAAA,KAAA,UAAQE,QAASA,IAAMzB,EAAW,MAAMsB,SAAC,aAK7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEF,UAAS,mBAAAJ,OAAqBtB,EAAY,UAAY,IACtD8B,QAASd,EACTe,SAAU/B,EAAU2B,SAEnB3B,EAAY,8CAAuB,kDAGtC4B,EAAAA,EAAAA,KAAA,UACEF,UAAU,oBACVI,QAnGcb,UACpBhB,GAAa,GACb,UAEQ,IAAIiB,QAAQC,GAAWC,WAAWD,EAAS,MACjDd,EAAW,0DACb,CAAE,MAAOgB,GACPlB,EAAS,4BAADmB,OAAmBD,EAAIE,SACjC,CAAC,QACCtB,GAAa,EACf,GA0FM8B,UAAWlC,GAAeG,EAAU2B,SACrC,oDAIDC,EAAAA,EAAAA,KAAA,UACEF,UAAU,oBACVI,QAASA,IAAMrB,GAAc,GAC7BsB,UAAWlC,EAAY8B,SACxB,wCAMF9B,GAAeS,EAAUuB,OAAS,IACjCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0DACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACe,QADf/B,EACGU,EAAU,UAAE,IAAAV,OAAA,EAAZA,EAAcoC,IAAI,CAACC,EAAQC,KAC1BN,EAAAA,EAAAA,KAAA,MAAAD,SAAiBM,GAARC,SAIfN,EAAAA,EAAAA,KAAA,SAAAD,SACGrB,EAAU6B,MAAM,GAAGH,IAAI,CAACI,EAAKC,KAC5BT,EAAAA,EAAAA,KAAA,MAAAD,SACGS,EAAIJ,IAAI,CAACM,EAAMC,KACdX,EAAAA,EAAAA,KAAA,MAAAD,SACiB,IAAdY,GACCX,EAAAA,EAAAA,KAAA,QAAMF,UAAS,gBAAAJ,OAAkBE,EAAec,IAAQX,SACrDW,IAGHA,GANKC,KAFJF,cAqBpB7B,IACCoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wCACJC,EAAAA,EAAAA,KAAA,UAAQE,QAASA,IAAMrB,GAAc,GAAQiB,UAAU,YAAWC,SAAC,aAErEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,+BACPC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACL3B,MAAOH,EAAQE,KACf6B,SAAWC,GAAM/B,GAAUgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjC,GAAO,IAAEE,KAAM8B,EAAEE,OAAO/B,SACzDgC,YAAY,4CAGhBpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACL3B,MAAOH,EAAQG,MACf4B,SAAWC,GAAM/B,GAAUgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjC,GAAO,IAAEG,MAAO6B,EAAEE,OAAO/B,SAC1DgC,YAAY,+CAIlBpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UAAQE,QAASA,IAAMrB,GAAc,GAAQiB,UAAU,oBAAmBC,SAAC,cAG3EC,EAAAA,EAAAA,KAAA,UAAQE,QAxKEb,UACpB,IACE,MAAM6B,EAAS,EACb,IAAIC,MAAOC,mBAAmB,SAC9BtC,EAAQE,KACR,IACAF,EAAQG,MACW,WAAnBH,EAAQI,OAAsB,mBAAe,0BAC7C,6BAGFP,EAAa,IAAID,EAAWwC,IAC5BnC,EAAW,CAAEC,KAAM,GAAIC,MAAO,GAAIC,OAAQ,WAC1CL,GAAc,GACdJ,EAAW,wDACb,CAAE,MAAOgB,GACPlB,EAAS,8CAADmB,OAAwBD,EAAIE,SACtC,GAuJ0CG,UAAU,kBAAiBC,SAAC,uB","sources":["components/google/GoogleSheetsIntegration.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./GoogleSheetsIntegration.css\";\n\nconst GoogleSheetsIntegration = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [sheetData, setSheetData] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newData, setNewData] = useState({\n    name: \"\",\n    value: \"\",\n    status: \"active\",\n  });\n\n  // Kiểm tra kết nối khi component mount\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Simulate connection check\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock data for demonstration\n      const mockData = [\n        [\"Ngày\", \"Sản phẩm\", \"Số lượng\", \"Giá\", \"Trạng thái\", \"Khách hàng\"],\n        [\"2025-09-28\", \"Sản phẩm A\", \"5\", \"150.000\", \"Hoàn thành\", \"Nguyễn Văn A\"],\n        [\"2025-09-28\", \"Sản phẩm B\", \"3\", \"200.000\", \"Đang xử lý\", \"Trần Thị B\"],\n        [\"2025-09-27\", \"Sản phẩm C\", \"2\", \"300.000\", \"Hoàn thành\", \"Lê Văn C\"],\n        [\"2025-09-27\", \"Sản phẩm A\", \"4\", \"150.000\", \"Hoàn thành\", \"Phạm Thị D\"],\n      ];\n\n      setSheetData(mockData);\n      setIsConnected(true);\n      setSuccess(\"✅ Kết nối Google Sheets thành công!\");\n    } catch (err) {\n      setError(`❌ Lỗi kết nối: ${err.message}`);\n      setIsConnected(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRefresh = async () => {\n    setIsLoading(true);\n    try {\n      // Simulate refresh\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setSuccess(\"✅ Đã cập nhật dữ liệu!\");\n    } catch (err) {\n      setError(`❌ Lỗi refresh: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddData = async () => {\n    try {\n      const newRow = [\n        new Date().toLocaleDateString('vi-VN'),\n        newData.name,\n        \"1\",\n        newData.value,\n        newData.status === \"active\" ? \"Hoàn thành\" : \"Đang xử lý\",\n        \"Khách hàng mới\",\n      ];\n\n      setSheetData([...sheetData, newRow]);\n      setNewData({ name: \"\", value: \"\", status: \"active\" });\n      setOpenDialog(false);\n      setSuccess(\"✅ Đã thêm dữ liệu mới!\");\n    } catch (err) {\n      setError(`❌ Lỗi thêm dữ liệu: ${err.message}`);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"Hoàn thành\":\n        return \"status-success\";\n      case \"Đang xử lý\":\n        return \"status-warning\";\n      default:\n        return \"status-default\";\n    }\n  };\n\n  return (\n    <div className=\"google-sheets-integration\">\n      <div className=\"integration-header\">\n        <h1>📊 Google Sheets Integration</h1>\n      </div>\n\n      {/* Status Cards */}\n      <div className=\"status-cards\">\n        <div className=\"status-card\">\n          <h3>Trạng thái kết nối</h3>\n          <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? \"🟢 Đã kết nối\" : \"🔴 Chưa kết nối\"}\n          </div>\n        </div>\n\n        <div className=\"status-card\">\n          <h3>Tổng số dòng</h3>\n          <div className=\"metric-value\">{sheetData.length}</div>\n        </div>\n\n        <div className=\"status-card\">\n          <h3>Spreadsheet ID</h3>\n          <div className=\"spreadsheet-id\">\n            {isConnected ? \"demo-spreadsheet-123\" : \"Chưa kết nối\"}\n          </div>\n        </div>\n      </div>\n\n      {/* Alerts */}\n      {error && (\n        <div className=\"alert error\">\n          <span>{error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"alert success\">\n          <span>{success}</span>\n          <button onClick={() => setSuccess(null)}>×</button>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"action-buttons\">\n        <button\n          className={`btn btn-primary ${isLoading ? 'loading' : ''}`}\n          onClick={checkConnection}\n          disabled={isLoading}\n        >\n          {isLoading ? \"🔄 Đang kết nối...\" : \"🔗 Kết nối Google Sheets\"}\n        </button>\n\n        <button\n          className=\"btn btn-secondary\"\n          onClick={handleRefresh}\n          disabled={!isConnected || isLoading}\n        >\n          🔄 Làm mới dữ liệu\n        </button>\n\n        <button\n          className=\"btn btn-secondary\"\n          onClick={() => setOpenDialog(true)}\n          disabled={!isConnected}\n        >\n          ➕ Thêm dữ liệu\n        </button>\n      </div>\n\n      {/* Data Table */}\n      {isConnected && sheetData.length > 0 && (\n        <div className=\"data-section\">\n          <h3>📋 Dữ liệu từ Google Sheets</h3>\n          <div className=\"table-container\">\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  {sheetData[0]?.map((header, index) => (\n                    <th key={index}>{header}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {sheetData.slice(1).map((row, rowIndex) => (\n                  <tr key={rowIndex}>\n                    {row.map((cell, cellIndex) => (\n                      <td key={cellIndex}>\n                        {cellIndex === 4 ? (\n                          <span className={`status-badge ${getStatusColor(cell)}`}>\n                            {cell}\n                          </span>\n                        ) : (\n                          cell\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Add Data Dialog */}\n      {openDialog && (\n        <div className=\"dialog-overlay\">\n          <div className=\"dialog\">\n            <div className=\"dialog-header\">\n              <h3>Thêm dữ liệu mới</h3>\n              <button onClick={() => setOpenDialog(false)} className=\"close-btn\">×</button>\n            </div>\n            <div className=\"dialog-content\">\n              <div className=\"form-group\">\n                <label>Tên sản phẩm</label>\n                <input\n                  type=\"text\"\n                  value={newData.name}\n                  onChange={(e) => setNewData({ ...newData, name: e.target.value })}\n                  placeholder=\"Nhập tên sản phẩm\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Giá</label>\n                <input\n                  type=\"text\"\n                  value={newData.value}\n                  onChange={(e) => setNewData({ ...newData, value: e.target.value })}\n                  placeholder=\"Nhập giá sản phẩm\"\n                />\n              </div>\n            </div>\n            <div className=\"dialog-actions\">\n              <button onClick={() => setOpenDialog(false)} className=\"btn btn-secondary\">\n                Hủy\n              </button>\n              <button onClick={handleAddData} className=\"btn btn-primary\">\n                Thêm\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleSheetsIntegration;\n"],"names":["GoogleSheetsIntegration","_sheetData$","isConnected","setIsConnected","useState","isLoading","setIsLoading","error","setError","success","setSuccess","sheetData","setSheetData","openDialog","setOpenDialog","newData","setNewData","name","value","status","useEffect","checkConnection","async","Promise","resolve","setTimeout","err","concat","message","getStatusColor","_jsxs","className","children","_jsx","length","onClick","disabled","map","header","index","slice","row","rowIndex","cell","cellIndex","type","onChange","e","_objectSpread","target","placeholder","newRow","Date","toLocaleDateString"],"sourceRoot":""}