{"version":3,"file":"static/js/790.71bf0432.chunk.js","mappings":"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","sources":["../node_modules/brain.js/src/activation/relu.ts","../node_modules/brain.js/src/activation/sigmoid.ts","../node_modules/brain.js/src/activation/tanh.ts","../node_modules/brain.js/src/activation/leaky-relu.ts","../node_modules/brain.js/node_modules/gpu.js/dist/gpu-browser.js","../node_modules/brain.js/src/lookup.ts","../node_modules/brain.js/node_modules/thaw.js/browser.js","../node_modules/brain.js/src/utilities/cast.ts","../node_modules/brain.js/src/utilities/lookup-table.ts","../node_modules/brain.js/src/utilities/max.ts","../node_modules/brain.js/src/utilities/mse.ts","../node_modules/brain.js/src/utilities/random-weight.ts","../node_modules/brain.js/src/utilities/random.ts","../node_modules/brain.js/src/utilities/randos.ts","../node_modules/brain.js/src/utilities/zeros.ts","../node_modules/brain.js/src/neural-network.ts","../node_modules/brain.js/src/utilities/kernel.ts","../node_modules/brain.js/src/neural-network-gpu.ts","../node_modules/brain.js/src/errors/untrained-neural-network-error.ts","../node_modules/brain.js/src/autoencoder.ts","../node_modules/brain.js/src/cross-validate.ts","../node_modules/brain.js/src/estimator/mean-squared-error.ts","../node_modules/brain.js/src/layer/base-layer.ts","../node_modules/brain.js/src/utilities/zeros-2d.ts","../node_modules/brain.js/src/utilities/zeros-3d.ts","../node_modules/brain.js/src/layer/activation.ts","../node_modules/brain.js/src/layer/filter.ts","../node_modules/brain.js/src/layer/internal.ts","../node_modules/brain.js/src/layer/modifier.ts","../node_modules/brain.js/src/layer/operator.ts","../node_modules/brain.js/src/layer/target.ts","../node_modules/brain.js/src/layer/types.ts","../node_modules/brain.js/src/praxis/base-praxis.ts","../node_modules/brain.js/src/praxis/arthur-deviation-biases.ts","../node_modules/brain.js/src/praxis/arthur-deviation-weights.ts","../node_modules/brain.js/src/praxis/momentum-root-mean-squared-propagation.ts","../node_modules/brain.js/src/utilities/traverse-layers-from.ts","../node_modules/brain.js/src/utilities/flatten-layers.ts","../node_modules/brain.js/src/utilities/layer-size.ts","../node_modules/brain.js/src/layer/add.ts","../node_modules/brain.js/src/layer/random.ts","../node_modules/brain.js/src/layer/multiply.ts","../node_modules/brain.js/src/layer/sigmoid.ts","../node_modules/brain.js/src/layer/arthur-feed-forward.ts","../node_modules/brain.js/src/utilities/layer-setup.ts","../node_modules/brain.js/src/utilities/values.ts","../node_modules/brain.js/src/layer/convolution.ts","../node_modules/brain.js/src/layer/dropout.ts","../node_modules/brain.js/src/layer/feed-forward.ts","../node_modules/brain.js/src/layer/fully-connected.ts","../node_modules/brain.js/src/layer/negative.ts","../node_modules/brain.js/src/layer/multiply-element.ts","../node_modules/brain.js/src/utilities/ones.ts","../node_modules/brain.js/src/layer/ones.ts","../node_modules/brain.js/src/layer/tanh.ts","../node_modules/brain.js/src/layer/zeros.ts","../node_modules/brain.js/src/layer/gru.ts","../node_modules/brain.js/src/layer/input.ts","../node_modules/brain.js/src/layer/leaky-relu.ts","../node_modules/brain.js/src/layer/lstm-cell.ts","../node_modules/brain.js/src/layer/output.ts","../node_modules/brain.js/src/layer/pool.ts","../node_modules/brain.js/src/layer/recurrent-input.ts","../node_modules/brain.js/src/layer/recurrent-zeros.ts","../node_modules/brain.js/src/layer/relu.ts","../node_modules/brain.js/src/layer/rnn-cell.ts","../node_modules/brain.js/src/layer/regression.ts","../node_modules/brain.js/src/layer/soft-max.ts","../node_modules/brain.js/src/layer/svm.ts","../node_modules/brain.js/src/layer/transpose.ts","../node_modules/brain.js/src/layer/index.ts","../node_modules/brain.js/src/utilities/layer-from-json.ts","../node_modules/brain.js/src/feed-forward.ts","../node_modules/brain.js/src/likely.ts","../node_modules/brain.js/src/layer/recurrent-connection.ts","../node_modules/brain.js/src/recurrent.ts","../node_modules/brain.js/src/recurrent/matrix/index.ts","../node_modules/brain.js/src/recurrent/matrix/random-matrix.ts","../node_modules/brain.js/src/utilities/data-formatter.ts","../node_modules/brain.js/src/recurrent/matrix/copy.ts","../node_modules/brain.js/src/recurrent/matrix/add.ts","../node_modules/brain.js/src/recurrent/matrix/add-b.ts","../node_modules/brain.js/src/recurrent/matrix/all-ones.ts","../node_modules/brain.js/src/recurrent/matrix/clone-negative.ts","../node_modules/brain.js/src/recurrent/matrix/multiply.ts","../node_modules/brain.js/src/recurrent/matrix/multiply-b.ts","../node_modules/brain.js/src/recurrent/matrix/multiply-element.ts","../node_modules/brain.js/src/recurrent/matrix/multiply-element-b.ts","../node_modules/brain.js/src/recurrent/matrix/relu.ts","../node_modules/brain.js/src/recurrent/matrix/relu-b.ts","../node_modules/brain.js/src/recurrent/matrix/row-pluck.ts","../node_modules/brain.js/src/recurrent/matrix/row-pluck-b.ts","../node_modules/brain.js/src/recurrent/matrix/sigmoid.ts","../node_modules/brain.js/src/recurrent/matrix/sigmoid-b.ts","../node_modules/brain.js/src/recurrent/matrix/softmax.ts","../node_modules/brain.js/src/recurrent/matrix/tanh.ts","../node_modules/brain.js/src/recurrent/matrix/tanh-b.ts","../node_modules/brain.js/src/recurrent/matrix/equation.ts","../node_modules/brain.js/src/recurrent/matrix/max-i.ts","../node_modules/brain.js/src/recurrent/matrix/sample-i.ts","../node_modules/brain.js/src/recurrent/rnn.ts","../node_modules/brain.js/src/recurrent/gru.ts","../node_modules/brain.js/src/utilities/array-lookup-table.ts","../node_modules/brain.js/src/recurrent/rnn-time-step.ts","../node_modules/brain.js/src/recurrent/gru-time-step.ts","../node_modules/brain.js/src/recurrent/lstm.ts","../node_modules/brain.js/src/recurrent/lstm-time-step.ts","../node_modules/brain.js/src/utilities/range.ts","../node_modules/brain.js/src/utilities/to-array.ts","../node_modules/brain.js/src/utilities/to-svg.ts","../node_modules/brain.js/src/index.ts"],"sourcesContent":["/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n */\nexport function measure(weight: number, delta: number): number {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n","/**\n * sigmoid activation\n */\nexport function activate(value: number): number {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight * (1 - weight) * error;\n}\n","/**\n * Hyperbolic tan\n */\nexport function activate(weight: number): number {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n */\nexport function measure(weight: number, error: number): number {\n  return (1 - weight * weight) * error;\n}\n","/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight > 0 ? error : 0.01 * error;\n}\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.16.0\n * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2022 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName' in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","import { KernelOutput } from 'gpu.js';\n\nexport interface INumberHash {\n  [character: string]: number;\n}\n\nexport interface INumberArray {\n  length: number;\n  buffer?: ArrayBuffer;\n  [index: number]: number;\n}\n\nexport type InputOutputValue = INumberArray | Partial<INumberHash>;\n\nexport interface ITrainingDatum {\n  input: InputOutputValue | InputOutputValue[] | KernelOutput;\n  output: InputOutputValue | InputOutputValue[] | KernelOutput;\n}\n\nexport type FormattableData =\n  | number\n  | ITrainingDatum\n  | InputOutputValue\n  | InputOutputValue[];\n\n/* Functions for turning sparse hashes into arrays and vice versa */\nexport const lookup = {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  toTable(hashes: INumberHash[]): INumberHash {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  },\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   */\n  toTable2D(objects2D: INumberHash[][]): INumberHash {\n    const table: INumberHash = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toInputTable2D(\n    data: Array<{ input: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toOutputTable2D(\n    data: Array<{ output: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   */\n  toHash(hash: INumberHash): INumberHash {\n    const lookup: INumberHash = {};\n    let index = 0;\n    const keys = Object.keys(hash);\n    for (let i = 0; i < keys.length; i++) {\n      lookup[keys[i]] = index++;\n    }\n    return lookup;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   */\n  toArray(\n    lookup: INumberHash,\n    object: INumberHash,\n    arrayLength: number\n  ): Float32Array {\n    const result = new Float32Array(arrayLength);\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  },\n\n  toArrayShort(lookup: INumberHash, object: INumberHash): Float32Array {\n    const result = [];\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  },\n\n  toArrays(\n    lookup: INumberHash,\n    objects: INumberHash[],\n    arrayLength: number\n  ): Float32Array[] {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  toObject(lookup: INumberHash, array: number[] | Float32Array): INumberHash {\n    const object: INumberHash = {};\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  },\n\n  toObjectPartial(\n    lookup: INumberHash,\n    array: number[] | Float32Array,\n    offset = 0,\n    limit = 0\n  ): INumberHash {\n    const object: INumberHash = {};\n    let i = 0;\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  },\n\n  dataShape(data: FormattableData[] | FormattableData): string[] {\n    const shape = [];\n    let lastData;\n    if (data.hasOwnProperty('input')) {\n      shape.push('datum');\n      lastData = (data as ITrainingDatum).input;\n    } else if (Array.isArray(data)) {\n      if (\n        (data as ITrainingDatum[])[0] &&\n        (data as ITrainingDatum[])[0].input\n      ) {\n        shape.push('array', 'datum');\n        lastData = (data as ITrainingDatum[])[0].input;\n      } else if (Array.isArray(data[0])) {\n        shape.push('array');\n        lastData = data[0];\n      } else {\n        lastData = data as\n          | InputOutputValue\n          | InputOutputValue[]\n          | InputOutputValue[][];\n      }\n    } else {\n      lastData = data as\n        | InputOutputValue\n        | InputOutputValue[]\n        | InputOutputValue[][];\n    }\n\n    let p;\n    while (lastData) {\n      p = Object.keys(lastData)[0];\n      if (\n        Array.isArray(lastData) ||\n        typeof (lastData as Float32Array).buffer === 'object'\n      ) {\n        shape.push('array');\n        const possibleNumber:\n          | number\n          | INumberArray = (lastData as INumberArray[])[parseInt(p)];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else if (\n        typeof lastData === 'object' &&\n        typeof (lastData as Float32Array).buffer !== 'object'\n      ) {\n        shape.push('object');\n        const possibleNumber: number | INumberHash = (lastData as INumberHash)[\n          p\n        ];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    return shape;\n  },\n\n  addKeys(value: number[] | INumberHash, table: INumberHash): INumberHash {\n    if (Array.isArray(value)) return table;\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  },\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thaw = exports.Block = exports.Thaw = void 0;\n/**\n * thaw an array of items\n */\nvar Thaw = /** @class */ (function () {\n    function Thaw(items, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var _a = __assign(__assign({}, Thaw.defaultSettings), options), each = _a.each, done = _a.done;\n        this.i = 0;\n        this.isStopped = false;\n        this.items = items;\n        this.options = options;\n        this.tick = function () {\n            if (_this.isStopped)\n                return;\n            _this.timeout = setTimeout(_this.tick, 0);\n            if (Thaw.thawing)\n                return;\n            var item = _this.items[_this.i];\n            if (_this.i >= _this.items.length) {\n                if (done !== null) {\n                    Thaw.thawing = true;\n                    done();\n                    Thaw.thawing = false;\n                }\n                _this.isStopped = true;\n                clearTimeout(_this.timeout);\n                return;\n            }\n            if (each !== null) {\n                Thaw.thawing = true;\n                each(item, _this.i);\n                Thaw.thawing = false;\n            }\n            else if (item !== undefined) {\n                item();\n            }\n            _this.i++;\n        };\n        Thaw.thaws.push(this);\n        if (!options.delay) {\n            this.tick();\n        }\n    }\n    Object.defineProperty(Thaw, \"isThawing\", {\n        /**\n         * returns if Thaw.js is thawing\n         */\n        get: function () {\n            return Thaw.thawing;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Stops all Thaw instances\n     */\n    Thaw.stopAll = function () {\n        for (var i = 0; i < Thaw.thaws.length; i++) {\n            Thaw.thaws[i].stop();\n        }\n    };\n    /**\n     * readies thaw to continue\n     */\n    Thaw.prototype.makeReady = function () {\n        if (this.isStopped) {\n            this.isStopped = false;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.add = function (item) {\n        this.items.push(item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.insert = function (item) {\n        this.items.splice(this.i, 0, item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.addArray = function (items) {\n        this.items = this.items.concat(items);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     */\n    Thaw.prototype.insertArray = function (items) {\n        var before = this.items.splice(0, this.i);\n        var after = this.items;\n        this.items = before.concat(items, after);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Stops this instance of Thaw\n     */\n    Thaw.prototype.stop = function () {\n        this.isStopped = true;\n        clearTimeout(this.timeout);\n        if (this.options.done) {\n            this.options.done();\n        }\n        return this;\n    };\n    Thaw.thawing = false;\n    Thaw.thaws = [];\n    Thaw.defaultSettings = {\n        each: null,\n        done: null\n    };\n    return Thaw;\n}());\nexports.Thaw = Thaw;\n/**\n * simple thaw\n */\nfunction thaw(items, options) {\n    return new Thaw(items, options);\n}\nexports.thaw = thaw;\nvar Block = /** @class */ (function () {\n    function Block(options, count) {\n        if (count === void 0) { count = 200; }\n        this.index = 0;\n        this.thaws = [];\n        this.count = count;\n        this.options = options;\n    }\n    /**\n     * add an item to the end of items\n     */\n    Block.prototype.add = function (item) {\n        var next = this.next();\n        next.add(item);\n        return this;\n    };\n    /**\n     * add an Array to the end of items\n     */\n    Block.prototype.addArray = function (items) {\n        var next = this.next();\n        next.addArray(items);\n        return this;\n    };\n    /**\n     * insert an item into items @ current position\n     */\n    Block.prototype.insert = function (item) {\n        var next = this.next();\n        next.insert(item);\n        return this;\n    };\n    /**\n     * insert and array into items @ current position\n     */\n    Block.prototype.insertArray = function (items) {\n        var next = this.next();\n        next.insertArray(items);\n        return this;\n    };\n    /**\n     * Stops all thaws in this block\n     */\n    Block.prototype.stop = function () {\n        for (var i = 0; i < this.thaws.length; i++) {\n            this.thaws[i].stop();\n        }\n        return this;\n    };\n    /**\n     * Get next available in block\n     */\n    Block.prototype.next = function () {\n        var thaw;\n        var thaws = this.thaws;\n        if (thaws.length < this.count) {\n            thaw = new Thaw([], this.options);\n            thaws.push(thaw);\n        }\n        else {\n            thaw = thaws[this.index] || null;\n        }\n        this.index++;\n        if (this.index >= this.count) {\n            this.index = 0;\n        }\n        return thaw;\n    };\n    return Block;\n}());\nexports.Block = Block;\nif (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.Thaw = Thaw;\n    // @ts-ignore\n    window.thaw = thaw;\n    // @ts-ignore\n    window.Thaw.Block = Block;\n}\n","export function arraysToFloat32Arrays(arrays: number[][]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\n\nexport function inputOutputArraysToFloat32Arrays(\n  input: number[][],\n  output: number[][]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from(input[i]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from(output[i]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Arrays(array: number[]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\n\nexport function inputOutputArrayToFloat32Arrays(\n  input: number[],\n  output: number[]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from([input[i]]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from([output[i]]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Array(array: number[]): Float32Array {\n  return Float32Array.from(array);\n}\n\nexport function objectsToFloat32Arrays(\n  objects: Array<Record<string, number>>,\n  table: Record<string, number>,\n  length: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function inputOutputObjectsToFloat32Arrays(\n  input: Array<Record<string, number>>,\n  output: Array<Record<string, number>>,\n  inputTable: Record<string, number>,\n  outputTable: Record<string, number>,\n  inputLength: number,\n  outputLength: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    const object = input[i];\n    const result = new Float32Array(inputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[inputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  for (let i = 0; i < output.length; i++) {\n    const object = output[i];\n    const result = new Float32Array(outputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[outputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function objectToFloat32Arrays(\n  object: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in object) {\n    if (!object.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\n\nexport function inputOutputObjectToFloat32Arrays(\n  input: Record<string, number>,\n  output: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in input) {\n    if (!input.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([input[p]]));\n  }\n  for (const p in output) {\n    if (!output.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([output[p]]));\n  }\n  return result;\n}\n\nexport function objectToFloat32Array(\n  object: Record<string, number>,\n  table: Record<string, number>,\n  length: number\n): Float32Array {\n  const result = new Float32Array(length);\n  for (const p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n","import { InputOutputValue, INumberHash, ITrainingDatum } from '../lookup';\n\nexport type LookupTableProp = 'input' | 'output';\n\nexport class LookupTable {\n  length: number;\n  prop: LookupTableProp | null = null;\n  table: INumberHash = {};\n  constructor(\n    data: ITrainingDatum[] | InputOutputValue[] | InputOutputValue[][],\n    prop?: LookupTableProp\n  ) {\n    this.length = 0;\n    const table = this.table;\n    if (prop) {\n      this.prop = prop;\n      for (let i = 0; i < data.length; i++) {\n        const datum = (data as ITrainingDatum[])[i];\n        const object = datum[prop] as INumberHash;\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    } else if (Array.isArray(data) && Array.isArray(data[0])) {\n      for (let i = 0; i < data.length; i++) {\n        const array = (data as InputOutputValue[][])[i];\n        for (let j = 0; j < array.length; j++) {\n          const object = array[j];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        const object = (data as INumberHash[])[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","export function max(\n  values:\n    | Float32Array\n    | {\n        [key: string]: number;\n      }\n): number {\n  if (Array.isArray(values) || values instanceof Float32Array) {\n    return Math.max(...values);\n  } else {\n    return Math.max(...Object.values(values));\n  }\n}\n","export function mse(errors: Float32Array): number {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","export function randomWeight(): number {\n  return Math.random() * 0.4 - 0.2;\n}\n","/**\n * Returns a random float between given min and max bounds (inclusive)\n * @param min Minimum value of the ranfom float\n * @param max Maximum value of the random float\n */\nexport function randomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Complicated math. All you need to know is that it returns a random number.\n * More info: https://en.wikipedia.org/wiki/Normal_distribution\n */\nexport function gaussRandom(): number {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\n/**\n * Returns a random integer between given min and max bounds\n * @param min Minimum value of the random integer\n * @param max Maximum value of the random integer\n */\nexport function randomInteger(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n/**\n * If you know what this is: https://en.wikipedia.org/wiki/Normal_distribution\n * @param mu\n * @param std\n */\nexport function randomN(mu: number, std: number): number {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n","import { randomWeight } from './random-weight';\nimport { randomFloat } from './random';\n\n/**\n * Returns an array of given size, full of randomness\n */\nexport function randos(size: number, std: number | null = null): Float32Array {\n  const array: Float32Array = new Float32Array(size);\n  if (std === null) {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomWeight();\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomFloat(-std, std);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns a 2D matrix of given size, full of randomness\n */\nexport function randos2D(\n  width: number,\n  height: number,\n  std?: number | null\n): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width, std);\n  }\n  return result;\n}\n\n/**\n * Returns a 3D tensor of given size, full of randomness\n */\nexport function randos3D(\n  width: number,\n  height: number,\n  depth: number,\n  std?: number | null\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = randos2D(width, height, std);\n  }\n  return result;\n}\n","/**\n * Returns an array of zeros\n */\nexport function zeros(size: number): Float32Array {\n  return new Float32Array(size);\n}\n","import { Thaw } from 'thaw.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\nimport { arrayToFloat32Array } from './utilities/cast';\nimport { LookupTable } from './utilities/lookup-table';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { randos } from './utilities/randos';\nimport { zeros } from './utilities/zeros';\n\ntype NeuralNetworkFormatter =\n  | ((v: INumberHash) => Float32Array)\n  | ((v: number[]) => Float32Array);\n\nexport function getTypedArrayFn(\n  value: INeuralNetworkData,\n  table: INumberHash | null\n): null | NeuralNetworkFormatter {\n  if ((value as Float32Array).buffer instanceof ArrayBuffer) {\n    return null;\n  }\n  if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  }\n  if (!table) throw new Error('table is not Object');\n  const { length } = Object.keys(table);\n  return (v: INumberHash): Float32Array => {\n    const array = new Float32Array(length);\n    for (const p in table) {\n      if (!table.hasOwnProperty(p)) continue;\n      if (typeof v[p] !== 'number') continue;\n      array[table[p]] = v[p] || 0;\n    }\n    return array;\n  };\n}\n\nexport type NeuralNetworkActivation =\n  | 'sigmoid'\n  | 'relu'\n  | 'leaky-relu'\n  | 'tanh';\n\nexport interface IJSONLayer {\n  biases: number[];\n  weights: number[][];\n}\n\nexport interface INeuralNetworkJSON {\n  type: string;\n  sizes: number[];\n  layers: IJSONLayer[];\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n  options: INeuralNetworkOptions;\n  trainOpts: INeuralNetworkTrainOptionsJSON;\n}\n\nexport interface INeuralNetworkOptions {\n  inputSize: number;\n  outputSize: number;\n  binaryThresh: number;\n  hiddenLayers?: number[];\n}\n\nexport function defaults(): INeuralNetworkOptions {\n  return {\n    inputSize: 0,\n    outputSize: 0,\n    binaryThresh: 0.5,\n  };\n}\n\nexport interface INeuralNetworkTrainOptionsJSON {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean;\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport interface INeuralNetworkPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: Array<INeuralNetworkDatumFormatted<T>>;\n  endTime: number;\n}\n\nexport interface INeuralNetworkTrainOptions {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: INeuralNetworkState) => void);\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callback?: (status: { iterations: number; error: number }) => void;\n  callbackPeriod: number;\n  timeout: number;\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport function trainDefaults(): INeuralNetworkTrainOptions {\n  return {\n    activation: 'sigmoid',\n    iterations: 20000, // the maximum times to iterate the training data\n    errorThresh: 0.005, // the acceptable error percentage from training data\n    log: false, // true to use console.log, when a function is supplied it is used\n    logPeriod: 10, // iterations between logging out\n    leakyReluAlpha: 0.01,\n    learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n    momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n    callbackPeriod: 10, // the number of iterations through the training data between callback calls\n    timeout: Infinity, // the max number of milliseconds to train for\n    beta1: 0.9,\n    beta2: 0.999,\n    epsilon: 1e-8,\n  };\n}\n\nexport type INeuralNetworkData = number[] | Float32Array | Partial<INumberHash>;\n\n// TODO: should be replaced by ITrainingDatum\nexport interface INeuralNetworkDatum<InputType, OutputType> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface INeuralNetworkDatumFormatted<T> {\n  input: T;\n  output: T;\n}\n\nexport class NeuralNetwork<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> {\n  options: INeuralNetworkOptions = defaults();\n  trainOpts: INeuralNetworkTrainOptions = trainDefaults();\n  sizes: number[] = [];\n  outputLayer = -1;\n  biases: Float32Array[] = [];\n  weights: Float32Array[][] = []; // weights for bias nodes\n  outputs: Float32Array[] = [];\n  // state for training\n  deltas: Float32Array[] = [];\n  changes: Float32Array[][] = []; // for momentum\n  errors: Float32Array[] = [];\n\n  errorCheckInterval = 1;\n\n  inputLookup: INumberHash | null = null;\n  inputLookupLength = 0;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  _formatInput: NeuralNetworkFormatter | null = null;\n  _formatOutput: NeuralNetworkFormatter | null = null;\n\n  runInput: (input: Float32Array) => Float32Array = (input: Float32Array) => {\n    this.setActivation();\n    return this.runInput(input);\n  };\n\n  calculateDeltas: (output: Float32Array) => void = (\n    output: Float32Array\n  ): void => {\n    this.setActivation();\n    return this.calculateDeltas(output);\n  };\n\n  // adam\n  biasChangesLow: Float32Array[] = [];\n  biasChangesHigh: Float32Array[] = [];\n  changesLow: Float32Array[][] = [];\n  changesHigh: Float32Array[][] = [];\n  iterations = 0;\n\n  constructor(\n    options: Partial<INeuralNetworkOptions & INeuralNetworkTrainOptions> = {}\n  ) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions(options);\n\n    const { inputSize, hiddenLayers, outputSize } = this.options;\n    if (inputSize && outputSize) {\n      this.sizes = [inputSize].concat(hiddenLayers ?? []).concat([outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize(): void {\n    if (!this.sizes.length) {\n      throw new Error('Sizes must be set before initializing');\n    }\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = new Array(this.outputLayer); // weights for bias nodes\n    this.weights = new Array(this.outputLayer);\n    this.outputs = new Array(this.outputLayer);\n\n    // state for training\n    this.deltas = new Array(this.outputLayer);\n    this.changes = new Array(this.outputLayer); // for momentum\n    this.errors = new Array(this.outputLayer);\n\n    for (let layerIndex = 0; layerIndex <= this.outputLayer; layerIndex++) {\n      const size = this.sizes[layerIndex];\n      this.deltas[layerIndex] = zeros(size);\n      this.errors[layerIndex] = zeros(size);\n      this.outputs[layerIndex] = zeros(size);\n\n      if (layerIndex > 0) {\n        this.biases[layerIndex] = randos(size);\n        this.weights[layerIndex] = new Array(size);\n        this.changes[layerIndex] = new Array(size);\n\n        for (let nodeIndex = 0; nodeIndex < size; nodeIndex++) {\n          const prevSize = this.sizes[layerIndex - 1];\n          this.weights[layerIndex][nodeIndex] = randos(prevSize);\n          this.changes[layerIndex][nodeIndex] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  setActivation(activation?: NeuralNetworkActivation): void {\n    const value = activation ?? this.trainOpts.activation;\n    switch (value) {\n      case 'sigmoid':\n        this.runInput = this._runInputSigmoid;\n        this.calculateDeltas = this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this._runInputRelu;\n        this.calculateDeltas = this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this._runInputLeakyRelu;\n        this.calculateDeltas = this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this._runInputTanh;\n        this.calculateDeltas = this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${value}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n  }\n\n  get isRunnable(): boolean {\n    return this.sizes.length > 0;\n  }\n\n  run(input: Partial<InputType>): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const output = this.runInput(formattedInput).slice(0);\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output\n      ) as unknown) as OutputType;\n    }\n    return (output as unknown) as OutputType;\n  }\n\n  _runInputSigmoid(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        activeOutputs[node] = sum < 0 ? 0 : sum;\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n    const { leakyReluAlpha } = this.trainOpts;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        activeOutputs[node] = Math.max(sum, leakyReluAlpha * sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputTanh(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        activeOutputs[node] = Math.tanh(sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(\n    preparedData: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): void {\n    if (this.sizes.length && this.outputLayer > 0) return;\n\n    this.sizes = [];\n    this.sizes.push(preparedData[0].input.length);\n    if (!this.options.hiddenLayers) {\n      this.sizes.push(\n        Math.max(3, Math.floor(preparedData[0].input.length / 2))\n      );\n    } else {\n      this.options.hiddenLayers.forEach((size) => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(preparedData[0].output.length);\n\n    this.initialize();\n  }\n\n  updateTrainingOptions(trainOpts: Partial<INeuralNetworkTrainOptions>): void {\n    const merged = { ...this.trainOpts, ...trainOpts };\n    this.validateTrainingOptions(merged);\n    this.trainOpts = merged;\n    this.setLogMethod(this.trainOpts.log);\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      activation: () => {\n        return ['sigmoid', 'relu', 'leaky-relu', 'tanh'].includes(\n          options.activation\n        );\n      },\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      leakyReluAlpha: () => {\n        const val = options.leakyReluAlpha;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      momentum: () => {\n        const val = options.momentum;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n      praxis: () => {\n        const val = options.praxis;\n        return !val || val === 'adam';\n      },\n      beta1: () => {\n        const val = options.beta1;\n        return val > 0 && val < 1;\n      },\n      beta2: () => {\n        const val = options.beta2;\n        return val > 0 && val < 1;\n      },\n      epsilon: () => {\n        const val = options.epsilon;\n        return val > 0 && val < 1;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON(): INeuralNetworkTrainOptionsJSON {\n    const {\n      activation,\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    } = this.trainOpts;\n    return {\n      activation,\n      iterations,\n      errorThresh,\n      log:\n        typeof log === 'function'\n          ? true\n          : typeof log === 'boolean'\n          ? log\n          : false,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout: timeout === Infinity ? 'Infinity' : timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    };\n  }\n\n  setLogMethod(log: boolean | ((state: INeuralNetworkState) => void)): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  logTrainingStatus(status: INeuralNetworkState): void {\n    console.log(\n      `iterations: ${status.iterations}, training error: ${status.error}`\n    );\n  }\n\n  calculateTrainingError(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): number {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true) as number;\n    }\n    return sum / data.length;\n  }\n\n  trainPatterns(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  trainingTick(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>,\n    status: INeuralNetworkState,\n    endTime: number\n  ): boolean {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (\n      status.iterations >= iterations ||\n      status.error <= errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && status.iterations % logPeriod === 0) {\n      status.error = this.calculateTrainingError(data);\n      (log as (state: INeuralNetworkState) => void)(status);\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this.calculateTrainingError(data);\n    } else {\n      this.trainPatterns(data);\n    }\n\n    if (callback && status.iterations % callbackPeriod === 0) {\n      callback({\n        iterations: status.iterations,\n        error: status.error,\n      });\n    }\n    return true;\n  }\n\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkPreppedTrainingData<Float32Array> {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n    this.validateData(preparedData);\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkState {\n    const { preparedData, status, endTime } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>,\n      options\n    );\n\n    while (true) {\n      if (!this.trainingTick(preparedData, status, endTime)) {\n        break;\n      }\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this.prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this.trainingTick(preparedData, status, endTime) ||\n              thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  trainPattern(\n    value: INeuralNetworkDatumFormatted<Float32Array>,\n    logErrorRate?: boolean\n  ): number | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  _calculateDeltasSigmoid(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        const output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  _calculateDeltasRelu(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  _calculateDeltasLeakyRelu(target: Float32Array): void {\n    const alpha = this.trainOpts.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  _calculateDeltasTanh(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights(): void {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        const delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = learningRate * delta * incoming[k] + momentum * change;\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam(): void {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam(): void {\n    this.iterations++;\n\n    const { iterations } = this;\n    const { beta1, beta2, epsilon, learningRate } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow =\n            currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh =\n            currentChangesHigh[node][k] * beta2 +\n            (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection =\n            changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection =\n            changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] +=\n            (learningRate * momentumCorrection) /\n            (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow =\n          currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh =\n          currentBiasChangesHigh[node] * beta2 +\n          (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection =\n          currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection =\n          currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] +=\n          (learningRate * biasMomentumCorrection) /\n          (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  validateData(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    const inputSize = this.sizes[0];\n    const outputSize = this.sizes[this.sizes.length - 1];\n    const { length } = data;\n    for (let i = 0; i < length; i++) {\n      const { input, output } = data[i];\n      if (input.length !== inputSize) {\n        throw new Error(\n          `input at index ${i} length ${input.length} must be ${inputSize}`\n        );\n      }\n      if (data[i].output.length !== outputSize) {\n        throw new Error(\n          `output at index ${i} length ${output.length} must be ${outputSize}`\n        );\n      }\n    }\n  }\n\n  validateInput(formattedInput: Float32Array): void {\n    const inputSize = this.sizes[0];\n    if (formattedInput.length !== inputSize) {\n      throw new Error(\n        `input length ${formattedInput.length} must match options.inputSize of ${inputSize}`\n      );\n    }\n  }\n\n  formatData(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>\n  ): Array<INeuralNetworkDatumFormatted<Float32Array>> {\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (!this._formatInput) {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n    }\n\n    if (!this._formatOutput) {\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    if (this._formatInput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (data[i].output as unknown) as Float32Array,\n        });\n      }\n      return result;\n    }\n    if (this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (data[i].input as unknown) as Float32Array,\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    return (data as unknown) as Array<\n      INeuralNetworkDatumFormatted<Float32Array>\n    >;\n  }\n\n  addFormat(data: INeuralNetworkDatum<InputType, OutputType>): void {\n    if (!Array.isArray(data.input) || typeof data.input[0] !== 'number') {\n      this.inputLookup = lookup.addKeys(\n        (data.input as unknown) as INumberHash,\n        this.inputLookup ?? {}\n      );\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n    }\n    if (!Array.isArray(data.output) || typeof data.output[0] !== 'number') {\n      this.outputLookup = lookup.addKeys(\n        (data.output as unknown) as INumberHash,\n        this.outputLookup ?? {}\n      );\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      }\n    }\n  }\n\n  test(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>\n  ): INeuralNetworkTestResult | INeuralNetworkBinaryTestResult {\n    const { preparedData } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>\n    );\n    // for binary classification problems with one output node\n    const isBinary = preparedData[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < preparedData.length; i++) {\n        const output = this.runInput(preparedData[i].input);\n        const target = preparedData[i].output;\n        const actual = output[0] > this.options.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = preparedData[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected,\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(\n          output.map((value, i) => {\n            return target[i] - value;\n          })\n        );\n      }\n\n      return {\n        error: errorSum / preparedData.length,\n        misclasses,\n        total: preparedData.length,\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / preparedData.length,\n      };\n    }\n\n    for (let i = 0; i < preparedData.length; i++) {\n      const output = this.runInput(preparedData[i].input);\n      const target = preparedData[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = preparedData[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected,\n        });\n      }\n\n      errorSum += mse(\n        output.map((value, i) => {\n          return target[i] - value;\n        })\n      );\n    }\n    return {\n      error: errorSum / preparedData.length,\n      misclasses,\n      total: preparedData.length,\n    };\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (!this.isRunnable) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return layerWeights.map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(layerBiases)\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    const outputLength = this.sizes.length - 1;\n    for (let i = 0; i <= outputLength; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetwork',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n\n  fromJSON(json: INeuralNetworkJSON): this {\n    this.options = { ...defaults(), ...json.options };\n    if (json.hasOwnProperty('trainOpts')) {\n      const trainOpts = {\n        ...json.trainOpts,\n        timeout:\n          json.trainOpts.timeout === 'Infinity'\n            ? Infinity\n            : json.trainOpts.timeout,\n      };\n      this.updateTrainingOptions(trainOpts);\n    }\n    this.sizes = json.sizes;\n    this.initialize();\n\n    this.inputLookup = json.inputLookup ? { ...json.inputLookup } : null;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup ? { ...json.outputLookup } : null;\n    this.outputLookupLength = json.outputLookupLength;\n\n    const jsonLayers = json.layers;\n    const layerWeights = this.weights.map((layerWeights, layerIndex) => {\n      return jsonLayers[layerIndex].weights.map((layerWeights) =>\n        Float32Array.from(layerWeights)\n      );\n    });\n    const layerBiases = this.biases.map((layerBiases, layerIndex) =>\n      Float32Array.from(jsonLayers[layerIndex].biases)\n    );\n    for (let i = 0; i <= this.outputLayer; i++) {\n      this.weights[i] = layerWeights[i] || [];\n      this.biases[i] = layerBiases[i] || [];\n    }\n    return this;\n  }\n\n  toFunction(\n    cb?: (source: string) => string\n  ): (input: Partial<InputType>) => OutputType {\n    const { activation, leakyReluAlpha } = this.trainOpts;\n    let needsVar = false;\n    const nodeHandle = (layerIndex: number, nodeIndex: number): string => {\n      if (layerIndex === 0) {\n        return `(input[${nodeIndex}]||0)`;\n      }\n\n      const weights: Float32Array = this.weights[layerIndex][nodeIndex];\n      const bias: number = this.biases[layerIndex][nodeIndex];\n      if (!weights) {\n        throw new Error(\n          `weights at layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      if (!bias) {\n        throw new Error(\n          `bias as layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      const weightsArray: string[] = [];\n      weights.forEach((weight: number, subNodeIndex: number): void => {\n        if (weight < 0) {\n          weightsArray.push(\n            `${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        } else {\n          weightsArray.push(\n            `+${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        }\n      });\n      const result = `(${bias.toString()}${weightsArray.join('')})`;\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `Math.max((v=${result}),${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result})`;\n        default:\n          throw new Error(\n            `Unknown activation ${activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n          );\n      }\n    };\n\n    function checkKeys(keys: string[]): void {\n      if (keys.find((v) => v.includes('\"'))) {\n        throw new Error(`key contains '\"', which is not compatible`);\n      }\n    }\n\n    const layersAsMath: string[] = [];\n    let result: string;\n\n    let inputLookup = '';\n    if (this.inputLookup) {\n      const keys = Object.keys(this.inputLookup);\n      checkKeys(keys);\n      inputLookup = `input = new Float32Array([${Object.keys(this.inputLookup)\n        .map((key) => `input[\"${key}\"]`)\n        .join(',')}]);`;\n    }\n    if (this.sizes.length < 1) throw new Error('No layers');\n    for (\n      let nodeIndex = 0;\n      nodeIndex < this.sizes[this.outputLayer];\n      nodeIndex++\n    ) {\n      layersAsMath.push(nodeHandle(this.outputLayer, nodeIndex));\n    }\n    if (this.outputLookup) {\n      const keys = Object.keys(this.outputLookup);\n      checkKeys(keys);\n      const values = keys\n        .map((key, i) => `\"${key}\":${layersAsMath[i]}`)\n        .join(',');\n      result = `{${values}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${inputLookup}${needsVar ? 'var v;' : ''}return ${result};`;\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n    return new Function('input', cb ? cb(source) : source) as (\n      input: Partial<InputType>\n    ) => OutputType;\n  }\n}\n","import {\n  GPU,\n  IConstantsThis,\n  IGPUKernelSettings,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  Input,\n  ISubKernelObject,\n  KernelFunction,\n  KernelOutput,\n  OutputDimensions,\n  Texture,\n  ThreadFunction,\n  ThreadKernelVariable,\n} from 'gpu.js';\n\nlet gpuInstance: GPU | null = null;\n\n/**\n * Sets up the gpu.js instance\n */\nexport function setup(value: GPU): void {\n  gpuInstance = value;\n}\n\n/**\n * Destroys any existing gpu.js instance\n */\nexport function teardown(): void {\n  if (gpuInstance !== null) {\n    gpuInstance.destroy().catch(console.log);\n  }\n  gpuInstance = null;\n}\n\nexport function makeKernel<\n  ArgTypes extends ThreadKernelVariable[] = ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis = IConstantsThis\n>(\n  fn: KernelFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings & { constants?: ConstantsTypes }\n): IKernelRunShortcut {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernel<ArgTypes, ConstantsTypes>(fn, settings)\n    .setPipeline(true);\n}\n\nexport function makeKernelMap<\n  ArgTypes extends ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis\n>(\n  map: ISubKernelObject,\n  fn: ThreadFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings & { constants?: ConstantsTypes }\n): IKernelMapRunShortcut<ISubKernelObject> {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernelMap<ArgTypes, ConstantsTypes>(map, fn, settings)\n    .setPipeline(true);\n}\n\n/**\n * Compiles a function into a gpu.js dev mode kernel\n */\n// export function makeDevKernel(\n//   fn: ThreadFunction,\n//   settings: makeKernelSettings\n// ): IKernelRunShortcut {\n//   if ('map' in settings) {\n//     throw new Error('map kernels are not supported by dev kernels');\n//   }\n//   const gpu = new GPU({ mode: 'dev' });\n//   return gpu.createKernel(fn, settings);\n// }\n\nexport function kernelInput(value: number[], size: OutputDimensions): Input {\n  return new Input(value, size);\n}\n\n/**\n * Deletes a gpu.js texture and frees VRAM\n */\nexport function release(possibleTexture: KernelOutput | Input): void {\n  if (possibleTexture instanceof Texture) {\n    possibleTexture.delete();\n  }\n}\n\n/**\n * Cleans ie sets all elements to 0 of a Texture or a js array\n */\nexport function clear(value: KernelOutput): void {\n  if (value instanceof Texture) {\n    value.clear();\n    return;\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      (value as number[]).fill(0);\n    } else if (typeof value[0][0] === 'number') {\n      for (let x = 0; x < value.length; x++) {\n        (value[x] as number[]).fill(0);\n      }\n      return;\n    } else if (typeof value[0][0][0] === 'number') {\n      // cube\n      for (let y = 0; y < value.length; y++) {\n        const row: number[][] = value[y] as number[][];\n        for (let x = 0; x < row.length; x++) {\n          row[x].fill(0);\n        }\n      }\n      return;\n    }\n  }\n\n  if (value instanceof Float32Array) {\n    value.fill(0);\n    return;\n  }\n\n  throw new Error('unhandled value');\n}\n\n/**\n * Clones a value\n */\nexport function clone(value: KernelOutput): KernelOutput {\n  if (value instanceof Texture) {\n    return value.clone();\n  }\n  if (value instanceof Float32Array) {\n    return value.slice(0);\n  }\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      return value.slice(0);\n    } else if (typeof value[0][0] === 'number') {\n      const matrix = new Array(value.length);\n      for (let x = 0; x < value.length; x++) {\n        matrix[x] = (value[x] as Float32Array).slice(0);\n      }\n      return matrix;\n    } else if (typeof value[0][0][0] === 'number') {\n      const cube = new Array(value.length);\n      for (let y = 0; y < value.length; y++) {\n        const row = value[y] as number[][];\n        const matrix = new Array(row.length);\n        for (let x = 0; x < row.length; x++) {\n          matrix[x] = row[x].slice(0);\n        }\n      }\n      return cube;\n    }\n  }\n  throw new Error('unhandled value');\n}\n","import {\n  alias,\n  GPU,\n  GPUFunction,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IMappedKernelResult,\n  KernelOutput,\n  Texture,\n  utils,\n} from 'gpu.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  IJSONLayer,\n  INeuralNetworkData,\n  INeuralNetworkDatum,\n  INeuralNetworkJSON,\n  INeuralNetworkOptions,\n  INeuralNetworkPreppedTrainingData,\n  INeuralNetworkTrainOptions,\n  NeuralNetwork,\n} from './neural-network';\nimport { release } from './utilities/kernel';\n\nexport interface INeuralNetworkGPUDatumFormatted {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface INeuralNetworkGPUPreppedTrainingData\n  extends INeuralNetworkPreppedTrainingData<KernelOutput> {\n  status: ITrainingStatus;\n  endTime: number;\n}\n\ninterface ISizedKernelThis extends IKernelFunctionThis {\n  constants: {\n    size: number;\n  };\n}\n\nfunction weightedSumSigmoid(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output: number, target: number): number {\n  return target - output;\n}\n\nfunction calcDeltasSigmoid(error: number, output: number): number {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error: number, output: number): number {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error: number, output: number): number {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error: number, output: number): number {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(\n  x: number,\n  size: number,\n  nextWeights: number[][],\n  nextDeltas: number[]\n): number {\n  let error = 0;\n  for (let k = 0; k < size; k++) {\n    error += nextDeltas[k] * nextWeights[k][x];\n  }\n  return error;\n}\n\ninterface ILearningKernelThis extends IKernelFunctionThis {\n  constants: {\n    momentum: number;\n    learningRate: number;\n  };\n}\n\nfunction calcChanges(\n  learningRate: number,\n  momentum: number,\n  previousChange: number,\n  delta: number,\n  previousOutput: number\n): number {\n  return learningRate * delta * previousOutput + momentum * previousChange;\n}\n\nfunction addWeights(change: number, weight: number): number {\n  return change + weight;\n}\n\nfunction addBiases(\n  this: ILearningKernelThis,\n  biases: number[],\n  deltas: number[]\n): number {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(this: ISizedKernelThis, errors: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\nexport interface INeuralNetworkGPUOptions extends INeuralNetworkOptions {\n  mode?: 'cpu' | 'gpu';\n}\n\nexport type BackPropagateOutput = (\n  this: IKernelFunctionThis,\n  outputs: KernelOutput,\n  targets: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport type BackPropagateLayer = (\n  this: IKernelFunctionThis,\n  weights: KernelOutput,\n  outputs: KernelOutput,\n  deltas: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport class NeuralNetworkGPU<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> extends NeuralNetwork<InputType, OutputType> {\n  gpu: GPU;\n\n  texturizeInputData: (value: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  forwardPropagate: Array<\n    (\n      weights: KernelOutput,\n      biases: KernelOutput,\n      inputs: KernelOutput\n    ) => KernelOutput\n  > = [];\n\n  backwardPropagate: Array<BackPropagateOutput | BackPropagateLayer> = [];\n\n  changesPropagate: Array<\n    ((\n      this: IKernelFunctionThis<{\n        size: number;\n        learningRate: number;\n        momentum: number;\n      }>,\n      previousOutputs: number[],\n      deltas: number[],\n      weights: number[][],\n      previousChanges: number[][]\n    ) => IMappedKernelResult) &\n      IKernelMapRunShortcut<{ weights: number[][]; changes: number[][] }>\n  > = [];\n\n  biasesPropagate: Array<\n    (biases: KernelOutput, deltas: KernelOutput) => KernelOutput\n  > = [];\n\n  getMSE: (error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _addMSE: (sum: KernelOutput, error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _divideMSESum: (length: number, sum: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  outputs: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  deltas: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  errors: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  weights: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  changes: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  biases: KernelOutput[] = [];\n\n  constructor(options: Partial<INeuralNetworkGPUOptions> = {}) {\n    super(options);\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation(): void {}\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(\n    value: INeuralNetworkGPUDatumFormatted,\n    logErrorRate?: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  calculateTrainingError(data: INeuralNetworkGPUDatumFormatted[]): number {\n    let sum = new Float32Array([0]) as KernelOutput;\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true) as KernelOutput;\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum);\n    release(sum);\n    return (result instanceof Texture\n      ? (result.toArray() as number[])\n      : (result as number[]))[0];\n  }\n\n  adjustWeights(): void {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput(): void {\n    let weightedSum = null;\n\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n        immutable: true,\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  runInput = (input: KernelOutput): KernelOutput => {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  };\n\n  buildCalculateDeltas(): void {\n    let calcDeltas: GPUFunction<[number, number]>;\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    calcDeltas = alias(\n      utils.getMinifySafeName(() => calcDeltas),\n      calcDeltas\n    );\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput,\n          },\n          function (\n            this: IKernelFunctionThis,\n            outputs: number[],\n            targets: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            const target = targets[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcErrorOutput(output, target), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true,\n          }\n        );\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError,\n          },\n          function (\n            this: ISizedKernelThis,\n            nextWeights: number[][],\n            outputs: number[],\n            nextDeltas: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(\n              calcError(\n                this.thread.x,\n                this.constants.size,\n                nextWeights,\n                nextDeltas\n              ),\n              output\n            );\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.sizes[layer + 1],\n            },\n            immutable: true,\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas = (target: KernelOutput): void => {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      let output;\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  };\n\n  buildGetChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges,\n        },\n        function (\n          this: IKernelFunctionThis<{\n            size: number;\n            learningRate: number;\n            momentum: number;\n          }>,\n          previousOutputs: number[],\n          deltas: number[],\n          weights: number[][],\n          previousChanges: number[][]\n        ) {\n          const change = calcChanges(\n            this.constants.learningRate,\n            this.constants.momentum,\n            previousChanges[this.thread.y][this.thread.x],\n            deltas[this.thread.y],\n            previousOutputs[this.thread.x]\n          );\n          return addWeights(change, weights[this.thread.y][this.thread.x]);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1],\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  getChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n        immutable: true,\n      });\n    }\n  }\n\n  changeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE(): void {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n      pipeline: true,\n      immutable: true,\n    });\n    this._addMSE = this.gpu.createKernel(\n      function (value1: number[], value2: number[]): number {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    this._divideMSESum = this.gpu.createKernel(\n      function (length: number, mseSum: number[]): number {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n      }\n    );\n  }\n\n  run(input: InputType): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const outputTextures = this.runInput(formattedInput);\n    const output =\n      outputTextures instanceof Texture\n        ? outputTextures.toArray()\n        : outputTextures;\n\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output as Float32Array\n      ) as unknown) as OutputType;\n    }\n\n    return (output as unknown) as OutputType;\n  }\n\n  // @ts-expect-error the underlying network works as normal, but we are working on the GPU\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkGPUPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [preparedData[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    return {\n      preparedData: preparedData.map((set) => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(): (input: InputType) => OutputType {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return (layerWeights instanceof Texture\n        ? (layerWeights.toArray() as Float32Array[])\n        : (layerWeights as Float32Array[])\n      ).map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(\n        layerBiases instanceof Texture\n          ? (layerBiases.toArray() as Float32Array)\n          : (layerBiases as Float32Array)\n      )\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    for (let i = 0; i <= this.outputLayer; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetworkGPU',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n}\n","export class UntrainedNeuralNetworkError<\n  T extends { constructor: { name: string } }\n> extends Error {\n  constructor(neuralNetwork: T) {\n    super(\n      `Cannot run a ${neuralNetwork.constructor.name} before it is trained.`\n    );\n  }\n}\n","import { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport {\n  IJSONLayer,\n  INeuralNetworkData,\n  INeuralNetworkDatum,\n  INeuralNetworkTrainOptions,\n} from './neural-network';\nimport {\n  INeuralNetworkGPUOptions,\n  NeuralNetworkGPU,\n} from './neural-network-gpu';\nimport { INeuralNetworkState } from './neural-network-types';\nimport { UntrainedNeuralNetworkError } from './errors/untrained-neural-network-error';\n\nexport interface IAEOptions {\n  binaryThresh: number;\n  decodedSize: number;\n  hiddenLayers: number[];\n}\n\n/**\n * An autoencoder learns to compress input data down to relevant features and reconstruct input data from its compressed representation.\n */\nexport class AE<\n  DecodedData extends INeuralNetworkData,\n  EncodedData extends INeuralNetworkData\n> {\n  private decoder?: NeuralNetworkGPU<EncodedData, DecodedData>;\n  private readonly denoiser: NeuralNetworkGPU<DecodedData, DecodedData>;\n\n  constructor(options?: Partial<IAEOptions>) {\n    // Create default options for the autoencoder.\n    options ??= {};\n\n    // Create default options for the autoencoder's denoiser subnet.\n    const denoiserOptions: Partial<INeuralNetworkGPUOptions> = {};\n\n    // Inherit the binary threshold of the parent autoencoder.\n    denoiserOptions.binaryThresh = options.binaryThresh;\n    // Inherit the hidden layers of the parent autoencoder.\n    denoiserOptions.hiddenLayers = options.hiddenLayers;\n\n    // Define the denoiser subnet's input and output sizes.\n    if (options.decodedSize)\n      denoiserOptions.inputSize = denoiserOptions.outputSize =\n        options.decodedSize;\n\n    // Create the denoiser subnet of the autoencoder.\n    this.denoiser = new NeuralNetworkGPU<DecodedData, DecodedData>(options);\n  }\n\n  /**\n   * Denoise input data, removing any anomalies from the data.\n   * @param {DecodedData} input\n   * @returns {DecodedData}\n   */\n  denoise(input: DecodedData): DecodedData {\n    // Run the input through the generic denoiser.\n    // This isn't the best denoiser implementation, but it's efficient.\n    // Efficiency is important here because training should focus on\n    // optimizing for feature extraction as quickly as possible rather than\n    // denoising and anomaly detection; there are other specialized topologies\n    // better suited for these tasks anyways, many of which can be implemented\n    // by using an autoencoder.\n    return this.denoiser.run(input);\n  }\n\n  /**\n   * Decode `EncodedData` into an approximation of its original form.\n   *\n   * @param {EncodedData} input\n   * @returns {DecodedData}\n   */\n  decode(input: EncodedData): DecodedData {\n    // If the decoder has not been trained yet, throw an error.\n    if (!this.decoder) throw new UntrainedNeuralNetworkError(this);\n\n    // Decode the encoded input.\n    return this.decoder.run(input);\n  }\n\n  /**\n   * Encode data to extract features, reduce dimensionality, etc.\n   *\n   * @param {DecodedData} input\n   * @returns {EncodedData}\n   */\n  encode(input: DecodedData): EncodedData {\n    // If the decoder has not been trained yet, throw an error.\n    if (!this.denoiser) throw new UntrainedNeuralNetworkError(this);\n\n    // Process the input.\n    this.denoiser.run(input);\n\n    // Get the auto-encoded input.\n    let encodedInput: TextureArrayOutput = this\n      .encodedLayer as TextureArrayOutput;\n\n    // If the encoded input is a `Texture`, convert it into an `Array`.\n    if (encodedInput instanceof Texture) encodedInput = encodedInput.toArray();\n    else encodedInput = encodedInput.slice(0);\n\n    // Return the encoded input.\n    return encodedInput as EncodedData;\n  }\n\n  /**\n   * Test whether or not a data sample likely contains anomalies.\n   * If anomalies are likely present in the sample, returns `true`.\n   * Otherwise, returns `false`.\n   *\n   * @param {DecodedData} input\n   * @returns {boolean}\n   */\n  likelyIncludesAnomalies(input: DecodedData, anomalyThreshold = 0.2): boolean {\n    // Create the anomaly vector.\n    const anomalies: number[] = [];\n\n    // Attempt to denoise the input.\n    const denoised = this.denoise(input);\n\n    // Calculate the anomaly vector.\n    for (let i = 0; i < (input.length ?? 0); i++) {\n      anomalies[i] = Math.abs(\n        (input as number[])[i] - (denoised as number[])[i]\n      );\n    }\n\n    // Calculate the sum of all anomalies within the vector.\n    const sum = anomalies.reduce(\n      (previousValue, value) => previousValue + value\n    );\n\n    // Calculate the mean anomaly.\n    const mean = sum / (input as number[]).length;\n\n    // Return whether or not the mean anomaly rate is greater than the anomaly threshold.\n    return mean > anomalyThreshold;\n  }\n\n  /**\n   * Train the auto encoder.\n   *\n   * @param {DecodedData[]} data\n   * @param {Partial<INeuralNetworkTrainOptions>} options\n   * @returns {INeuralNetworkState}\n   */\n  train(\n    data: DecodedData[],\n    options?: Partial<INeuralNetworkTrainOptions>\n  ): INeuralNetworkState {\n    const preprocessedData: Array<INeuralNetworkDatum<\n      Partial<DecodedData>,\n      Partial<DecodedData>\n    >> = [];\n\n    for (const datum of data) {\n      preprocessedData.push({ input: datum, output: datum });\n    }\n\n    const results = this.denoiser.train(preprocessedData, options);\n\n    this.decoder = this.createDecoder();\n\n    return results;\n  }\n\n  /**\n   * Create a new decoder from the trained denoiser.\n   *\n   * @returns {NeuralNetworkGPU<EncodedData, DecodedData>}\n   */\n  private createDecoder() {\n    const json = this.denoiser.toJSON();\n\n    const layers: IJSONLayer[] = [];\n    const sizes: number[] = [];\n\n    for (let i = this.encodedLayerIndex; i < this.denoiser.sizes.length; i++) {\n      layers.push(json.layers[i]);\n      sizes.push(json.sizes[i]);\n    }\n\n    json.layers = layers;\n    json.sizes = sizes;\n\n    json.options.inputSize = json.sizes[0];\n\n    const decoder = new NeuralNetworkGPU().fromJSON(json);\n\n    return (decoder as unknown) as NeuralNetworkGPU<EncodedData, DecodedData>;\n  }\n\n  /**\n   * Get the layer containing the encoded representation.\n   */\n  private get encodedLayer(): KernelOutput {\n    return this.denoiser.outputs[this.encodedLayerIndex];\n  }\n\n  /**\n   * Get the offset of the encoded layer.\n   */\n  private get encodedLayerIndex(): number {\n    return Math.round(this.denoiser.outputs.length * 0.5) - 1;\n  }\n}\n\nexport default AE;\n","import {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\n\nexport type InitClassifier<\n  TrainOptsType,\n  JsonType,\n  DatumType\n> = () => IClassifier<TrainOptsType, JsonType, DatumType>;\n\nexport interface IClassifier<TrainOptsType, JsonType, DatumType> {\n  trainOpts: TrainOptsType;\n  toJSON: () => JsonType;\n  fromJSON: (json: JsonType) => this;\n  train: (\n    data: DatumType[],\n    options?: Partial<TrainOptsType>\n  ) => INeuralNetworkState;\n  test: (\n    data: DatumType[]\n  ) => INeuralNetworkTestResult | INeuralNetworkBinaryTestResult;\n  initialize: () => void;\n}\n\nexport type ICrossValidateJSON<JsonType> =\n  | ICrossValidateStats<JsonType>\n  | ICrossValidateBinaryStats<JsonType>;\n\nexport interface ICrossValidateStatsAverages {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  error: number;\n}\n\nexport interface ICrossValidateStats<JsonType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultStats;\n  sets: Array<ICrossValidationTestPartitionResults<JsonType>>;\n}\n\nexport interface ICrossValidateBinaryStats<NetworkType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultBinaryStats;\n  sets: Array<ICrossValidationTestPartitionBinaryResults<NetworkType>>;\n}\n\nexport interface ICrossValidateStatsResultStats {\n  total: number;\n  testSize: number;\n  trainSize: number;\n}\n\nexport interface ICrossValidateStatsResultBinaryStats\n  extends ICrossValidateStatsResultStats {\n  total: number;\n  truePos: number;\n  trueNeg: number;\n  falsePos: number;\n  falseNeg: number;\n  precision: number;\n  recall: number;\n  accuracy: number;\n}\n\nexport interface ICrossValidationTestPartitionResults<JsonType>\n  extends INeuralNetworkTestResult {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  network: JsonType;\n  total: number;\n}\n\nexport type ICrossValidationTestPartitionBinaryResults<\n  JsonType\n> = INeuralNetworkBinaryTestResult &\n  ICrossValidationTestPartitionResults<JsonType>;\n\nexport default class CrossValidate<\n  InitClassifierType extends InitClassifier<\n    ReturnType<InitClassifierType>['trainOpts'],\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>,\n    Parameters<ReturnType<InitClassifierType>['train']>[0][0]\n  >\n> {\n  initClassifier: InitClassifierType;\n  json: ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > = {\n    avgs: {\n      error: 0,\n      iterations: 0,\n      testTime: 0,\n      trainTime: 0,\n    },\n    stats: {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    },\n    sets: [],\n  };\n\n  constructor(initClassifier: InitClassifierType) {\n    this.initClassifier = initClassifier;\n  }\n\n  testPartition(\n    trainOpts: Parameters<ReturnType<InitClassifierType>['train']>[1],\n    trainSet: Parameters<ReturnType<InitClassifierType>['train']>[0],\n    testSet: Parameters<ReturnType<InitClassifierType>['train']>[0]\n  ):\n    | ICrossValidationTestPartitionResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      >\n    | ICrossValidationTestPartitionBinaryResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      > {\n    const classifier = this.initClassifier();\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats:\n      | INeuralNetworkTestResult\n      | INeuralNetworkBinaryTestResult = classifier.test(testSet);\n    const endTest = Date.now();\n    return {\n      ...testStats,\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      network: (classifier as {\n        toJSON: () => ReturnType<ReturnType<InitClassifierType>['toJSON']>;\n      }).toJSON(),\n    };\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray<K>(array: K[]): K[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  static isBinaryStats = (\n    stats: ICrossValidateStatsResultStats | ICrossValidateStatsResultBinaryStats\n  ): stats is ICrossValidateStatsResultBinaryStats => {\n    return (\n      (stats as ICrossValidateStatsResultBinaryStats).accuracy !== undefined\n    );\n  };\n\n  static isBinaryResults = <JsonType>(\n    stats: ICrossValidateStats<JsonType> | ICrossValidateBinaryStats<JsonType>\n  ): stats is ICrossValidateBinaryStats<JsonType> =>\n    (stats as ICrossValidateBinaryStats<JsonType>).stats.accuracy !== undefined;\n\n  static isBinaryPartitionResults = <JsonType>(\n    stats:\n      | ICrossValidationTestPartitionResults<JsonType>\n      | ICrossValidationTestPartitionBinaryResults<JsonType>\n  ): stats is ICrossValidationTestPartitionBinaryResults<JsonType> =>\n    (stats as ICrossValidationTestPartitionBinaryResults<JsonType>).accuracy !==\n    undefined;\n\n  train(\n    data: Array<Parameters<ReturnType<InitClassifierType>['train']>[0][0]>,\n    trainOpts: Partial<\n      Parameters<ReturnType<InitClassifierType>['train']>[1]\n    > = {},\n    k = 4\n  ): ICrossValidateStats<ReturnType<InitClassifierType>['toJSON']> {\n    if (data.length < k) {\n      throw new Error(\n        `Training set size is too small for ${data.length} k folds of ${k}`\n      );\n    }\n    this.shuffleArray<unknown>(data);\n    const size = data.length / k;\n\n    const avgs: ICrossValidateStatsAverages = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0,\n    };\n\n    const stats:\n      | ICrossValidateStatsResultStats\n      | ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    };\n\n    const binaryStats: ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0,\n      precision: 0,\n      recall: 0,\n      accuracy: 0,\n    };\n\n    const results = [];\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg') &&\n          result.hasOwnProperty('falsePos') &&\n          result.hasOwnProperty('trueNeg') &&\n          result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      avgs.iterations += result.iterations;\n      avgs.testTime += result.testTime;\n      avgs.trainTime += result.trainTime;\n      avgs.error += result.error;\n      stats.total += result.total;\n      if (\n        CrossValidate.isBinaryStats(stats) &&\n        CrossValidate.isBinaryPartitionResults(result)\n      ) {\n        stats.accuracy += result.accuracy;\n        stats.falseNeg += result.falseNeg;\n        stats.falsePos += result.falsePos;\n        stats.precision += result.precision;\n        stats.recall += result.recall;\n        stats.trueNeg += result.trueNeg;\n        stats.truePos += result.truePos;\n      }\n\n      results.push(result);\n    }\n    avgs.error /= k;\n    avgs.iterations /= k;\n    avgs.testTime /= k;\n    avgs.trainTime /= k;\n\n    if (CrossValidate.isBinaryStats(stats)) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n    this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results,\n    };\n    return this.json as ICrossValidateStats<\n      ReturnType<InitClassifierType>['toJSON']\n    >;\n  }\n\n  toNeuralNetwork(): ReturnType<InitClassifierType> {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON(): ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > | null {\n    return this.json;\n  }\n\n  fromJSON(\n    crossValidateJson: ICrossValidateJSON<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >\n  ): ReturnType<InitClassifierType> {\n    const winningJSON:\n      | ICrossValidationTestPartitionResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        >\n      | ICrossValidationTestPartitionBinaryResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        > = (crossValidateJson as ICrossValidateStats<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >).sets.reduce((prev, cur) => (prev.error < cur.error ? prev : cur));\n    return (this.initClassifier() as ReturnType<InitClassifierType>).fromJSON(\n      winningJSON.network\n    );\n  }\n}\n","import { IKernelRunShortcut, IKernelFunctionThis } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\n\ninterface mse2dThis extends IKernelFunctionThis {\n  constants: { height: number; width: number; length: number };\n}\n\n/**\n * 2D Mean Squared Error\n */\nexport function mse2d(\n  this: mse2dThis,\n  errors: Array<[number, number]>\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n}\n\nexport class MeanSquaredError {\n  /** Calculate the mean squared error given an array of errors */\n  calculate: IKernelRunShortcut;\n  /** Returns the sum of absolute values of previuous error and previous layer errors */\n  addAbsolute: IKernelRunShortcut;\n  /** Adds two erros */\n  add: IKernelRunShortcut;\n  /** Returns the ratio of sum of errors and length (ie the average) */\n  divide: IKernelRunShortcut;\n\n  constructor({ width, height }: { width: number; height: number }) {\n    this.calculate = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width,\n        height,\n        length: width * height,\n      },\n      immutable: true,\n    });\n\n    this.addAbsolute = makeKernel(\n      function (prevError: number[], prevLayerErrors: number[][]) {\n        return prevError[0] + Math.abs(prevLayerErrors[0][0]);\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.add = makeKernel(\n      function (value1: number[], value2: number[]) {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.divide = makeKernel(\n      function (length: number, mseSum: number[]) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n  }\n}\n","import {\n  IKernelRunShortcut,\n  Input,\n  Kernel,\n  KernelOutput,\n  Texture,\n  TextureArrayOutput,\n} from 'gpu.js';\nimport { IPraxis, IPraxisSettings } from '../praxis/base-praxis';\nimport { clear } from '../utilities/kernel';\n\nexport interface ILayerJSON {\n  width?: number;\n  height?: number;\n  depth?: number;\n  weights?: number[] | number[][] | number[][][] | null;\n  type: string;\n  inputLayerIndex?: number;\n  inputLayer1Index?: number;\n  inputLayer2Index?: number;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n}\n\nexport interface ILayer {\n  width: number;\n  height: number;\n  depth: number;\n  weights: KernelOutput | Input;\n  deltas: KernelOutput;\n  praxis: IPraxis | null;\n  errors?: KernelOutput | null;\n  setupKernels: (training?: boolean) => void;\n  predictKernel: IKernelRunShortcut | null;\n  compareKernel: IKernelRunShortcut | null;\n  settings: Partial<ILayerSettings>;\n  reuseKernels: (layer: ILayer) => void;\n  predict: (inputs?: KernelOutput) => void;\n  compare: (targetValues?: KernelOutput) => void;\n  learn: ((learningRate?: number) => void) | ((learningRate: number) => void);\n  toJSON: () => Partial<ILayerJSON>;\n  inputLayer?: ILayer;\n  inputLayer1?: ILayer;\n  inputLayer2?: ILayer;\n  index?: number;\n  id?: string;\n}\n\nexport interface ILayerSettings {\n  width?: number | null;\n  height?: number | null;\n  depth?: number | null;\n  weights?: KernelOutput | null;\n  deltas?: KernelOutput | null;\n  id?: string;\n  praxis?: IPraxis | null;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n  initPraxis?:\n    | ((layerTemplate: ILayer, settings?: IPraxisSettings) => IPraxis)\n    | null;\n  cleanupDeltas?: boolean;\n}\n\nexport const baseLayerDefaultSettings: ILayerSettings = {\n  width: 1,\n  height: 1,\n  depth: null,\n  weights: null,\n  deltas: null,\n  praxis: null,\n  praxisOpts: null,\n  cleanupDeltas: true,\n};\n\nexport type BaseLayerType = new (settings?: Partial<ILayerSettings>) => ILayer;\n\nexport class BaseLayer implements ILayer {\n  praxis: IPraxis | null = null;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  settings: Partial<ILayerSettings>;\n\n  get width(): number {\n    return this.settings.width ?? 0;\n  }\n\n  get height(): number {\n    return this.settings.height ?? 0;\n  }\n\n  get depth(): number {\n    return this.settings.depth ?? 0;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n    if (this.settings.cleanupDeltas && this.deltas) {\n      clear(this.deltas);\n    }\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  get id(): string {\n    return this.settings.id ?? '';\n  }\n\n  set id(title: string) {\n    this.settings.id = title;\n  }\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    if (settings) {\n      this.settings = { ...baseLayerDefaultSettings, ...settings };\n    } else {\n      this.settings = { ...baseLayerDefaultSettings };\n    }\n    this.setupPraxis();\n  }\n\n  setupPraxis(): void {\n    const { initPraxis, praxis, praxisOpts } = this.settings;\n    if (!this.praxis) {\n      if (initPraxis) {\n        if (praxisOpts) {\n          this.praxis = initPraxis(this, praxisOpts);\n        } else {\n          this.praxis = initPraxis(this);\n        }\n      } else if (praxis) {\n        this.praxis = praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate(): void {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels(isTraining?: boolean): void {}\n\n  reuseKernels(layer: ILayer): void {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel') && layer.predictKernel !== null) {\n      if (!(layer.predictKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel') && layer.compareKernel !== null) {\n      if (!(layer.compareKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict(inputs?: KernelOutput): void {}\n\n  compare(targetValues?: KernelOutput): void {}\n\n  learn(learningRate?: number): void {}\n\n  toArray(): TextureArrayOutput {\n    return Array.isArray(this.weights)\n      ? this.weights\n      : (this.weights as Texture).toArray();\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  static toJSON(layer: ILayer): Partial<ILayerJSON> {\n    const { weights } = layer;\n    return {\n      width: layer.width,\n      height: layer.height,\n      depth: layer.depth,\n      weights: toUntypedArray(\n        (weights && weights instanceof Texture\n          ? weights.toArray()\n          : weights) as\n          | Float32Array\n          | Float32Array[]\n          | Float32Array[][]\n          | number[]\n          | number[][]\n          | number[][][]\n          | null\n      ),\n      type: layer.constructor.name,\n      praxisOpts: layer.praxis ? layer.praxis.toJSON() : null,\n    };\n  }\n}\n\nfunction toUntypedArray(\n  weights:\n    | Float32Array\n    | Float32Array[]\n    | Float32Array[][]\n    | number[]\n    | number[][]\n    | number[][][]\n    | null\n): number[][][] | number[][] | number[] | null {\n  if (weights === null) return null;\n  if (Array.isArray(weights)) {\n    if (typeof weights[0] === 'number') {\n      return weights as number[];\n    } else if (Array.isArray(weights[0]) && typeof weights[0][0] === 'number') {\n      return weights as number[][];\n    } else if (\n      Array.isArray(weights[0][0]) &&\n      typeof weights[0][0][0] === 'number'\n    ) {\n      return weights as number[][][];\n    } else if (weights[0] instanceof Float32Array) {\n      const matrix = weights as Float32Array[];\n      return matrix.map((row: Float32Array) => {\n        return Array.from(row);\n      });\n    } else if (weights[0][0] instanceof Float32Array) {\n      const cube = weights as Float32Array[][];\n      return cube.map((matrix: Float32Array[]): number[][] => {\n        return matrix.map((row: Float32Array): number[] => {\n          return Array.from(row);\n        });\n      });\n    }\n  } else if (weights) {\n    return Array.from(weights);\n  }\n  throw new Error('unexpected value');\n}\n","import { zeros } from './zeros';\n\n/**\n * Returns a 2D tensor(matrix) of zeros\n */\nexport function zeros2D(width: number, height: number): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n}\n","import { zeros2D } from './zeros-2d';\n\n/**\n * Returns a 3D tensor of arrays\n */\nexport function zeros3D(\n  width: number,\n  height: number,\n  depth: number\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\n\nexport type ActivationType = new (\n  inputLayer: ILayer,\n  settings: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Activation extends BaseLayer {\n  inputLayer: ILayer;\n\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    const { width, height, depth } = this;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.validate();\n    if (depth > 0) {\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else if (height > 0) {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis();\n  }\n}\n","import { KernelOutput } from 'gpu.js';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport interface IFilterSettings extends ILayerSettings {\n  filterCount: number;\n  filterWidth: number;\n  filterHeight: number;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport type FilterType = new (\n  settings: Partial<IFilterSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Filter extends BaseLayer {\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  get filterCount(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterWidth(): number {\n    return this.settings.filterWidth as number;\n  }\n\n  get filterHeight(): number {\n    return this.settings.filterHeight as number;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  settings: Partial<IFilterSettings>;\n  inputLayer: ILayer;\n  constructor(settings: Partial<IFilterSettings>, inputLayer: ILayer) {\n    super();\n    this.settings = settings;\n    this.inputLayer = inputLayer;\n  }\n}\n","import { BaseLayer, ILayer, ILayerJSON, ILayerSettings } from './base-layer';\nimport { IKernelRunShortcut, Input, KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport type InternalType = new (settings: Partial<ILayerSettings>) => ILayer;\n\nexport abstract class Internal implements ILayer {\n  abstract settings: ILayerSettings;\n  abstract predict(inputs?: KernelOutput): void;\n  abstract compare(targetValues?: KernelOutput): void;\n  abstract learn(learningRate?: number): void;\n  abstract setupKernels(training?: boolean): void;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  praxis: IPraxis | null = null;\n\n  get width(): number {\n    return this.settings.width as number;\n  }\n\n  get height(): number {\n    return this.settings.height as number;\n  }\n\n  get depth(): number {\n    return this.settings.depth as number;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  abstract reuseKernels(layer: ILayer): void;\n}\n","import { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport type ModifierType = new (\n  inputLayer: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Modifier extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super({\n      ...settings,\n      width: inputLayer.width,\n      height: inputLayer.height,\n      depth: inputLayer.depth,\n    });\n    this.inputLayer = inputLayer;\n  }\n\n  validate(): void {\n    super.validate();\n\n    if (this.width !== this.inputLayer.width) {\n      throw new Error(\n        `width of ${this.width} does not match inputLayer.width of ${this.inputLayer.width}`\n      );\n    }\n\n    if (this.height !== this.inputLayer.height) {\n      throw new Error(\n        `height of ${this.height} does not match inputLayer.height of ${this.inputLayer.height}`\n      );\n    }\n\n    if (this.depth !== (this.inputLayer.depth ?? 0)) {\n      throw new Error(\n        `depth of ${this.depth} does not match inputLayer.depth of ${this.inputLayer.depth}`\n      );\n    }\n  }\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\n\nexport type OperatorType = new (\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport abstract class Operator extends BaseLayer {\n  inputLayer1: ILayer;\n  inputLayer2: ILayer;\n  constructor(\n    inputLayer1: ILayer,\n    inputLayer2: ILayer,\n    settings?: Partial<ILayerSettings>\n  ) {\n    super(settings);\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis();\n  }\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport function compare1D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[]\n): number {\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] -\n    targetValues[this.thread.y][this.thread.x]\n  );\n}\n\nexport type TargetType = new (\n  settings: Partial<ILayerSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Target extends BaseLayer {\n  errors: KernelOutput;\n  inputLayer: ILayer;\n  constructor(settings: Partial<ILayerSettings>, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    if (this.depth) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.compareKernel = makeKernel(compare1D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    } else {\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    // TODO: should we clone here?\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  compare(targetValues: KernelOutput): void {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      targetValues\n    );\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis(): void {}\n}\n\nexport function target(settings: ILayerSettings, inputLayer: ILayer): Target {\n  return new Target(settings, inputLayer);\n}\n","import { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nexport { Activation } from './activation';\nexport { Filter } from './filter';\nexport { Internal } from './internal';\nexport { Modifier } from './modifier';\nexport { Operator } from './operator';\nexport { Target } from './target';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class InternalModel {}\n\nexport type EntryPointType = new (settings: Partial<ILayerSettings>) => ILayer;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class EntryPoint extends BaseLayer {}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Model extends BaseLayer {\n  learn(learningRate?: number): void {\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    if (!this.praxis) throw new Error('this.praxis not defined');\n    this.weights = this.praxis.run(this, learningRate as number);\n    release(oldWeights);\n  }\n}\n","import { ILayer } from '../layer';\nimport { IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface ILayerTemplate {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisJSON {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisSettings {\n  width?: number;\n  height?: number;\n  depth?: number;\n  kernel?: IKernelRunShortcut | null;\n}\n\nexport interface IPraxis {\n  layerTemplate: ILayerTemplate | null;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n  setupKernels: () => void;\n  width: number;\n  height: number;\n  depth: number;\n  run:\n    | ((layer: ILayer, learningRate: number) => KernelOutput)\n    | ((layer: ILayer, learningRate?: number) => KernelOutput);\n  toJSON: () => Partial<IPraxisSettings>;\n}\n\nexport abstract class BasePraxis implements IPraxis {\n  layerTemplate: ILayerTemplate;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n\n  get width(): number {\n    return this.layerTemplate.width;\n  }\n\n  get height(): number {\n    return this.layerTemplate.height;\n  }\n\n  get depth(): number {\n    return this.layerTemplate.depth;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IPraxisSettings> = {}\n  ) {\n    this.layerTemplate = layerTemplate;\n    this.settings = { ...settings };\n    this.kernel = null;\n  }\n\n  setupKernels(): void {}\n\n  reuseKernels(praxis: IPraxis): void {\n    if (praxis.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.width} is not ${this.width}`\n      );\n    }\n    if (praxis.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.height} is not ${this.height}`\n      );\n    }\n    if (praxis.hasOwnProperty('kernel')) {\n      this.kernel = praxis.kernel;\n    }\n  }\n\n  abstract run(layer: ILayer, learningRate?: number): KernelOutput;\n\n  toJSON(): Partial<IPraxisSettings> {\n    return { ...this.settings };\n  }\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface IUpdateThis extends IKernelFunctionThis {\n  constants: {\n    learningRate: number;\n  };\n}\n\nexport function update(\n  this: IUpdateThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] +\n    this.constants.learningRate * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport interface IArthurDeviationBiasesSettings extends IPraxisSettings {\n  learningRate?: number;\n}\n\nexport const defaultSettings = {\n  learningRate: 0.3,\n};\n\nexport class ArthurDeviationBiases extends BasePraxis {\n  settings: IArthurDeviationBiasesSettings;\n  kernel: IKernelRunShortcut | null;\n  constructor(layer: ILayer, settings?: IArthurDeviationBiasesSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.kernel = null;\n  }\n\n  run(layer: ILayer): KernelOutput {\n    return (this.kernel as IKernelRunShortcut)(layer.weights, layer.deltas);\n  }\n\n  setupKernels(): void {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.settings.learningRate ?? 0.01,\n      },\n    });\n  }\n}\n\nexport function arthurDeviationBiases(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationBiasesSettings>\n): ArthurDeviationBiases {\n  return new ArthurDeviationBiases(layer, settings);\n}\n","import { makeKernelMap } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  ISubKernelsResults,\n  KernelOutput,\n} from 'gpu.js';\n\nexport function updateChange(value: number): number {\n  return value;\n}\n\nexport interface IUpdateConstants extends IConstantsThis {\n  learningRate: number;\n  momentum: number;\n}\n\nexport function update(\n  this: IKernelFunctionThis<IUpdateConstants>,\n  changes: number[][],\n  weights: number[][],\n  incomingWeights: number[][],\n  inputDeltas: number[][]\n): number {\n  const lastChange: number = changes[this.thread.y][this.thread.x];\n  const inputDelta: number = inputDeltas[this.thread.y][0];\n  const weight: number = weights[this.thread.y][this.thread.x];\n  const incoming: number = incomingWeights[this.thread.x][0];\n\n  const change =\n    this.constants.learningRate * inputDelta * incoming +\n    this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nexport interface IArthurDeviationWeightsSettings extends IPraxisSettings {\n  learningRate?: number;\n  momentum?: number;\n  weightsLayer?: ILayer | null;\n  incomingLayer?: ILayer | null;\n  deltaLayer?: ILayer | null;\n}\n\nexport interface IKernelMapResults extends ISubKernelsResults {\n  changes: KernelOutput;\n}\n\nexport const defaultSettings: IArthurDeviationWeightsSettings = {\n  learningRate: 0.3,\n  momentum: 0.1,\n  weightsLayer: null,\n  incomingLayer: null,\n  deltaLayer: null,\n};\n\nexport class ArthurDeviationWeights extends BasePraxis {\n  changes: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: IArthurDeviationWeightsSettings;\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get momentum(): number {\n    return this.settings.momentum as number;\n  }\n\n  get weightsLayer(): ILayer {\n    return this.settings.weightsLayer as ILayer;\n  }\n\n  set weightsLayer(layer: ILayer) {\n    this.settings.weightsLayer = layer;\n  }\n\n  get deltaLayer(): ILayer {\n    return this.settings.deltaLayer as ILayer;\n  }\n\n  set deltaLayer(layer: ILayer) {\n    this.settings.deltaLayer = layer;\n  }\n\n  get incomingLayer(): ILayer {\n    return this.settings.incomingLayer as ILayer;\n  }\n\n  set incomingLayer(layer: ILayer) {\n    this.settings.incomingLayer = layer;\n  }\n\n  constructor(layer: ILayer, settings?: IArthurDeviationWeightsSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.changes = zeros2D(layer.width, layer.height);\n  }\n\n  run(): KernelOutput {\n    const output = (this.kernelMap as IKernelMapRunShortcut<IKernelMapResults>)(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap<Parameters<typeof update>, IUpdateConstants>(\n      {\n        changes: updateChange,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: this.learningRate,\n          momentum: this.momentum,\n        },\n      }\n    );\n  }\n}\n\nexport function arthurDeviationWeights(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationWeightsSettings>\n): ArthurDeviationWeights {\n  return new ArthurDeviationWeights(layer, settings);\n}\n","import { BasePraxis, ILayerTemplate, IPraxisSettings } from './base-praxis';\n\nimport { makeKernelMap, release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer } from '../layer';\n\nexport function getMomentum(\n  delta: number,\n  decay: number,\n  previousMomentum: number\n): number {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nexport function clipByValue(value: number, max: number, min: number): number {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\ninterface IUpdate extends IConstantsThis {\n  clipValue: number;\n  decayRate: number;\n  smoothEps: number;\n  regularizationStrength: number;\n}\n/**\n * @description Momentum Root Mean Square Propagation Function\n */\nexport function update(\n  this: IKernelFunctionThis<IUpdate>,\n  weights: number[][],\n  deltas: number[][],\n  previousMomenta: number[][]\n): number {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nexport function isClippedByValue(\n  value: number,\n  max: number,\n  min: number\n): number {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface IMomentumRootMeanSquaredPropagationSettings\n  extends IPraxisSettings {\n  decayRate?: number;\n  regularizationStrength?: number;\n  learningRate?: number;\n  smoothEps: number;\n  clipValue: number;\n}\n\nexport const defaults: IMomentumRootMeanSquaredPropagationSettings = {\n  decayRate: 0.999,\n  regularizationStrength: 0.000001,\n  learningRate: 0.01,\n  smoothEps: 1e-8,\n  clipValue: 5,\n};\n\nexport class MomentumRootMeanSquaredPropagation extends BasePraxis {\n  momenta: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>;\n\n  get clipValue(): number {\n    return this.settings.clipValue as number;\n  }\n\n  get decayRate(): number {\n    return this.settings.decayRate as number;\n  }\n\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get regularizationStrength(): number {\n    return this.settings.regularizationStrength as number;\n  }\n\n  get smoothEps(): number {\n    return this.settings.smoothEps as number;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IMomentumRootMeanSquaredPropagationSettings> = {}\n  ) {\n    super(layerTemplate);\n    this.settings = { ...defaults, ...settings };\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n  }\n\n  run(layer: ILayer): KernelOutput {\n    const { momenta, result } = (this.kernelMap as IKernelMapRunShortcut<\n      ISubKernelObject\n    >)(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap(\n      {\n        momenta: getMomentum,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          clipValue: this.clipValue,\n          decayRate: this.decayRate,\n          learningRate: this.learningRate,\n          regularizationStrength: this.regularizationStrength,\n          smoothEps: this.smoothEps,\n        },\n        functions: [clipByValue],\n        immutable: true,\n      }\n    );\n  }\n}\n\nexport function momentumRootMeanSquaredPropagation(\n  layer: ILayer,\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>\n): MomentumRootMeanSquaredPropagation {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n */\nexport const MRmsProp = MomentumRootMeanSquaredPropagation;\nexport const mRmsProp = momentumRootMeanSquaredPropagation;\n","import { ILayer } from '../layer/base-layer';\n\nexport function traverseLayersFrom(\n  layer: ILayer,\n  cb: (layer: ILayer) => void\n): void {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(\n      (layer as ILayer & { inputLayer: ILayer }).inputLayer,\n      cb\n    );\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer1: ILayer }).inputLayer1,\n        cb\n      );\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer2: ILayer }).inputLayer2,\n        cb\n      );\n    }\n  }\n  cb(layer);\n}\n","import { ILayer } from '../layer/base-layer';\nimport { traverseLayersFrom } from './traverse-layers-from';\n\nexport function flattenLayers(layers: ILayer[]): ILayer[] {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], (layer: ILayer) => {\n      if (!result.includes(layer)) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","import { ILayer } from '../layer/base-layer';\n\nexport function checkSameSize(layer1: ILayer, layer2: ILayer): void {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${layer2.width}`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${layer2.height}`\n    );\n  }\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { Operator } from './operator';\nimport { IKernelFunctionThis, IKernelRunShortcut, Texture } from 'gpu.js';\nimport { ILayerSettings, ILayer } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputWeights1: number[][],\n  inputWeights2: number[][]\n): number {\n  return (\n    inputWeights1[this.thread.y][this.thread.x] +\n    inputWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport class Add extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    // TODO: Do we need release and clone here?\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n}\n\nexport function add(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Add {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n","import { randos2D } from '../utilities/randos';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { baseLayerDefaultSettings, ILayer, ILayerSettings } from './base-layer';\nimport { Model } from './types';\n\nexport interface IRandomSettings extends ILayerSettings {\n  std?: number | null;\n}\n\nexport const defaults: IRandomSettings = {\n  ...baseLayerDefaultSettings,\n  std: null,\n};\n\nexport class Random extends Model implements ILayer {\n  settings: IRandomSettings;\n  constructor(settings: Partial<IRandomSettings>) {\n    super();\n    this.settings = { ...defaults, ...settings };\n    this.setupPraxis();\n    this.validate();\n\n    if (!this.weights) {\n      this.weights = randos2D(this.width, this.height, settings.std);\n    }\n    if (!this.deltas) {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  predict(): void {}\n\n  compare(): void {}\n}\n\nexport function random(settings: IRandomSettings): Random {\n  return new Random(settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  Texture,\n} from 'gpu.js';\nimport { ILayer, ILayerJSON, ILayerSettings } from './base-layer';\n\nexport interface IMultiplyConstants extends IConstantsThis {\n  size: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  weights1: number[][],\n  weights2: number[][]\n): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nexport function compareFromX(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nexport function compareFromY(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nexport class Multiply extends Operator {\n  compareKernel1: IKernelRunShortcut | null = null;\n  compareKernel2: IKernelRunShortcut | null = null;\n\n  get width(): number {\n    return this.inputLayer2.width;\n  }\n\n  set width(width: number) {\n    throw new Error('Cannot set width on Multiply');\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  set height(height: number) {\n    throw new Error('Cannot set height on Multiply');\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  set depth(depth: number) {\n    throw new Error('Cannot set depth on Multiply');\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`\n      );\n    }\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n      immutable: true,\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n      immutable: true,\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n      immutable: true,\n    });\n  }\n\n  reuseKernels(layer: ILayer): void {\n    super.reuseKernels(layer);\n    this.compareKernel1 = (layer as Multiply).compareKernel1;\n    this.compareKernel2 = (layer as Multiply).compareKernel2;\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (!this.predictKernel) throw new Error('this.predictKernel is not set');\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    if (!this.compareKernel1) throw new Error('this.compareKernel1 not set');\n    if (!this.compareKernel2) throw new Error('this.compareKernel2 not set');\n\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2 as Texture;\n    this.inputLayer1.deltas = newDeltas1 as Texture;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n\n  setupPraxis(): void {}\n\n  toJSON(): Partial<ILayerJSON> {\n    return {\n      ...super.toJSON(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n\nexport function multiply(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Multiply {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n","import { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/sigmoid';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return (\n    1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]))\n  );\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport class Sigmoid extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n\n  learn(learningRate?: number): void {}\n}\n\nexport function sigmoid(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Sigmoid {\n  return new Sigmoid(inputLayer, settings);\n}\n","import {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  IArthurDeviationWeightsSettings,\n} from '../praxis/arthur-deviation-weights';\nimport {\n  arthurDeviationBiases,\n  IArthurDeviationBiasesSettings,\n} from '../praxis/arthur-deviation-biases';\nimport { ILayer } from './base-layer';\nimport { add } from './add';\nimport { IRandomSettings, random } from './random';\nimport { multiply } from './multiply';\nimport { Sigmoid, sigmoid } from './sigmoid';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IArthurFeedForwardPraxisSettings\n  extends IArthurDeviationBiasesSettings,\n    IArthurDeviationWeightsSettings {}\n\nexport interface IArthurFeedForwardSettings extends IRandomSettings {\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings?: IArthurFeedForwardPraxisSettings | null\n  ) => IPraxis;\n}\n\nexport function arthurFeedForward(\n  settings: IArthurFeedForwardPraxisSettings,\n  inputLayer: ILayer\n): Sigmoid {\n  const { height } = settings;\n  function initWeightsPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationWeightsSettings\n  ): IPraxis {\n    const praxis = arthurDeviationWeights(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  function initBiasesPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationBiasesSettings\n  ): IPraxis {\n    const praxis = arthurDeviationBiases(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  const weightsLayer = random({\n    id: 'weights',\n    height,\n    width: inputLayer.height,\n    initPraxis: initWeightsPraxis,\n  });\n\n  const biasesLayer = random({\n    id: 'biases',\n    height,\n    initPraxis: initBiasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer);\n  const addLayer = add(multiplyLayer, biasesLayer);\n  const sigmoidLayer = sigmoid(addLayer);\n\n  const weightsPraxis = weightsLayer.praxis as ArthurDeviationWeights;\n  weightsPraxis.weightsLayer = weightsLayer;\n  weightsPraxis.incomingLayer = inputLayer;\n  weightsPraxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n","import { IConvolutionSettingsBase } from '../layer/convolution';\n\nexport interface IStride {\n  strideX: number;\n  strideY: number;\n}\n\nexport function getStride(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IStride {\n  if (typeof settings.stride === 'number') {\n    return { strideX: settings.stride, strideY: settings.stride };\n  } else {\n    let strideX: number = defaults.stride as number;\n    let strideY: number = defaults.stride as number;\n    if (typeof settings.strideX === 'number') {\n      strideX = settings.strideX;\n    }\n    if (typeof settings.strideY === 'number') {\n      strideY = settings.strideY;\n    }\n    return { strideX, strideY };\n  }\n}\n\nexport interface IPadding {\n  paddingX: number;\n  paddingY: number;\n}\n\nexport function getPadding(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IPadding {\n  if (typeof settings.padding === 'number') {\n    return { paddingX: settings.padding, paddingY: settings.padding };\n  } else {\n    let paddingX: number = defaults.padding as number;\n    let paddingY: number = defaults.padding as number;\n    if (typeof settings.paddingX === 'number') {\n      paddingX = settings.paddingX;\n    }\n    if (typeof settings.paddingY === 'number') {\n      paddingY = settings.paddingY;\n    }\n    return { paddingX, paddingY };\n  }\n}\n","/**\n * Returns an array of a given size with each element filled with a single value\n */\nexport function values(size: number, value: number): Float32Array {\n  return new Float32Array(size).fill(value);\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { getStride, getPadding } from '../utilities/layer-setup';\nimport { Filter } from './filter';\nimport { randos, randos3D } from '../utilities/randos';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { values } from '../utilities/values';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IConvolutionConstantsBase extends IConstantsThis {\n  paddingX: number;\n  paddingY: number;\n  strideX: number;\n  strideY: number;\n  filterWidth: number;\n  filterHeight: number;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n  inputDepth: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][][],\n  biases: number[]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (\n      let filterY = Math.max(0, startFilterY),\n        inputY = Math.max(0, startInputY);\n      filterY < endFilterY;\n      filterY++, inputY++\n    ) {\n      for (\n        let filterX = Math.max(0, startFilterX),\n          inputX = Math.max(0, startInputX);\n        filterX < endFilterX;\n        filterX++, inputX++\n      ) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nexport interface ICompareFilterDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaWidth: number;\n  deltaHeight: number;\n  inputWidth: number;\n  inputHeight: number;\n  deltaZ: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFilterDeltasConstants>,\n  filterDeltas: number[][][],\n  inputs: number[][][],\n  deltas: number[][][]\n): number {\n  const startDeltaX = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingX - this.thread.x) / this.constants.strideX\n    )\n  );\n  const startInputX =\n    startDeltaX * this.constants.strideX +\n    this.thread.x -\n    this.constants.paddingX;\n  const endDeltaX = Math.min(\n    this.constants.deltaWidth,\n    Math.floor(\n      (this.constants.inputWidth -\n        1 -\n        this.thread.x +\n        this.constants.paddingX) /\n        this.constants.strideX\n    ) + 1\n  );\n\n  const startDeltaY = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingY - this.thread.y) / this.constants.strideY\n    )\n  );\n  const startInputY =\n    startDeltaY * this.constants.strideY +\n    this.thread.y -\n    this.constants.paddingY;\n  const endDeltaY = Math.min(\n    this.constants.deltaHeight,\n    Math.floor(\n      (this.constants.inputHeight -\n        1 -\n        this.thread.y +\n        this.constants.paddingY) /\n        this.constants.strideY\n    ) + 1\n  );\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (\n    let deltaY = startDeltaY, inputY = startInputY;\n    deltaY < endDeltaY;\n    deltaY++, inputY += this.constants.strideY\n  ) {\n    for (\n      let deltaX = startDeltaX, inputX = startInputX;\n      deltaX < endDeltaX;\n      deltaX++, inputX += this.constants.strideX\n    ) {\n      sum +=\n        inputs[this.thread.z][inputY][inputX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareInputDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaHeight: number;\n  deltaWidth: number;\n  deltaZ: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  filters: number[][][],\n  deltas: number[][][]\n): number {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX =\n    x < this.constants.filterWidth\n      ? 0\n      : Math.floor(\n          (x - this.constants.filterWidth + this.constants.strideX) /\n            this.constants.strideX\n        );\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(\n    startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1,\n    this.constants.deltaWidth\n  );\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY =\n    y < this.constants.filterHeight\n      ? 0\n      : Math.floor(\n          (y - this.constants.filterHeight + this.constants.strideY) /\n            this.constants.strideY\n        );\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(\n    startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1,\n    this.constants.deltaHeight\n  );\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (\n    let filterY = startFilterY;\n    deltaY < endDeltaY;\n    filterY -= this.constants.strideY, deltaY++\n  ) {\n    let deltaX = startDeltaX;\n    for (\n      let filterX = startFilterX;\n      deltaX < endDeltaX;\n      filterX -= this.constants.strideX, deltaX++\n    ) {\n      sum +=\n        filters[this.thread.z][filterY][filterX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareBiasesConstants extends IConstantsThis {\n  deltaHeight: number;\n  deltaWidth: number;\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis<ICompareBiasesConstants>,\n  biasDeltas: number[][][],\n  deltas: number[][][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nexport interface IConvolutionSettingsBase {\n  stride?: number;\n  strideX?: number;\n  strideY?: number;\n  padding?: number;\n  paddingX?: number;\n  paddingY?: number;\n  filterCount?: number;\n  filterWidth?: number;\n  filterHeight?: number;\n}\n\nexport interface IConvolutionSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport const defaults: IConvolutionSettings = {\n  stride: 0,\n  padding: 0,\n  bias: 0.1,\n  filterCount: 1,\n  filterWidth: 0,\n  filterHeight: 0,\n};\n\nexport class Convolution extends Filter {\n  settings: Partial<IConvolutionSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get depth(): number {\n    return this.filterCount;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biasDeltas;\n  }\n\n  set biasDeltas(weights: KernelOutput) {\n    this.settings.biasDeltas = weights;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  constructor(settings: IConvolutionSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...defaults,\n      ...settings,\n      ...getPadding(settings, defaults),\n      ...getStride(settings, defaults),\n    };\n\n    this.weights =\n      settings.weights ?? randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = settings.biasDeltas ?? randos(this.depth);\n\n    this.filters =\n      settings.filters ??\n      randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  setupKernels(): void {\n    this.predictKernel = makeKernel<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n        deltaZ: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n        deltaZ: this.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      immutable: true,\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      biasDeltas,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = (this.compareInputDeltasKernel as IKernelRunShortcut)(\n      this.filters,\n      this.inputLayer.deltas\n    );\n\n    release(this.inputLayer.deltas);\n    // TODO: do we need to clone here?\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(learningRate: number): void {\n    // TODO: handle filters\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    release(oldWeights);\n  }\n}\n\nexport function convolution(\n  settings: IConvolutionSettings,\n  inputLayer: ILayer\n): Convolution {\n  return new Convolution(settings, inputLayer);\n}\n","import { Filter, IFilterSettings } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings, baseLayerDefaultSettings } from './base-layer';\n\nexport function setDropout(dropout: number): number {\n  return dropout;\n}\n\nexport interface IDropoutConstants extends IConstantsThis {\n  probability: number;\n}\n\nexport function trainingPredict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  dropouts: number[][],\n  deltas: number[][]\n): number {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nexport interface IDropoutSettings extends ILayerSettings {\n  probability: number;\n}\n\nexport const dropoutDefaults: IDropoutSettings = {\n  ...baseLayerDefaultSettings,\n  probability: 0.5,\n};\n\nexport class Dropout extends Filter {\n  dropouts: KernelOutput | null;\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IDropoutSettings>;\n  constructor(\n    inputLayer: ILayer,\n    settings?: Partial<IDropoutSettings> & Partial<IFilterSettings>\n  ) {\n    super(settings as Partial<IFilterSettings>, inputLayer);\n    this.settings = { ...dropoutDefaults, ...settings };\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining?: boolean): void {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof trainingPredict>,\n        IDropoutConstants\n      >({ dropouts: setDropout }, trainingPredict, {\n        output,\n        immutable: true,\n      });\n      this.compareKernel = makeKernel(compare, { output, immutable: true });\n    } else {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof predict>,\n        IDropoutConstants\n      >({}, predict, { output, immutable: true });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (this.dropouts) {\n      release(this.dropouts);\n    }\n    const { result, dropouts } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare(): void {\n    release(this.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.dropouts as KernelOutput,\n      this.inputLayer.deltas\n    );\n  }\n}\n\nexport function dropout(\n  inputLayer: ILayer,\n  settings?: Partial<IDropoutSettings>\n): Dropout {\n  return new Dropout(inputLayer, settings);\n}\n","import { random } from './random';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { sigmoid } from './sigmoid';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function feedForward(settings: ILayerSettings, input: ILayer): ILayer {\n  const { height, praxisOpts = null } = settings;\n  const weights = random({\n    id: 'weights',\n    height,\n    width: input.height,\n    praxisOpts,\n  });\n  const biases = random({ id: 'biases', height, praxisOpts });\n  return sigmoid(\n    add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }),\n    { praxisOpts }\n  );\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { Filter, IFilterSettings } from './filter';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { values } from '../utilities/values';\nimport { randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer } from './base-layer';\n\nexport interface IPredictConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport interface ICompareInputDeltasConstants extends IConstantsThis {\n  filterCount: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nexport function compareInputDeltas3D(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis,\n  biases: number[],\n  deltas: number[][]\n): number {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nexport interface ICompareFiltersDeltas extends IConstantsThis {\n  deltaX: number;\n  deltaY: number;\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[this.thread.y][this.thread.x] *\n      deltas[this.constants.deltaY][this.constants.deltaX]\n  );\n}\n\nexport function compareFilterDeltas3D(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][][],\n  deltas: number[][]\n): number {\n  const inputZ = Math.floor(\n    this.thread.x / (this.constants.inputWidth * this.constants.inputHeight)\n  );\n  const inputY = Math.floor(\n    (this.thread.x -\n      inputZ * this.constants.inputWidth * this.constants.inputHeight) /\n      this.constants.inputWidth\n  );\n  const inputX =\n    this.thread.x -\n    this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]\n  );\n}\n\nexport interface IFullyConnectedDefaultSettings\n  extends Partial<IFilterSettings> {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n}\n\nexport const defaults: IFullyConnectedDefaultSettings = {\n  bias: 0.1,\n};\n\nexport class FullyConnected extends Filter {\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biasDeltas(biasDeltas: KernelOutput) {\n    this.settings.biasDeltas = biasDeltas;\n  }\n\n  settings: Partial<IFullyConnectedDefaultSettings>;\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  constructor(\n    settings: Partial<IFullyConnectedDefaultSettings>,\n    inputLayer: ILayer\n  ) {\n    super(settings, inputLayer);\n    this.settings = { ...settings };\n    this.validate();\n\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels(): void {\n    const { inputLayer } = this;\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          deltaX: 0,\n          deltaY: 0,\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n        immutable: true,\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          deltaX: 0,\n          deltaY: 0,\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this\n      .compareInputDeltasKernel as IKernelRunShortcut)(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      this.biases,\n      this.deltas\n    );\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nexport function fullyConnected(\n  settings: IFullyConnectedDefaultSettings,\n  inputLayer: ILayer\n): FullyConnected {\n  return new FullyConnected(settings, inputLayer);\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { Modifier } from './types';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  weights: number[][]\n): number {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nexport class Negative extends Modifier {\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n}\n\nexport function negative(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Negative {\n  return new Negative(inputLayer, settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputLayerWeights1: number[][],\n  inputLayerWeights2: number[][]\n): number {\n  return (\n    inputLayerWeights1[this.thread.y][this.thread.x] *\n    inputLayerWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport class MultiplyElement extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer2.weights,\n      this.deltas\n    );\n    this.inputLayer2.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function multiplyElement(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): MultiplyElement {\n  return new MultiplyElement(inputLayer1, inputLayer2, settings);\n}\n","export function ones(size: number): Float32Array {\n  return new Float32Array(size).fill(1);\n}\n\nexport function ones2D(width: number, height: number): Float32Array[] {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","import { ILayerSettings } from './base-layer';\n\nimport { ones2D } from '../utilities/ones';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\n\nexport class Ones extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nexport function ones(settings: ILayerSettings): Ones {\n  return new Ones(settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './activation';\nimport { activate, measure } from '../activation/tanh';\nimport { release, makeKernel } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  errors: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  errors: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Tanh extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function tanh(inputLayer: ILayer, settings?: ILayerSettings): Tanh {\n  return new Tanh(inputLayer, settings);\n}\n","import { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\nimport { ILayerSettings } from './base-layer';\n\nexport class Zeros extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  // learn(): void {}\n}\n\nexport function zeros(settings: ILayerSettings): Zeros {\n  return new Zeros(settings);\n}\n","import { add } from './add';\nimport { negative } from './negative';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { ones } from './ones';\nimport { sigmoid } from './sigmoid';\nimport { random } from './random';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { RecurrentInput } from './recurrent-input';\n\nexport function gru(\n  settings: ILayerSettings,\n  recurrentInput: RecurrentInput,\n  input: ILayer\n): ILayer {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        ones({ width: updateGate.width, height: updateGate.height }),\n        negative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\nimport { EntryPoint } from './types';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { makeKernel, release, kernelInput, clone } from '../utilities/kernel';\n\nexport const defaults: ILayerSettings = {\n  weights: null,\n};\n\nexport class Input extends EntryPoint {\n  reshapeInput: IKernelRunShortcut | null = null;\n  constructor(settings: ILayerSettings) {\n    super({ ...defaults, ...settings });\n    this.validate();\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(\n        function (this: IKernelFunctionThis, value: number[]) {\n          return value[this.thread.y];\n        },\n        {\n          output: [1, this.height],\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  reuseKernels(layer: ILayer): void {\n    // super.reuseKernels(layer);\n    this.reshapeInput = (layer as Input).reshapeInput;\n  }\n\n  predict(inputs: KernelOutput): void {\n    if (\n      (Array.isArray(inputs) || inputs instanceof Float32Array) &&\n      typeof inputs[0] === 'number' &&\n      inputs.length === this.height * this.width\n    ) {\n      release(this.weights);\n      this.weights = kernelInput(inputs as number[], [this.width, this.height]);\n    } else if (\n      Array.isArray(inputs) &&\n      inputs.length === this.height &&\n      (Array.isArray(inputs[0]) || inputs[0] instanceof Float32Array) &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = clone(inputs);\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs: KernelOutput): void {\n    if (this.weights) release(this.weights);\n    if (this.reshapeInput) {\n      this.weights = this.reshapeInput(inputs);\n    } else {\n      this.weights = inputs;\n    }\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {}\n}\n\nexport function input(settings: ILayerSettings): Input {\n  return new Input(settings);\n}\n","import { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/leaky-relu';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class LeakyRelu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    const { deltas } = this;\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      deltas\n    );\n    release(deltas);\n  }\n}\n\nexport function leakyRelu(\n  inputLayer: ILayer,\n  settings: ILayerSettings\n): LeakyRelu {\n  return new LeakyRelu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { random } from './random';\nimport { sigmoid } from './sigmoid';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function lstmCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') {\n    throw new Error('no settings.height given');\n  }\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  const inputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'inputGateWeights',\n  });\n  const inputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'inputGatePeepholes',\n  });\n  const inputGateBias = zeros({ width: 1, height, id: 'inputGateBias' });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    ),\n    { id: 'inputGate' }\n  );\n\n  const forgetGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'forgetGateWeights',\n  });\n  const forgetGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'forgetGatePeepholes',\n  });\n  const forgetGateBias = zeros({ width: 1, height, id: 'forgetGateBias' });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    ),\n    { id: 'forgetGate' }\n  );\n\n  const outputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'outputGateWeights',\n  });\n  const outputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'outputGatePeepholes',\n  });\n  const outputGateBias = zeros({ width: 1, height, id: 'outputGateBias' });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    ),\n    { id: 'outputGate' }\n  );\n\n  const memoryWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'memoryWeights',\n  });\n  const memoryPeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'memoryPeepholes',\n  });\n  const memoryBias = zeros({ width: 1, height, id: 'memoryBias' });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    ),\n    { id: 'memory' }\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, recurrentInput, {\n    id: 'retainCell',\n  }); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory, { id: 'writeCell' }); // what do we write to cell\n  const cell = add(retainCell, writeCell, { id: 'cell' }); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell), { id: 'activations' });\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { target } from './target';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function output(settings: ILayerSettings, inputLayer: ILayer): ILayer {\n  const { height } = settings;\n  const outputGate = random({\n    height,\n    width: inputLayer.height,\n    id: 'outputGate',\n    std: 0.08,\n  });\n  const output = random({ height, id: 'output', std: 0.08 });\n  const outputGateConnector = multiply(outputGate, inputLayer, {\n    id: 'outputGateConnected',\n  });\n  return target(\n    { id: 'target', ...settings },\n    add(outputGateConnector, output)\n  );\n}\n","import { Filter } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport { getPadding, getStride } from '../utilities/layer-setup';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { randos3D } from '../utilities/randos';\nimport {\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport {\n  IConvolutionSettingsBase,\n  IConvolutionConstantsBase,\n} from './convolution';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function setSwitchY(value: number): number {\n  return value;\n}\n\nexport function setSwitchX(value: number): number {\n  return value;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][]\n): number {\n  // Ends are exclusive, that is if end=4, the last item is 3\n  const unclippedStartInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const unclippedStartInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const unclippedEndInputX = unclippedStartInputX + this.constants.filterWidth;\n  const unclippedEndInputY = unclippedStartInputY + this.constants.filterHeight;\n  const startInputX = Math.max(unclippedStartInputX, 0);\n  const startInputY = Math.max(unclippedStartInputY, 0);\n  const endInputX = Math.min(unclippedEndInputX, this.constants.inputWidth);\n  const endInputY = Math.min(unclippedEndInputY, this.constants.inputHeight);\n\n  let largestValue = inputs[this.thread.z][startInputY][startInputX];\n  let largestX = startInputX;\n  let largestY = startInputY;\n\n  for (let y = startInputY; y < endInputY; y++) {\n    for (let x = startInputX; x < endInputX; x++) {\n      const input = inputs[this.thread.z][y][x];\n      if (input > largestValue) {\n        largestValue = input;\n        largestY = y;\n        largestX = x;\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nexport interface ICompareConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n\n  outputWidth: number;\n  outputHeight: number;\n}\n\nexport function compare(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][],\n  switchX: number[][],\n  switchY: number[][]\n): number {\n  const xCenter = this.thread.x + 0.5;\n  const yCenter = this.thread.y + 0.5;\n  const invStrideX = 1 / this.constants.strideX;\n  const invStrideY = 1 / this.constants.strideY;\n\n  const startSourceX = Math.max(\n    0,\n    Math.ceil(\n      (xCenter - this.constants.filterWidth + this.constants.paddingX) *\n        invStrideX\n    )\n  );\n  const startSourceY = Math.max(\n    0,\n    Math.ceil(\n      (yCenter - this.constants.filterHeight + this.constants.paddingY) *\n        invStrideY\n    )\n  );\n  const endSourceX = Math.min(\n    Math.ceil((xCenter + this.constants.paddingX) * invStrideX),\n    this.constants.outputWidth\n  );\n  const endSourceY = Math.min(\n    Math.ceil((yCenter + this.constants.paddingY) * invStrideY),\n    this.constants.outputHeight\n  );\n\n  let result = 0;\n  for (let backY = startSourceY; backY < endSourceY; backY++) {\n    for (let backX = startSourceX; backX < endSourceX; backX++) {\n      const switchXValue = switchX[backY][backX];\n      const switchYValue = switchY[backY][backX];\n      if (\n        Math.abs(switchXValue - this.thread.x) < 0.1 &&\n        Math.abs(switchYValue - this.thread.y) < 0.1\n      ) {\n        result += deltas[backY][backX];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][][],\n  switchY: number[][][],\n  switchX: number[][][]\n): number {\n  const xCenter = this.thread.x + 0.5;\n  const yCenter = this.thread.y + 0.5;\n\n  const invStrideX = 1 / this.constants.strideX;\n  const invStrideY = 1 / this.constants.strideY;\n\n  const startSourceX = Math.max(\n    0,\n    Math.ceil(\n      (xCenter - this.constants.filterWidth + this.constants.paddingX) *\n        invStrideX\n    )\n  );\n  const startSourceY = Math.max(\n    0,\n    Math.ceil(\n      (yCenter - this.constants.filterHeight + this.constants.paddingY) *\n        invStrideY\n    )\n  );\n  const endSourceX = Math.min(\n    Math.ceil((xCenter + this.constants.paddingX) * invStrideX),\n    this.constants.inputWidth\n  );\n  const endSourceY = Math.min(\n    Math.ceil((yCenter + this.constants.paddingY) * invStrideY),\n    this.constants.inputHeight\n  );\n\n  let result = 0;\n\n  for (let backY = startSourceY; backY < endSourceY; backY++) {\n    for (let backX = startSourceX; backX < endSourceX; backX++) {\n      const switchXValue = switchX[this.thread.z][backY][backX];\n      const switchYValue = switchY[this.thread.z][backY][backX];\n      if (\n        Math.abs(switchXValue - this.thread.x) < 0.1 &&\n        Math.abs(switchYValue - this.thread.y) < 0.1\n      ) {\n        result += deltas[this.thread.z][backY][backX];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport interface IPoolSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  switchX?: KernelOutput;\n  switchY?: KernelOutput;\n}\n\nexport const defaults: IPoolSettings = {\n  padding: 0,\n  stride: 0,\n  filterWidth: 0,\n  filterHeight: 0,\n  filterCount: 0,\n};\n\nexport class Pool extends Filter {\n  settings: Partial<IPoolSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingY as number;\n  }\n\n  get width(): number {\n    // Using floor prefers to pad less (or use negative padding) on the right\n    // using ceil prefers to pad more\n    return Math.ceil(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    // Using floor prefers to pad less (or use negative padding) on the bottom\n    // using ceil prefers to pad more\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get depth(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterCount(): number {\n    // TODO: handle 1 depth?\n    return this.settings.filterCount as number;\n  }\n\n  get switchX(): KernelOutput {\n    return this.settings.switchX;\n  }\n\n  set switchX(switchX: KernelOutput) {\n    this.settings.switchX = switchX;\n  }\n\n  get switchY(): KernelOutput {\n    return this.settings.switchY;\n  }\n\n  set switchY(switchY: KernelOutput) {\n    this.settings.switchY = switchY;\n  }\n\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  constructor(settings: IPoolSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...settings,\n      ...getStride(settings, defaults),\n      ...getPadding(settings, defaults),\n    };\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernelMap = makeKernelMap(\n      {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      predict,\n      {\n        output: [this.width, this.height, this.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterHeight: this.filterHeight,\n          filterWidth: this.filterWidth,\n          strideX: this.strideX,\n          strideY: this.strideY,\n        },\n      }\n    );\n\n    this.compareKernel = makeKernel(compare, {\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        outputWidth: this.width,\n        outputHeight: this.height,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        strideX: this.strideX,\n        strideY: this.strideY,\n      },\n    });\n  }\n\n  predict(): void {\n    const { result: weights, switchX, switchY } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.switchX = switchX;\n    this.switchY = switchY;\n    this.weights = weights;\n  }\n\n  compare(): void {\n    // debugger;\n    // const depth = this.inputLayer.deltas.length;\n    // const height = this.inputLayer.deltas[0].length;\n    // const width = this.inputLayer.deltas[0][0].length;\n    // const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    // debugger;\n    // if (depth !== this.inputLayer.deltas.length) debugger;\n    // if (height !== this.inputLayer.deltas[0].length) debugger;\n    // if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    // if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nexport function pool(settings: IPoolSettings, inputLayer: ILayer): Pool {\n  return new Pool(settings, inputLayer);\n}\n","import { KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer } from './base-layer';\nimport { Internal } from './internal';\n\nexport interface IRecurrentInput extends ILayer {\n  setDimensions?: (width: number, height: number) => void;\n}\n\nexport class RecurrentInput extends Internal implements IRecurrentInput {\n  recurrentInput: ILayer;\n  praxis: IPraxis | null = null;\n  predictKernel = null;\n  compareKernel = null;\n  settings = {};\n  constructor(recurrentInput: ILayer) {\n    super();\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get width(): number {\n    return this.recurrentInput.width;\n  }\n\n  get height(): number {\n    return this.recurrentInput.height;\n  }\n\n  get depth(): number {\n    return this.recurrentInput.depth;\n  }\n\n  get deltas(): KernelOutput {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights(): KernelOutput {\n    return this.recurrentInput.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate(): void {\n    BaseLayer.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.recurrentInput.width = width;\n    this.recurrentInput.height = height;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { ILayerSettings } from './base-layer';\nimport { Internal } from './internal';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport class RecurrentZeros extends Internal implements IRecurrentInput {\n  praxis: IPraxis | null = null;\n  settings: Partial<ILayerSettings> = {};\n  predictKernel = null;\n  compareKernel = null;\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    super();\n    if (settings) {\n      this.settings = { ...settings };\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.praxis = null;\n    this.settings = {\n      ...this.settings,\n      width,\n      height,\n      weights: zeros2D(width, height),\n      deltas: zeros2D(width, height),\n    };\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(learningRate: number): void {\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    // this.deltas = deltas;\n    release(oldWeights);\n  }\n\n  // validate(): void {\n  //   throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  // }\n\n  // reset(): void {\n  //   throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  // }\n}\n\nexport function recurrentZeros(): RecurrentZeros {\n  return new RecurrentZeros();\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/relu';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Relu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function relu(inputLayer: ILayer, settings?: ILayerSettings): Relu {\n  return new Relu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { relu } from './relu';\nimport { zeros } from './zeros';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function rnnCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') throw new Error('height not set');\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  // wxh\n  const weight = random({\n    id: 'weight',\n    height,\n    width: input.height,\n    std: 0.08,\n  });\n  // whh\n  const transition = random({\n    id: 'transition',\n    height,\n    width: height,\n    std: 0.08,\n  });\n  // bhh\n  const bias = zeros({ id: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n","import { IKernelFunctionThis, KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class Regression extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(settings: ILayerSettings, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// TODO: Connect up\nexport function learn(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  targets: number[]\n): number {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nexport function regression(\n  settings: ILayerSettings,\n  inputLayer: ILayer\n): Regression {\n  return new Regression(settings, inputLayer);\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n  Texture,\n} from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { randos, randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { Modifier } from './modifier';\n\ninterface ISoftMaxConstants extends IConstantsThis {\n  inputWidth: number;\n}\n\nexport function getMaxValue(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getSum(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nexport function getSum2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nexport function getSum3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nexport function getExponentials(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials2D(\n  this: IKernelFunctionThis,\n  inputs: number[][],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.y][this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][],\n  maxInput: number[]\n): number {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nexport function predict(\n  this: IKernelFunctionThis,\n  exponentials: number[],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  exponentials: number[][],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.y][this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  exponentials: number[][][],\n  exponentialsSum: number[]\n): number {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[]\n): number {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][]\n): number {\n  let indicator = 0;\n  const index = this.thread.x + this.thread.y * this.output.x;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][][]\n): number {\n  let indicator = 0;\n  const index =\n    this.thread.x +\n    this.thread.y * this.output.x +\n    this.thread.z * this.output.x * this.output.y;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(\n    indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport function loss(): number {\n  return -Math.log(0);\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nexport class SoftMax extends Modifier {\n  getExponentialsKernel: IKernelRunShortcut | null;\n  getMaxValueKernel: IKernelRunShortcut | null;\n  getSumKernel: IKernelRunShortcut | null;\n  errors: KernelOutput | null = null;\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        immutable: true,\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    const maxValue = (this.getMaxValueKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    const exponentials = (this.getExponentialsKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = (this.getSumKernel as IKernelRunShortcut)(\n      exponentials\n    );\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      exponentials,\n      exponentialsSum\n    );\n  }\n\n  compare(targetValues: KernelOutput): void {\n    const { deltas, errors } = this;\n    this.errors = (this.compareKernel as IKernelRunShortcut)(\n      (targetValues as number[])[0],\n      deltas\n    );\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors as Texture);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nexport function softMax(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): SoftMax {\n  return new SoftMax(inputLayer, settings);\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class SVM extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings: ILayerSettings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n    this.validate();\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// function learn(target) {\n//   if (y === i) {\n//     continue;\n//   }\n//   const ydiff = -yscore + x.w[i] + margin;\n//   if (ydiff > 0) {\n//     // violating dimension, apply loss\n//     x.dw[i] += 1;\n//     x.dw[y] -= 1;\n//     loss += ydiff;\n//   }\n// }\n\nexport function svm(inputLayer: ILayer, settings: ILayerSettings): SVM {\n  return new SVM(inputLayer, settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\nimport { ILayer } from './base-layer';\nimport { Modifier } from './types';\n\nexport function predict(this: IKernelFunctionThis, value: number[][]): number {\n  return value[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nexport class Transpose extends Modifier {\n  get width(): number {\n    return this.inputLayer.height;\n  }\n\n  get height(): number {\n    return this.inputLayer.width;\n  }\n\n  constructor(inputLayer: ILayer) {\n    super(inputLayer);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas\n    );\n  }\n}\n\nexport function transpose(inputLayer: ILayer): Transpose {\n  return new Transpose(inputLayer);\n}\n","import {\n  Activation,\n  EntryPoint,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './types';\n\nexport { Add, add } from './add';\nexport { arthurFeedForward } from './arthur-feed-forward';\nexport {\n  BaseLayer,\n  ILayer,\n  ILayerSettings,\n  ILayerJSON,\n  baseLayerDefaultSettings,\n} from './base-layer';\nexport { Convolution, convolution } from './convolution';\nexport { Dropout, dropout } from './dropout';\nexport { feedForward } from './feed-forward';\nexport { FullyConnected, fullyConnected } from './fully-connected';\nexport { gru } from './gru';\nexport { Input, input } from './input';\nexport { LeakyRelu, leakyRelu } from './leaky-relu';\nexport { lstmCell } from './lstm-cell';\nexport { Multiply, multiply } from './multiply';\nexport { MultiplyElement, multiplyElement } from './multiply-element';\nexport { Negative, negative } from './negative';\nexport { Ones, ones } from './ones';\nexport { output } from './output';\nexport { Pool, pool } from './pool';\nexport { Random, random } from './random';\nexport { RecurrentInput, IRecurrentInput } from './recurrent-input';\nexport { RecurrentZeros } from './recurrent-zeros';\nexport { rnnCell } from './rnn-cell';\nexport { Regression, regression } from './regression';\nexport { Relu, relu } from './relu';\nexport { Sigmoid, sigmoid } from './sigmoid';\nexport { SoftMax, softMax } from './soft-max';\nexport { SVM, svm } from './svm';\nexport { Tanh, tanh } from './tanh';\nexport { Target, target } from './target';\nexport { Transpose, transpose } from './transpose';\nexport { Zeros, zeros } from './zeros';\n\nexport const layerTypes = {\n  Activation,\n  Internal,\n  InternalModel,\n  EntryPoint,\n  Filter,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n};\n","import * as layer from '../layer';\nimport { layerTypes, ILayerJSON, ILayer, Target } from '../layer';\nimport { ActivationType } from '../layer/activation';\nimport { FilterType } from '../layer/filter';\nimport { InternalType } from '../layer/internal';\nimport { ModifierType } from '../layer/modifier';\nimport { OperatorType } from '../layer/operator';\nimport { BaseLayerType } from '../layer/base-layer';\nimport { TargetType } from '../layer/target';\n\nconst layerNameTypes = Object.keys(layer);\n\nexport function layerFromJSON(\n  jsonLayer: ILayerJSON,\n  inputLayer1?: ILayer,\n  inputLayer2?: ILayer\n): ILayer | null {\n  if (\n    !layerNameTypes.find((layerNameType) => layerNameType === jsonLayer.type)\n  ) {\n    return null;\n  }\n  const Layer = ((layer as unknown) as {\n    [layerType: string]:\n      | TargetType\n      | ActivationType\n      | FilterType\n      | InternalType\n      | ModifierType\n      | OperatorType;\n  })[jsonLayer.type];\n  if (Layer.prototype instanceof layerTypes.Filter) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as FilterType)(jsonLayer, inputLayer1);\n  } else if (\n    Layer.prototype instanceof layerTypes.Activation ||\n    Layer.prototype instanceof layerTypes.Modifier\n  ) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as ActivationType)(inputLayer1, jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Internal) {\n    return new (Layer as InternalType)(jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Operator) {\n    if (!inputLayer1) throw new Error('inputLayer1 missing');\n    if (!inputLayer2) throw new Error('inputLayer2 missing');\n    return new (Layer as OperatorType)(inputLayer1, inputLayer2, jsonLayer);\n  } else if (\n    Layer.prototype instanceof layerTypes.InternalModel ||\n    Layer.prototype instanceof layerTypes.EntryPoint ||\n    Layer.prototype instanceof layerTypes.Model\n  ) {\n    return new (Layer as BaseLayerType)(jsonLayer);\n  } else if (Layer === Target) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as TargetType)(jsonLayer, inputLayer1);\n  }\n  return null;\n}\n","import { IKernelFunctionThis, KernelOutput, Texture } from 'gpu.js';\nimport { MeanSquaredError } from './estimator/mean-squared-error';\nimport { ILayer, ILayerJSON } from './layer';\nimport { Model } from './layer/types';\nimport { InputOutputValue, INumberArray, INumberHash, lookup } from './lookup';\nimport * as praxis from './praxis';\nimport { IPraxis, IPraxisSettings } from './praxis/base-praxis';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport { makeKernel, release } from './utilities/kernel';\nimport { layerFromJSON } from './utilities/layer-from-json';\nimport { LookupTable } from './utilities/lookup-table';\nimport { Thaw } from 'thaw.js';\n\nexport interface IFeedForwardTrainingData<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface IFeedForwardNormalizedTrainingData {\n  input: Float32Array;\n  output: Float32Array;\n}\n\nexport interface IFeedForwardGPUTrainingData {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface ITrainingStatus {\n  iterations: number;\n  error: number;\n}\n\nexport type Log = (status: string) => void;\nexport type FeedForwardCallback = (status: ITrainingStatus) => void;\n\nexport interface IFeedForwardTrainingOptions {\n  iterations?: number;\n  errorThresh?: number;\n  log?: boolean | Log;\n  logPeriod?: number;\n  learningRate?: number;\n  callback?: FeedForwardCallback;\n  callbackPeriod?: number;\n  errorCheckInterval?: number;\n  timeout?: number;\n}\n\nexport interface IFeedForwardOptions {\n  learningRate?: number;\n  binaryThresh?: number;\n  hiddenLayers?: Array<(inputLayer: ILayer, layerIndex: number) => ILayer>;\n  inputLayer?: () => ILayer;\n  outputLayer?: (inputLayer: ILayer, index: number) => ILayer;\n  praxisOpts?: Partial<IPraxisSettings>;\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ) => IPraxis;\n  praxis?: IPraxis;\n\n  // JSON\n  layers?: ILayer[];\n  inputLayerIndex?: number;\n  outputLayerIndex?: number;\n  sizes?: number[];\n}\n\nexport interface IFeedForwardPreppedTrainingData {\n  status: ITrainingStatus;\n  preparedData: IFeedForwardGPUTrainingData[];\n  endTime: number;\n}\n\nexport const defaults: IFeedForwardOptions = {\n  learningRate: 0.3,\n  binaryThresh: 0.5,\n  initPraxis: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ): IPraxis =>\n    praxis.momentumRootMeanSquaredPropagation(\n      layerTemplate,\n      layerTemplate.settings.praxisOpts ?? settings\n    ),\n};\n\nexport const trainDefaults: IFeedForwardTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callbackPeriod: 10,\n  errorCheckInterval: 100,\n  timeout: Infinity,\n};\n\nexport interface IFeedForwardJSON {\n  type: string;\n  sizes: number[];\n  layers: ILayerJSON[];\n  inputLayerIndex: number;\n  outputLayerIndex: number;\n}\n\nexport class FeedForward<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  static _validateTrainingOptions(\n    options: Partial<IFeedForwardTrainingOptions>\n  ): void {\n    const {\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      learningRate,\n      callback,\n      callbackPeriod,\n      timeout,\n    } = options;\n    interface IValidation {\n      [optionName: string]: () => boolean;\n    }\n    const validations: IValidation = {\n      iterations: () => typeof iterations === 'number' && iterations > 0,\n      errorThresh: () =>\n        typeof errorThresh === 'number' && errorThresh > 0 && errorThresh < 1,\n      log: () => typeof log === 'function' || typeof log === 'boolean',\n      logPeriod: () => typeof logPeriod === 'number' && logPeriod > 0,\n      learningRate: () =>\n        typeof learningRate === 'number' &&\n        learningRate > 0 &&\n        learningRate < 1,\n      callback: () => typeof callback === 'function' || callback === null,\n      callbackPeriod: () =>\n        typeof callbackPeriod === 'number' && callbackPeriod > 0,\n      timeout: () => typeof timeout === 'number' && timeout > 0,\n    };\n    Object.keys(trainDefaults).forEach((key: string): void => {\n      if (validations.hasOwnProperty(key) && !validations[key]()) {\n        const val = options[key as keyof IFeedForwardTrainingOptions];\n        throw new Error(\n          `[${key}, ${(\n            val ?? 'undefined'\n          ).toString()}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   */\n  _setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  _updateTrainingOptions(opts: Partial<IFeedForwardTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...this.trainOpts, ...opts };\n    FeedForward._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log ?? this.trainOpts.log);\n    const { callback, callbackPeriod, errorCheckInterval } = this.trainOpts;\n    if (callback && callbackPeriod !== errorCheckInterval) {\n      console.warn(\n        `options.callbackPeriod with value of ${(\n          callbackPeriod ?? 'undefined'\n        ).toString()} does not match options.errorCheckInterval with value of ${(\n          errorCheckInterval ?? 'undefined'\n        ).toString()}, if logging error, it will repeat.  These values may need to match`\n      );\n    }\n  }\n\n  trainOpts: Partial<IFeedForwardTrainingOptions> = {};\n  options: IFeedForwardOptions;\n  layers: ILayer[] | null = null;\n  _inputLayer: ILayer | null = null;\n  _hiddenLayers: ILayer[] | null = null;\n  _outputLayer: ILayer | null = null;\n  _model: ILayer[] | null = null;\n  meanSquaredError: MeanSquaredError | null = null;\n  inputLookup: INumberHash | null = null;\n  inputLookupLength: number | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength: number | null = null;\n  constructor(options: IFeedForwardOptions = {}) {\n    this.options = { ...defaults, ...options };\n    this._updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n  }\n\n  _connectOptionsLayers(): ILayer[] {\n    const { inputLayerIndex, outputLayerIndex, layers } = this.options;\n    if (!layers) throw new Error('this.options.layers in unexpected state');\n    if (typeof inputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    if (typeof outputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    const inputLayer = layers[inputLayerIndex];\n    if (!inputLayer) {\n      throw new Error('inputLayer not found in this.options.layers');\n    }\n    const outputLayer = layers[outputLayerIndex];\n    if (!outputLayer) {\n      throw new Error('outputLayer not found in this.options.layers');\n    }\n    this._inputLayer = inputLayer;\n    this._hiddenLayers = layers.slice(\n      inputLayerIndex,\n      outputLayerIndex - inputLayerIndex\n    );\n    this._outputLayer = outputLayer;\n    return layers;\n  }\n\n  _connectNewLayers(): ILayer[] {\n    const { inputLayer, outputLayer } = this.options;\n    if (!inputLayer) throw new Error('inputLayer not defined');\n    const layers: ILayer[] = [];\n    this._inputLayer = inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n\n    if (!outputLayer) throw new Error('outputLayer not defined');\n    this._outputLayer = outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    return flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    this._hiddenLayers = [];\n    const result: ILayer[] = [];\n    const { hiddenLayers } = this.options;\n\n    if (!hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i](previousLayer, i);\n      result.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n\n    return result;\n  }\n\n  initialize(): void {\n    this.layers = this.options.layers\n      ? this._connectOptionsLayers()\n      : this._connectNewLayers();\n    this.initializeLayers(this.layers);\n    this._model = this.layers.filter((l) => l instanceof Model);\n  }\n\n  initializeLayers(layers: ILayer[]): void {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (\n        layer instanceof Model &&\n        layer.praxis === null &&\n        typeof this.options.initPraxis === 'function'\n      ) {\n        layer.praxis = this.options.initPraxis(\n          layer,\n          layer.settings.praxisOpts ?? this.options.praxisOpts ?? {}\n        );\n        layer.praxis.setupKernels();\n      }\n    }\n\n    const lastLayer = layers[layers.length - 1];\n    this.meanSquaredError = new MeanSquaredError({\n      width: lastLayer.width,\n      height: lastLayer.height,\n    });\n  }\n\n  run(input: InputType): OutputType {\n    let typeSafeInput: INumberArray | KernelOutput;\n    if (Array.isArray(input) || (input as Float32Array).buffer) {\n      typeSafeInput = input as INumberArray;\n    } else {\n      if (this.inputLookup) {\n        typeSafeInput = lookup.toArray(\n          this.inputLookup,\n          input as INumberHash,\n          this.inputLookupLength as number\n        );\n      } else {\n        throw new Error('input is incompatible with net');\n      }\n    }\n\n    let output = this.runInput(typeSafeInput as KernelOutput);\n    if (output instanceof Texture) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      return lookup.toObject(\n        this.outputLookup,\n        output as number[]\n      ) as OutputType;\n    }\n    return output as OutputType;\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    if (!this.layers) throw new Error('not initialized');\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights as KernelOutput;\n  }\n\n  train(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatterns = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatterns\n      );\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const calculateError = (): number =>\n          this._calculateTrainingError(preparedData);\n        const trainPatterns = (): void => this._trainPatterns(preparedData);\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this._trainingTick(\n                status,\n                endTime,\n                calculateError,\n                trainPatterns\n              ) || thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  _trainingTick(\n    status: ITrainingStatus,\n    endTime: number,\n    calculateError: () => number,\n    trainPatterns: () => void\n  ): boolean {\n    const { trainOpts } = this;\n    if (\n      status.iterations >= (trainOpts.iterations as number) ||\n      status.error <= (trainOpts.errorThresh as number) ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    if (\n      typeof trainOpts.log === 'function' &&\n      status.iterations % (trainOpts.logPeriod as number) === 0\n    ) {\n      status.error = calculateError();\n      trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (\n      status.iterations % (trainOpts.errorCheckInterval as number) ===\n      0\n    ) {\n      status.error = calculateError();\n    } else {\n      trainPatterns();\n    }\n\n    if (\n      trainOpts.callback &&\n      status.iterations % (trainOpts.callbackPeriod as number) === 0\n    ) {\n      trainOpts.callback(Object.assign(status));\n    }\n\n    status.iterations++;\n    return true;\n  }\n\n  _prepTraining(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions>\n  ): IFeedForwardPreppedTrainingData {\n    this._updateTrainingOptions(options);\n\n    const formattedData = this.formatData(data);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(formattedData),\n      status,\n      endTime,\n    };\n  }\n\n  verifyIsInitialized(): void {\n    if (!this._model) {\n      this.initialize();\n    }\n  }\n\n  _calculateTrainingError(preparedData: IFeedForwardGPUTrainingData[]): number {\n    let sum: Float32Array | KernelOutput = new Float32Array([0]);\n    const meanSquaredError = this.meanSquaredError as MeanSquaredError;\n    for (let i = 0; i < preparedData.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(\n        preparedData[i].input,\n        preparedData[i].output,\n        true\n      ) as number;\n      sum = meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = meanSquaredError.divide(preparedData.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray: number[] = result.toArray() as number[];\n      release(result);\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data: IFeedForwardGPUTrainingData[]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  _trainPattern(\n    input: KernelOutput,\n    target: KernelOutput,\n    logErrorRate: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this._outputLayer?.errors) {\n        throw new Error('outputLayer.errors not defined');\n      }\n      return (this.meanSquaredError as MeanSquaredError).calculate(\n        this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target: KernelOutput): void {\n    const layers = this.layers as ILayer[];\n    for (let i = layers.length - 1; i > -1; i--) {\n      layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.trainOpts.learningRate as number);\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(\n    data:\n      | Array<IFeedForwardTrainingData<InputType, OutputType>>\n      | IFeedForwardTrainingData<InputType, OutputType>\n  ): IFeedForwardNormalizedTrainingData[] {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    let formattedData: Array<Partial<IFeedForwardNormalizedTrainingData>>;\n    if (\n      Array.isArray(data) &&\n      !Array.isArray(inputDatumCheck) &&\n      !(inputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data, 'input');\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map((datumParam): Partial<\n        IFeedForwardNormalizedTrainingData\n      > => {\n        const array = lookup.toArray(\n          this.inputLookup as INumberHash,\n          datumParam.input as INumberHash,\n          this.inputLookupLength as number\n        );\n        return { input: array };\n      }, this);\n    } else {\n      formattedData = data as typeof formattedData;\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (\n      !Array.isArray(outputDatumCheck) &&\n      !(outputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.outputLookup) {\n        const lookupTable = new LookupTable(data, 'output');\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map(\n        (datumParam, index): IFeedForwardNormalizedTrainingData => {\n          const array = lookup.toArray(\n            this.outputLookup as INumberHash,\n            datumParam.output as INumberHash,\n            this.inputLookupLength as number\n          );\n          return {\n            input: formattedData[index].input as Float32Array,\n            output: array,\n          };\n        },\n        this\n      );\n    }\n    return formattedData as IFeedForwardNormalizedTrainingData[];\n  }\n\n  transferData(\n    formattedData: IFeedForwardNormalizedTrainingData[]\n  ): IFeedForwardGPUTrainingData[] {\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].input.length],\n        immutable: true,\n      }\n    );\n    const transferOutput = makeKernel(\n      function (this: IKernelFunctionThis, value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].output.length],\n        immutable: true,\n      }\n    );\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n    return transferredData;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(): void {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON(): IFeedForwardJSON {\n    if (!this.layers) {\n      this.initialize();\n    }\n    if (\n      !this._model ||\n      !this.layers ||\n      !this._inputLayer ||\n      !this._hiddenLayers ||\n      !this._outputLayer\n    ) {\n      throw new Error('network is not initialized');\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(\n          layer.inputLayer as ILayer\n        );\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(\n          layer.inputLayer1 as ILayer\n        );\n        jsonLayer.inputLayer2Index = this.layers.indexOf(\n          layer.inputLayer2 as ILayer\n        );\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes:\n        this.options.sizes ??\n        [this._inputLayer.height]\n          .concat(this._hiddenLayers.map((l) => l.height))\n          .concat([this._outputLayer.height]),\n      outputLayerIndex: this.layers.indexOf(this._outputLayer),\n      layers: jsonLayers as ILayerJSON[],\n      inputLayerIndex: this.layers.indexOf(this._inputLayer),\n    };\n  }\n\n  static fromJSON(\n    json: IFeedForwardJSON,\n    getLayer?: (\n      layerJson: ILayerJSON,\n      inputLayer1?: ILayer,\n      inputLayer2?: ILayer\n    ) => ILayer\n  ): FeedForward {\n    const jsonLayers = json.layers;\n    const layers: ILayer[] = [];\n    const inputLayer = getLayer\n      ? layerFromJSON(jsonLayers[0]) ?? getLayer(jsonLayers[0])\n      : layerFromJSON(jsonLayers[0]);\n\n    if (!inputLayer) throw new Error('unable to find layer');\n\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (\n        typeof jsonLayer.inputLayerIndex === 'undefined' &&\n        typeof jsonLayer.inputLayer1Index === 'undefined' &&\n        typeof jsonLayer.inputLayer2Index === 'undefined'\n      ) {\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer) ?? getLayer(jsonLayer)\n          : layerFromJSON(jsonLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else if (typeof jsonLayer.inputLayerIndex === 'number') {\n        const inputLayer = layers[jsonLayer.inputLayerIndex];\n        if (!inputLayer) {\n          throw new Error('inputLayer1 not found');\n        }\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer) ??\n            getLayer(jsonLayer, inputLayer)\n          : layerFromJSON(jsonLayer, inputLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else {\n        if (typeof jsonLayer.inputLayer1Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer1Index not defined.'\n          );\n        }\n        if (typeof jsonLayer.inputLayer2Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer2Index not defined.'\n          );\n        }\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer1Index} not found.`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer2Index} not found.`\n          );\n\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer1, inputLayer2) ??\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n          : layerFromJSON(jsonLayer, inputLayer1, inputLayer2);\n\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      }\n    }\n\n    return new this({ ...json, layers });\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction(): void {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n}\n","export interface ILikelyNet<InputType, OutputType> {\n  run: (input: InputType) => OutputType;\n}\n\nexport function likely<\n  NetworkType extends ILikelyNet<\n    Parameters<NetworkType['run']>[0],\n    ReturnType<NetworkType['run']>\n  >\n>(\n  input: Parameters<NetworkType['run']>[0],\n  net: NetworkType\n): ReturnType<NetworkType['run']> | null {\n  if (!net) {\n    throw new TypeError(\n      `Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`\n    );\n  }\n\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.entries(output as number[]).forEach(([key, value]) => {\n    if (\n      typeof value !== 'undefined' &&\n      typeof value === 'number' &&\n      value > maxValue\n    ) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { Internal } from './internal';\nimport { release } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport class RecurrentConnection extends Internal {\n  settings: ILayerSettings = {};\n  layer: ILayer | null = null;\n  setLayer(layer: ILayer): void {\n    this.layer = layer;\n  }\n\n  get width(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.width;\n  }\n\n  set width(value: number) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.height;\n  }\n\n  set height(value: number) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    throw new Error('no longer using');\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { RecurrentConnection } from './layer/recurrent-connection';\nimport {\n  IRecurrentInput,\n  RecurrentInput,\n  RecurrentZeros,\n  ILayer,\n  ILayerSettings,\n} from './layer';\nimport {\n  Activation,\n  EntryPoint,\n  EntryPointType,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './layer/types';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport {\n  FeedForward,\n  IFeedForwardOptions,\n  IFeedForwardTrainingOptions,\n  ITrainingStatus,\n} from './feed-forward';\nimport { release, clone } from './utilities/kernel';\nimport { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport { OperatorType } from './layer/operator';\nimport { ModifierType } from './layer/modifier';\nimport { FilterType } from './layer/filter';\nimport { ActivationType } from './layer/activation';\nimport { TargetType } from './layer/target';\n\nexport interface IRecurrentTrainingOptions\n  extends IFeedForwardTrainingOptions {}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-expect-error\nexport interface IRecurrentOptions extends IFeedForwardOptions {\n  hiddenLayers: Array<\n    (\n      inputLayer: ILayer,\n      recurrentInput: IRecurrentInput,\n      index: number\n    ) => ILayer\n  >;\n}\n\nexport interface IRecurrentPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: T[][];\n  endTime: number;\n}\n\nexport class Recurrent<\n  T extends TextureArrayOutput = TextureArrayOutput\n> extends FeedForward {\n  trainOpts: IRecurrentTrainingOptions = {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRecurrentOptions;\n  _outputConnection: RecurrentConnection | null = null;\n  _layerSets: ILayer[][] = [];\n  _hiddenLayerOutputIndices: number[] = [];\n  _model: ILayer[] | null = null;\n\n  // TODO: use generics in extend\n  constructor(\n    options: Partial<IRecurrentOptions & IRecurrentTrainingOptions> = {}\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    super(options);\n  }\n\n  _connectLayers(): {\n    inputLayer: ILayer;\n    hiddenLayers: ILayer[];\n    outputLayer: ILayer;\n  } {\n    if (!this.options.inputLayer) {\n      throw new Error('inputLayer not found');\n    }\n    if (!this.options.outputLayer) {\n      throw new Error('outputLayer not found');\n    }\n    const inputLayer = this.options.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    const outputLayer = this.options.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      -1\n    );\n    return {\n      inputLayer,\n      hiddenLayers,\n      outputLayer,\n    };\n  }\n\n  _connectLayersDeep(): ILayer[] {\n    const layers: ILayer[] = [];\n    const previousLayers = this._layerSets[this._layerSets.length - 1];\n    let usedHiddenLayerOutputIndex = 0;\n\n    function findInputLayer(inputLayer: ILayer) {\n      const index = previousLayers.indexOf(inputLayer);\n      if (index < 0) throw new Error('unable to find layer');\n      return layers[index];\n    }\n\n    function layerSettings(layer: ILayer): ILayerSettings {\n      return {\n        ...layer.settings,\n        weights: null,\n        deltas: null,\n        praxis: null,\n      };\n    }\n\n    for (let i = 0; i < previousLayers.length; i++) {\n      const previousLayer = previousLayers[i];\n      let layer: ILayer;\n\n      if (previousLayer instanceof Activation) {\n        layer = new (previousLayer.constructor as ActivationType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof EntryPoint) {\n        layer = new (previousLayer.constructor as EntryPointType)(\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Filter) {\n        layer = new (previousLayer.constructor as FilterType)(\n          layerSettings(previousLayer.inputLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Internal) {\n        const previousHiddenLayerOutput =\n          previousLayers[\n            this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]\n          ];\n        if (previousLayer instanceof RecurrentConnection) {\n          throw new Error('unfinished');\n        } else if (previousLayer instanceof RecurrentInput) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else if (previousLayer instanceof RecurrentZeros) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else {\n          throw new Error(\n            `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n          );\n        }\n      } else if (\n        previousLayer instanceof InternalModel ||\n        previousLayer instanceof Model\n      ) {\n        layer = previousLayer;\n      } else if (previousLayer instanceof Modifier) {\n        layer = new (previousLayer.constructor as ModifierType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Operator) {\n        layer = new (previousLayer.constructor as OperatorType)(\n          findInputLayer(previousLayer.inputLayer1),\n          findInputLayer(previousLayer.inputLayer2),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Target) {\n        layer = new (previousLayer.constructor as TargetType)(\n          layerSettings(previousLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else {\n        throw new Error(\n          `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n        );\n      }\n      layers.push(layer);\n    }\n\n    return layers;\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    const hiddenLayers = [];\n\n    if (!this.options.hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < this.options.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.options.hiddenLayers[i](\n        previousLayer,\n        recurrentInput,\n        i\n      );\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n\n    return hiddenLayers;\n  }\n\n  initialize(): void {\n    this._outputConnection = new RecurrentConnection();\n    let layerSet: ILayer[];\n    if (this.options.layers) {\n      layerSet = this._connectOptionsLayers();\n    } else {\n      const { inputLayer, hiddenLayers, outputLayer } = this._connectLayers();\n      layerSet = flattenLayers([inputLayer, ...hiddenLayers, outputLayer]);\n      this._hiddenLayerOutputIndices = hiddenLayers.map((l) =>\n        layerSet.indexOf(l)\n      );\n      this._inputLayer = inputLayer;\n      this._hiddenLayers = hiddenLayers;\n      this._outputLayer = outputLayer;\n    }\n    this.layers = layerSet;\n    this._layerSets = [layerSet];\n    this._model = layerSet.filter(\n      (l) => l instanceof Model || l instanceof InternalModel\n    );\n    this.initializeLayers(layerSet);\n  }\n\n  initializeDeep(): void {\n    const layers = this._connectLayersDeep();\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels(true);\n      layer.reuseKernels(this._layerSets[0][i]);\n    }\n    this._layerSets.push(layers);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run(inputs: T[]): T[] {\n    while (this._layerSets.length <= inputs.length) {\n      this.initializeDeep();\n    }\n    const result = this.runInputs(inputs);\n    if (result instanceof Texture) {\n      return result.toArray() as T[];\n    }\n    return result as T[];\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    throw new Error('use .runInputs()');\n  }\n\n  runInputs(inputs: T[]): KernelOutput {\n    while (this._layerSets.length < inputs.length) {\n      this.initializeDeep();\n    }\n    const max = inputs.length - 1; // last output will be compared with last index\n    for (let x = 0; x <= max; x++) {\n      const layerSet = this._layerSets[x];\n      layerSet[0].predict(inputs[x]);\n      for (let i = 1; i < layerSet.length; i++) {\n        layerSet[i].predict();\n      }\n    }\n    const lastLayerUsed = this._layerSets[max];\n    const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n    this.end();\n    return result as KernelOutput;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatters = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatters\n      );\n    }\n    return status;\n  }\n\n  end(): void {\n    const x = this._layerSets.length - 1;\n    const lastLayerSet = this._layerSets[x];\n    lastLayerSet[0].predict([new Float32Array([0])]);\n    for (let i = 1; i < lastLayerSet.length; i++) {\n      lastLayerSet[i].predict();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  transferData(formattedData: T[][]): T[][] {\n    return formattedData;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _prepTraining(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions>\n  ): IRecurrentPreppedTrainingData<T> {\n    this._updateTrainingOptions(options);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(data),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateTrainingError(data: T[][]): number {\n    if (!this.meanSquaredError) {\n      throw new Error('this.meanSquaredError not setup');\n    }\n    let sum: KernelOutput = new Float32Array(1);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i], true) as KernelOutput;\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray = result.toArray() as number[];\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  // TODO: more types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: Float32Array): Float32Array {\n    return data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateDeltas(target: T[]): void {\n    const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n    // Iterate from the second to last layer backwards, propagating 0's\n    for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n      lastLayerSet[i].compare();\n    }\n\n    for (let x = target.length - 2; x >= 0; x--) {\n      const layerSet = this._layerSets[x];\n      layerSet[layerSet.length - 1].compare(target[x + 1]);\n      for (let i = layerSet.length - 2; i >= 0; i--) {\n        layerSet[i].compare();\n      }\n    }\n  }\n\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.options.learningRate ?? 0);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPatterns(data: T[][]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i], false);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPattern(inputs: T[], logErrorRate: boolean): KernelOutput | null {\n    // forward propagate\n    this.runInputs(inputs);\n\n    // back propagate\n    this._calculateDeltas(inputs);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this.meanSquaredError) {\n        throw new Error('this.meanSquaredError not setup');\n      }\n      let error: KernelOutput = new Float32Array(1);\n      for (let i = 0, max = inputs.length - 2; i <= max; i++) {\n        const layerSet = this._layerSets[i];\n        const lastLayer = layerSet[layerSet.length - 1];\n        const prevError: KernelOutput = error;\n        error = this.meanSquaredError.addAbsolute(\n          prevError,\n          lastLayer.errors as KernelOutput\n        );\n        release(prevError);\n      }\n      return clone(this.meanSquaredError.divide(inputs.length, error));\n    }\n    return null;\n  }\n}\n","import { zeros } from '../../utilities/zeros';\n\nexport interface IMatrixJSON {\n  rows: number;\n  columns: number;\n  weights: number[];\n}\n/**\n * A matrix\n */\nexport class Matrix {\n  rows = 0;\n  columns = 0;\n  weights: Float32Array;\n  deltas: Float32Array;\n\n  constructor(rows?: number, columns?: number) {\n    if (rows) this.rows = rows;\n    if (columns) this.columns = columns;\n\n    this.weights = zeros(this.rows * this.columns);\n    this.deltas = zeros(this.rows * this.columns);\n  }\n\n  getWeight(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.weights[ix];\n  }\n\n  setWeight(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.weights[ix] = v;\n\n    return this;\n  }\n\n  getDelta(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.deltas.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.deltas[ix];\n  }\n\n  setDelta(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.deltas[ix] = v;\n\n    return this;\n  }\n\n  toJSON(): IMatrixJSON {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: Array.from(this.weights.slice(0)),\n    };\n  }\n\n  static fromJSON(json: IMatrixJSON): Matrix {\n    const matrix = new Matrix(json.rows, json.columns);\n\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n\n    return matrix;\n  }\n\n  static fromArray(weights: Float32Array[] | number[][]): Matrix {\n    const matrix = new Matrix(weights.length, weights[0].length);\n    matrix.fromArray(weights);\n    return matrix;\n  }\n\n  deltasToArray(): number[][] {\n    return this.toArray('deltas');\n  }\n\n  weightsToArray(): number[][] {\n    return this.toArray('weights');\n  }\n\n  toArray(prop: 'weights' | 'deltas' = 'weights'): number[][] {\n    const result: number[][] = new Array(this.rows);\n    this.iterate({\n      row: (rowIndex): void => {\n        result[rowIndex] = new Array(this.columns);\n      },\n      column: (rowIndex, columnIndex): void => {\n        if (prop === 'weights') {\n          result[rowIndex][columnIndex] = this.getWeight(rowIndex, columnIndex);\n        } else if (prop === 'deltas') {\n          result[rowIndex][columnIndex] = this.getDelta(rowIndex, columnIndex);\n        }\n      },\n    });\n    return result;\n  }\n\n  fromArray(\n    array: number[][] | Float32Array[],\n    prop: 'weights' | 'deltas' = 'weights'\n  ): this {\n    if (array.length !== this.rows) {\n      throw new Error('rows do not match');\n    }\n    if (array[0].length !== this.columns) {\n      throw new Error('columns do not match');\n    }\n    this.iterate({\n      column: (rowIndex, columnIndex): void => {\n        const value = array[rowIndex][columnIndex];\n        if (typeof value !== 'number') {\n          throw new Error('value not number');\n        }\n        if (prop === 'weights') {\n          this.setWeight(rowIndex, columnIndex, value);\n        } else if (prop === 'deltas') {\n          this.setDelta(rowIndex, columnIndex, value);\n        }\n      },\n    });\n    return this;\n  }\n\n  iterate(callbacks: {\n    column?: (rowIndex: number, columnIndex: number) => void;\n    row?: (rowIndex: number) => void;\n  }): this {\n    const rows = this.rows;\n    const columns = this.columns;\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      if (callbacks.row) {\n        callbacks.row(rowIndex);\n      }\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        if (callbacks.column) {\n          callbacks.column(rowIndex, columnIndex);\n        }\n      }\n    }\n    return this;\n  }\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\n/** return Matrix but filled with random numbers from gaussian\n */\nexport class RandomMatrix extends Matrix {\n  std: number;\n\n  constructor(rows: number, columns: number, std: number) {\n    super(rows, columns);\n\n    this.std = std;\n\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n","import { Value, IRNNDatum } from '../recurrent/rnn-data-types';\n\nexport interface IDataFormatter {\n  indexTable: { [value: string]: number };\n  toIndexesInputOutput: (input: Value, output?: Value) => number[];\n  toIndexes: (input: string) => number[];\n  toCharacters: (output: number[]) => string[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n  toFunctionString: () => string;\n  formatDataIn: (input?: Value, output?: Value) => number[];\n  formatDataOut: (input: number[], output: number[]) => string;\n  format: (data: Array<IRNNDatum | Value>) => number[][];\n  isSetup: boolean;\n  toJSON: () => IDataFormatterJSON;\n}\n\nexport class DataFormatter implements IDataFormatter {\n  indexTable: { [key: string]: number; [key: number]: number } = {};\n  characterTable: { [key: number]: string | number | null } = {};\n  characters: Array<string | number> = [];\n  specialIndexes: number[] = [];\n  isSetup = false;\n\n  constructor(private values?: Array<IRNNDatum | Value>, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.setup(values, maxThreshold);\n  }\n\n  setup(values: Array<IRNNDatum | Value>, maxThreshold = 0): void {\n    if (this.isSetup) throw new Error('DataFormatter is already setup');\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n    if ((values[0] as IRNNDatum).input) {\n      this.addInputOutput();\n    }\n    this.addUnrecognized();\n    this.isSetup = true;\n  }\n\n  buildCharactersFromIterable(values: Array<IRNNDatum | Value>): void {\n    const tempCharactersTable: { [character: string]: boolean } = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      // if (typeof characters === 'string') {\n      //   const character = characters;\n      //   if (tempCharactersTable.hasOwnProperty(character)) continue;\n      //   tempCharactersTable[character] = true;\n      //   this.characters.push(character);\n      if (characters.hasOwnProperty('length')) {\n        const iteratable = characters as string[] | string;\n        for (\n          let characterIndex = 0, charactersLength = iteratable.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = iteratable[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (typeof characters === 'number') {\n        if (tempCharactersTable.hasOwnProperty(characters)) continue;\n        tempCharactersTable[characters] = true;\n        this.characters.push(characters);\n      } else if (typeof characters === 'boolean') {\n        const character = characters.toString();\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[character] = true;\n        this.characters.push(character);\n      } else if (\n        Array.isArray(characters) &&\n        typeof characters[0] === 'string'\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i] as string;\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        Array.isArray(characters) &&\n        (typeof characters[0] === 'number' ||\n          typeof characters[0] === 'boolean')\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i].toString();\n          if (tempCharactersTable.hasOwnProperty(dataFormatterIndex)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        characters.hasOwnProperty('input') &&\n        characters.hasOwnProperty('output')\n      ) {\n        const { input, output } = (characters as unknown) as IRNNDatum;\n        if (Array.isArray(input)) {\n          this.addCharacters(input, tempCharactersTable);\n        } else {\n          this.addCharacters(input.toString(), tempCharactersTable);\n        }\n\n        if (Array.isArray(output)) {\n          this.addCharacters(output, tempCharactersTable);\n        } else {\n          this.addCharacters(output.toString(), tempCharactersTable);\n        }\n      } else {\n        throw new Error('Unhandled value');\n      }\n    }\n  }\n\n  addCharacters(\n    characters: string | string[] | boolean[] | number[],\n    charactersTable: { [character: string]: boolean }\n  ): void {\n    for (let i = 0; i < characters.length; i++) {\n      const character = characters[i].toString();\n      if (charactersTable.hasOwnProperty(character)) continue;\n      charactersTable[character] = true;\n      this.characters.push(character);\n    }\n  }\n\n  buildTables(maxThreshold: number): void {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value: Value, maxThreshold = 0): number[] {\n    const result = [];\n    const { indexTable } = this;\n\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        value = value.toString();\n    }\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i].toString();\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable.unrecognized) {\n          index = indexTable.unrecognized;\n        } else {\n          throw new Error(`unrecognized character \"${character}\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(\n    input: Value,\n    output?: Value,\n    maxThreshold = 0\n  ): number[] {\n    const result: number[] = this.toIndexesValue(input, maxThreshold, true);\n\n    if (typeof output === 'undefined') return result;\n    return result.concat(this.toIndexesValue(output, maxThreshold, false));\n  }\n\n  toIndexesValue(\n    value: Value,\n    maxThreshold: number,\n    isInput: boolean\n  ): number[] {\n    if (typeof value === 'string') {\n      value = value.split('');\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      value = value.toString().split('');\n    } else if (\n      Array.isArray(value) &&\n      (typeof (value as number[])[0] === 'number' ||\n        typeof (value as boolean[])[0] === 'boolean' ||\n        typeof (value as string[])[0] === 'string')\n    ) {\n      value = (value as string[]).map((v) => v.toString());\n    } else {\n      throw new Error('unrecognized value');\n    }\n    if (isInput) {\n      value = value.concat(['stop-input', 'start-output']);\n    }\n    return this.toIndexes(value, maxThreshold);\n  }\n\n  toCharacters(indices: number[], maxThreshold = 0): string[] {\n    const result: string[] = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable.unrecognized) {\n          character = characterTable[indexTable.unrecognized];\n        } else {\n          throw new Error(`unrecognized index \"${index}\"`);\n        }\n      } else if (character !== null) {\n        result.push(character.toString());\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices: number[], maxThreshold: number): string {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput(): void {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized(): void {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(\n    string: string,\n    maxThreshold: number\n  ): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    const dataFormatter = new DataFormatter(values.split(''), maxThreshold);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(\n    data: IRNNDatum[],\n    maxThreshold?: number\n  ): DataFormatter {\n    const values: Array<string | string[]> = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n    }\n    const flatArray: string[] = Array.isArray(values)\n      ? (values as string[][]).flat()\n      : values;\n    const dataFormatter = new DataFormatter(\n      Array.from(new Set(flatArray)),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromString(string: string, maxThreshold = 0): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    return new DataFormatter(values.split(''), maxThreshold);\n  }\n\n  toJSON(): IDataFormatterJSON {\n    return {\n      indexTable: this.indexTable,\n      characterTable: this.characterTable,\n      values: this.values as Value[],\n      characters: this.characters,\n      specialIndexes: this.specialIndexes,\n    };\n  }\n\n  /** TODO: Type better, The type of json is not \"string that is a valid JSON\", it is a POJO in the shape of DataFormatter.\n   * this method re-hydrates the the data as an instance of DataFormatter.\n   */\n  static fromJSON(json: IDataFormatterJSON): DataFormatter {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  addSpecial(special: string | number, character = null): void {\n    const specialIndex = (this.indexTable[special] = this.characters.length);\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  toFunctionString(): string {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\nvar dataFormatter = {\n  toIndexes: function ${this.toIndexes.toString()},\n  toIndexesInputOutput: function ${this.toIndexesInputOutput.toString()},\n  toCharacters: function ${this.toCharacters.toString()},\n  toIndexesValue: function ${this.toIndexesValue.toString()},\n};`;\n  }\n\n  formatDataIn(input?: Value, output?: Value): number[] {\n    if (input === undefined) return [];\n    if (Array.isArray(input) && typeof input[0] === 'number') {\n      return input as number[];\n    }\n    if (this.indexTable?.hasOwnProperty('stop-input')) {\n      return this.toIndexesInputOutput(input, output);\n    }\n    return this.toIndexes(input);\n  }\n\n  formatDataOut(input: number[], output: number[]): string {\n    return this.toCharacters(output).join('');\n  }\n\n  format(data: Array<IRNNDatum | Value>): number[][] {\n    if (\n      typeof data[0] === 'number' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data as number[][];\n    }\n    const result: number[][] = [];\n    if (\n      typeof data[0] === 'string' ||\n      typeof data[0] === 'number' ||\n      Array.isArray(data[0])\n    ) {\n      if (!this.isSetup) {\n        this.setup(data);\n        for (let i = 0; i < data.length; i++) {\n          result.push(this.formatDataIn(validateAndCast(data[i] as Value)));\n        }\n      } else {\n        for (let i = 0, max = data.length; i < max; i++) {\n          result.push(this.formatDataIn(data[i] as Value));\n        }\n      }\n    } else if ((data[0] as IRNNDatum).input && (data[0] as IRNNDatum).output) {\n      if (!this.isSetup) {\n        this.setup(data);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(\n          this.formatDataIn(\n            validateAndCast((data[i] as IRNNDatum).input),\n            validateAndCast((data[i] as IRNNDatum).output)\n          )\n        );\n      }\n    } else {\n      throw new Error('unrecognized data');\n    }\n    return result;\n  }\n}\n\nfunction validateAndCast(value: Value): string | string[] {\n  if (typeof value === 'string') return value;\n  if (typeof value === 'number') return value.toString();\n  if (typeof value === 'boolean') return value.toString();\n  if (Array.isArray(value) && typeof value[0] === 'string')\n    return value as string[];\n  if (typeof value[0] === 'boolean') {\n    return (value as boolean[]).map((v: boolean) => v.toString());\n  }\n  if (typeof value[0] === 'number') {\n    return (value as number[]).map((v: number) => v.toString());\n  }\n  throw new Error(\n    'unrecognized value, expected string[], string, number[], number, boolean[], or boolean'\n  );\n}\n\nexport interface IDataFormatterJSON {\n  indexTable: { [key: string]: number; [key: number]: number };\n  characterTable: { [key: number]: string | number | null };\n  values: Value[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n}\n","import { Matrix } from '.';\n\nexport function copy(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n","import { Matrix } from '.';\n\n/**\n * add {left} and {right} matrix weights into {into}\n */\nexport function add(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {left} and {right} deltas\n */\nexport function addB(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * makes matrix weights and deltas all ones\n */\nexport function allOnes(product: Matrix): void {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function cloneNegative(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiply {left} and {right} matrix weights to {into}\n */\nexport function multiply(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {from} deltas to {left} and {right}\n */\nexport function multiplyB(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","import { Matrix } from '.';\n\nexport function multiplyElement(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  const { weights } = left;\n\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n */\nexport function multiplyElementB(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n *\n * relu {m} weights to {into} weights\n */\nexport function relu(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n */\nexport function reluB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function rowPluck(\n  product: Matrix,\n  left: Matrix,\n  rowPluckIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas into {m} deltas\n */\nexport function rowPluckB(\n  product: Matrix,\n  left: Matrix,\n  rowIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","import { Matrix } from '.';\n\nexport function sigmoid(product: Matrix, left: Matrix): void {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\n// function sig(x) {\n//   // helper function for computing sigmoid\n//   return 1 / (1 + Math.exp(-x));\n// }\n","import { Matrix } from '.';\n\nexport function sigmoidB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\nexport function softmax(matrix: Matrix): Matrix {\n  // probability volume\n  const result = new Matrix(matrix.rows, matrix.columns);\n  let maxVal = -999999;\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    if (matrix.weights[i] > maxVal) {\n      maxVal = matrix.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] = Math.exp(matrix.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n","import { Matrix } from '.';\n\nexport function tanh(product: Matrix, left: Matrix): void {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function tanhB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\nimport { add } from './add';\nimport { addB } from './add-b';\nimport { allOnes } from './all-ones';\nimport { cloneNegative } from './clone-negative';\nimport { multiply } from './multiply';\nimport { multiplyB } from './multiply-b';\nimport { multiplyElement } from './multiply-element';\nimport { multiplyElementB } from './multiply-element-b';\nimport { relu } from './relu';\nimport { reluB } from './relu-b';\nimport { rowPluck } from './row-pluck';\nimport { rowPluckB } from './row-pluck-b';\nimport { sigmoid } from './sigmoid';\nimport { sigmoidB } from './sigmoid-b';\nimport { softmax } from './softmax';\nimport { tanh } from './tanh';\nimport { tanhB } from './tanh-b';\n\ntype PropagateIndex = (product: Matrix, left: Matrix, index: number) => void;\ntype PropagateProduct = (product: Matrix) => void;\ntype PropagateProductFromLeft = (product: Matrix, left: Matrix) => void;\ntype PropagateProductFromLeftRight = (\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n) => void;\ntype PropagateFunction =\n  | PropagateIndex\n  | PropagateProduct\n  | PropagateProductFromLeft\n  | PropagateProductFromLeftRight;\n\nexport interface IState {\n  name: string;\n  product: Matrix;\n  left?: Matrix;\n  right?: Matrix;\n  forwardFn: PropagateFunction;\n  backpropagationFn: PropagateFunction;\n}\n\nexport class Equation {\n  states: IState[] = [];\n  inputValue?: Float32Array;\n  inputRow = 0;\n\n  add(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'add',\n      product,\n      left,\n      right,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n\n    return product;\n  }\n\n  allOnes(rows: number, columns: number): Matrix {\n    const product = new Matrix(rows, columns);\n\n    this.states.push({\n      name: 'allOnes',\n      product,\n      left: product,\n      forwardFn: allOnes,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  cloneNegative(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'cloneNegative',\n      product,\n      left: matrix,\n      forwardFn: cloneNegative,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   */\n  subtract(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   */\n  multiply(left: Matrix, right: Matrix): Matrix {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, right.columns);\n\n    this.states.push({\n      name: 'multiply',\n      product,\n      left,\n      right,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   */\n  multiplyElement(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'multiplyElement',\n      product,\n      left,\n      right,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   */\n  relu(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'relu',\n      product,\n      left: matrix,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n\n    return product;\n  }\n\n  /**\n   * input a matrix\n   */\n  input(input: Matrix): Matrix {\n    this.states.push({\n      name: 'input',\n      product: input,\n      forwardFn: (product: Matrix) => {\n        if (!this.inputValue) return;\n        if (this.inputValue.length !== product.weights.length) {\n          throw new Error('this.inputValue is of wrong dimensions');\n        }\n        product.weights = input.weights = this.inputValue;\n      },\n      backpropagationFn: () => {},\n    });\n\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   */\n  inputMatrixToRow(matrix: Matrix): Matrix {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const product = new Matrix(matrix.columns, 1);\n\n    this.states.push({\n      name: 'inputMatrixToRow',\n      product,\n      left: matrix,\n      get right() {\n        return (self.inputRow as unknown) as Matrix;\n      },\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   */\n  sigmoid(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'sigmoid',\n      product,\n      left: matrix,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   */\n  tanh(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'tanh',\n      product,\n      left: matrix,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n\n    return product;\n  }\n\n  /**\n   *\n   * Observe a matrix for debugging\n   */\n  observe(matrix: Matrix): Matrix {\n    this.states.push({\n      name: 'observe',\n      product: new Matrix(),\n      forwardFn: () => {},\n      backpropagationFn: () => {},\n    });\n\n    return matrix;\n  }\n\n  /**\n   * Run index through equations via forward propagation\n   */\n  runIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via forward propagation\n   */\n  runInput(inputValue: Float32Array): Matrix {\n    this.inputValue = inputValue;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via back propagation\n   */\n  backpropagate(): Matrix {\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run index through equations via back propagation\n   */\n  backpropagateIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Predict a target value from equation\n   */\n  predictTarget(input: Float32Array, target: Float32Array): number {\n    let errorSum = 0;\n    const output = this.runInput(input);\n\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n\n    return errorSum;\n  }\n\n  /**\n   * Predict a target index from equation\n   */\n  predictTargetIndex(input: number, target: number): number {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    const probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n","import { Matrix } from '.';\n\nexport function maxI(matrix: Matrix): number {\n  // argmax of array w\n  const { weights } = matrix;\n  let maxv = weights[0];\n  let maxix = 0;\n\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n\n  return maxix;\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\nexport function sampleI(matrix: Matrix): number {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  const w = matrix.weights;\n  let x = 0;\n  let i = 0;\n\n  while (true) {\n    x += w[i];\n\n    if (x > r) {\n      return i;\n    }\n\n    i++;\n  }\n}\n","import { Log } from '../feed-forward';\nimport { INeuralNetworkTrainOptions } from '../neural-network';\nimport {\n  DataFormatter,\n  IDataFormatter,\n  IDataFormatterJSON,\n} from '../utilities/data-formatter';\nimport { randomFloat } from '../utilities/random';\nimport { zeros } from '../utilities/zeros';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { copy } from './matrix/copy';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport { IRNNDatum, Value } from './rnn-data-types';\n\nexport interface IRNNModel {\n  isInitialized: boolean;\n  input: Matrix;\n  hiddenLayers: IRNNHiddenLayerModel[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport interface IRNNOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatter;\n  json?: IRNNJSON;\n}\n\nexport interface IRNNJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatterJSON;\n}\n\nexport interface IRNNTrainingOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number;\n}\n\nexport interface IRNNJSONTrainOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n}\n\nexport const trainDefaults: IRNNTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callbackPeriod: 10,\n  timeout: Infinity,\n};\n\nexport interface IRNNHiddenLayer {\n  [key: string]: RandomMatrix | Matrix;\n}\n\nexport interface IRNNHiddenLayerModel extends IRNNHiddenLayer {\n  // wxh\n  weight: RandomMatrix;\n  // whh\n  transition: RandomMatrix;\n  // bhh\n  bias: Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    inputSize: 20,\n    inputRange: 20,\n    hiddenLayers: [20, 20],\n    outputSize: 20,\n    decayRate: 0.999,\n    smoothEps: 1e-8,\n    regc: 0.000001,\n    clipval: 5,\n    maxPredictionLength: 100,\n    dataFormatter: new DataFormatter(),\n  };\n};\n\nexport interface IRNNStatus {\n  iterations: number;\n  error: number;\n}\n\nexport interface IRNNPreppedTrainingData {\n  status: IRNNStatus;\n  preparedData: number[][];\n  endTime: number;\n}\n\nexport class RNN {\n  options: IRNNOptions = { ...defaults() };\n  trainOpts: IRNNTrainingOptions = { ...trainDefaults };\n  stepCache: { [index: number]: Float32Array } = {};\n  runs = 0;\n  ratioClipped = 0;\n  model: IRNNModel = Object.seal({\n    isInitialized: false,\n    input: new Matrix(0, 0),\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  initialLayerInputs: Matrix[] = [];\n\n  constructor(options: Partial<IRNNOptions & IRNNTrainingOptions> = {}) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      // ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize(): void {\n    const { dataFormatter } = this.options;\n    if (dataFormatter?.characters.length) {\n      this.options.inputSize = this.options.inputRange = this.options.outputSize =\n        dataFormatter.characters.length;\n    }\n    this.model = this.mapModel();\n  }\n\n  createHiddenLayers(): IRNNHiddenLayer[] {\n    const { hiddenLayers, inputSize } = this.options;\n    const hiddenLayersModel: IRNNHiddenLayer[] = [];\n    // 0 is end, so add 1 to offset\n    hiddenLayersModel.push(this.getHiddenLayer(hiddenLayers[0], inputSize));\n    let prevSize = hiddenLayers[0];\n\n    for (let d = 1; d < hiddenLayers.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenLayers[d];\n      hiddenLayersModel.push(this.getHiddenLayer(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n    return hiddenLayersModel;\n  }\n\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    if (!hiddenLayer.weight || !hiddenLayer.transition || !hiddenLayer.bias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix(): RandomMatrix {\n    const { inputRange, inputSize } = this.options;\n    if (inputRange < 1)\n      throw new Error('this.options.inputRange not an expected number');\n    if (inputSize < 1)\n      throw new Error('this.options.inputSize not an expected number');\n\n    // 0 is end, so add 1 to offset\n    return new RandomMatrix(inputRange + 1, inputSize, 0.08);\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize, hiddenLayers } = this.options;\n    const lastHiddenSize = last(hiddenLayers);\n\n    // 0 is end, so add 1 to offset\n    return {\n      // whd\n      outputConnector: new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08),\n      // 0 is end, so add 1 to offset\n      // bd\n      output: new Matrix(outputSize + 1, 1),\n    };\n  }\n\n  bindEquation(): void {\n    const { model } = this;\n    const { hiddenLayers } = this.options;\n    const equation = new Equation();\n    const outputs: Matrix[] = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? last(model.equationConnections)\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      model.hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      if (!equationConnection[i]) {\n        throw new Error(`Cannot find equation at index ${i}`);\n      }\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        model.hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel(): IRNNModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const input = this.createInputMatrix();\n    allMatrices.push(input);\n\n    const hiddenLayers = this.createHiddenLayers() as IRNNHiddenLayerModel[];\n    if (!hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix: IRNNHiddenLayerModel = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { output, outputConnector } = this.createOutputMatrices();\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n\n    return Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  trainInput(input: number[]): number {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  backpropagate(input: number[]): void {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights(): void {\n    const { regc, clipval, decayRate, smoothEps } = this.options;\n    const { trainOpts, model, stepCache } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        } else if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-learningRate * r) / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  get isRunnable(): boolean {\n    if (this.model && this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  checkRunnable(): void {\n    if (!this.isRunnable) {\n      throw new Error('Network not runnable');\n    }\n  }\n\n  run(rawInput: Value = [], isSampleI = false, temperature = 1): string {\n    const maxPredictionLength: number =\n      this.options.maxPredictionLength +\n      (rawInput !== null ? (rawInput as string).length : 0) +\n      (this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0);\n\n    this.checkRunnable();\n\n    const input: number[] =\n      this.options.dataFormatter && (rawInput as string).length > 0\n        ? this.options.dataFormatter.formatDataIn(rawInput)\n        : (rawInput as number[]);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (true) {\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.runIndex(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.options.dataFormatter.formatDataOut(\n      input,\n      output.slice(input.length).map((value) => value - 1)\n    );\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them\n   */\n  verifyIsInitialized(): void {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options: Partial<IRNNTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...options };\n    this.validateTrainingOptions(this.trainOpts as INeuralNetworkTrainOptions);\n    this.setLogMethod(options.log ?? this.trainOpts.log);\n    // TODO: Remove this?\n    // this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  protected prepTraining(\n    data: Array<Value | IRNNDatum>,\n    options: Partial<IRNNTrainingOptions>\n  ): IRNNPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.options.dataFormatter.format(data);\n    const endTime = Date.now() + (this.trainOpts.timeout ?? 0);\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<Value | IRNNDatum>,\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...trainDefaults,\n      ...trainOpts,\n    };\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    let error = Infinity;\n    let i;\n\n    let inputs: number[][];\n    if (this.options?.dataFormatter) {\n      inputs = this.options.dataFormatter.format(data);\n    } else if (\n      Array.isArray(data) &&\n      Array.isArray(data[0]) &&\n      typeof (data as number[][])[0][0] === 'number'\n    ) {\n      inputs = data as number[][];\n    } else {\n      throw new Error('training not in expected format of number[][]');\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < inputs.length; j++) {\n        const err = this.trainPattern(inputs[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) {\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      }\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat(data: Value): void {}\n\n  formatData(data: Value[]): number[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(this.options.dataFormatter.formatDataIn(data[i]));\n    }\n    return result;\n  }\n\n  toJSON(): IRNNJSON {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n    const { model, options } = this;\n\n    return {\n      type: this.constructor.name,\n      options: { ...options, dataFormatter: options.dataFormatter.toJSON() },\n      trainOpts: {\n        ...this.trainOpts,\n        timeout:\n          this.trainOpts.timeout === Infinity\n            ? 'Infinity'\n            : this.trainOpts.timeout,\n      },\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json: IRNNJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    if (options.dataFormatter) {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: DataFormatter.fromJSON(options.dataFormatter),\n      };\n    } else {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: new DataFormatter(),\n      };\n    }\n\n    this.model = Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  toFunction(cb?: (src: string) => string): RNNFunction {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix): number {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n          }\n          return `new Matrix(${m.rows}, ${m.columns})`;\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString: string): string {\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string): string {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${\n    this.options.dataFormatter\n      ? `${this.options.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${toInner(\n          this.options.dataFormatter.formatDataIn.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter !== null &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(\n          this.options.dataFormatter.formatDataOut.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  var maxPredictionLength =\n    ${this.options.maxPredictionLength} +\n    rawInput.length +\n    ${\n      this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0\n    };\n  var input = ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_1.Matrix', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'isSampleI',\n      'temperature',\n      cb ? cb(src) : src\n    ) as RNNFunction;\n  }\n\n  trainPattern(input: number[], logErrorRate?: boolean): number {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n}\n\nexport interface IRNNJSON {\n  type: string;\n  options: IRNNJSONOptions;\n  trainOpts: IRNNJSONTrainOptions;\n  input: IMatrixJSON;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n}\n\nexport function last<T>(values: T[]): T {\n  return values[values.length - 1];\n}\n\nexport type RNNFunction = (\n  rawInput?: Array<Value | IRNNDatum> | string,\n  isSampleI?: boolean,\n  temperature?: number\n) => string;\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface IGRUHiddenLayer extends IRNNHiddenLayer {\n  updateGateInputMatrix: RandomMatrix;\n  updateGateHiddenMatrix: RandomMatrix;\n  updateGateBias: Matrix;\n  resetGateInputMatrix: RandomMatrix;\n  resetGateHiddenMatrix: RandomMatrix;\n  resetGateBias: Matrix;\n  cellWriteInputMatrix: RandomMatrix;\n  cellWriteHiddenMatrix: RandomMatrix;\n  cellWriteBias: Matrix;\n}\n\nexport class GRU extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n\nexport function getGRUHiddenLayer(\n  hiddenSize: number,\n  prevSize: number\n): IGRUHiddenLayer {\n  return {\n    // update Gate\n    // wzxh\n    updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n    updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n    updateGateBias: new Matrix(hiddenSize, 1),\n    // reset Gate\n    // wrxh\n    resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n    resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n    resetGateBias: new Matrix(hiddenSize, 1),\n    // cell write parameters\n    // wcxh\n    cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n    cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellWriteBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getGRUEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: IGRUHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.updateGateInputMatrix ||\n    !hiddenLayer.updateGateHiddenMatrix ||\n    !hiddenLayer.updateGateBias ||\n    !hiddenLayer.resetGateInputMatrix ||\n    !hiddenLayer.resetGateHiddenMatrix ||\n    !hiddenLayer.resetGateBias ||\n    !hiddenLayer.cellWriteInputMatrix ||\n    !hiddenLayer.cellWriteHiddenMatrix ||\n    !hiddenLayer.cellWriteBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n  const allOnes = equation.allOnes.bind(equation);\n  const cloneNegative = equation.cloneNegative.bind(equation);\n\n  // update gate\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.updateGateBias\n    )\n  );\n\n  // reset gate\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.resetGateBias\n    )\n  );\n\n  // cell\n  const cell = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n        multiply(\n          hiddenLayer.cellWriteHiddenMatrix,\n          multiplyElement(resetGate, previousResult)\n        )\n      ),\n      hiddenLayer.cellWriteBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        allOnes(updateGate.rows, updateGate.columns),\n        cloneNegative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(previousResult, updateGate)\n  );\n}\n","export class ArrayLookupTable {\n  length = 0;\n  table: { [key: string]: number } = {};\n\n  constructor(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>,\n    public prop: 'input' | 'output'\n  ) {\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const ioValue = datum[prop];\n      for (let j = 0; j < ioValue.length; j++) {\n        const value = ioValue[j];\n        for (const p in value) {\n          if (!value.hasOwnProperty(p)) continue;\n          if (this.table.hasOwnProperty(p)) continue;\n          this.table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","import {\n  FormattableData,\n  InputOutputValue,\n  INumberArray,\n  INumberHash,\n  ITrainingDatum,\n  lookup,\n} from '../lookup';\nimport { ArrayLookupTable } from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  inputOutputArraysToFloat32Arrays,\n  inputOutputArrayToFloat32Arrays,\n  inputOutputObjectsToFloat32Arrays,\n  inputOutputObjectToFloat32Arrays,\n  objectToFloat32Array,\n  objectToFloat32Arrays,\n} from '../utilities/cast';\nimport { LookupTable } from '../utilities/lookup-table';\nimport { randomFloat } from '../utilities/random';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport {\n  defaults as rnnDefaults,\n  IRNNHiddenLayer,\n  IRNNHiddenLayerModel,\n  IRNNOptions,\n  IRNNStatus,\n  IRNNTrainingOptions,\n  last,\n  RNN,\n  trainDefaults as rnnTrainDefaults,\n} from './rnn';\n\nexport type ValuesOf<\n  T extends InputOutputValue | InputOutputValue[]\n> = T[number];\n\nexport interface IRNNTimeStepOptions extends IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  json?: IRNNTimeStepJSON;\n}\n\nexport interface IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n}\n\nexport interface IRNNTimeStepJSON {\n  type: string;\n  options: IRNNTimeStepJSONOptions;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n}\n\nexport interface IMisclass {\n  value: FormattableData;\n  actual: FormattableData;\n}\n\nexport interface ITestResults {\n  misclasses: IMisclass[];\n  error: number;\n  total: number;\n}\n\nexport interface IRNNTimeStepModel {\n  isInitialized: boolean;\n  hiddenLayers: IRNNHiddenLayer[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    ...rnnDefaults(),\n    inputSize: 1,\n    hiddenLayers: [20],\n    outputSize: 1,\n    inputRange: 0,\n  };\n};\n\nexport class RNNTimeStep extends RNN {\n  inputLookupLength = 0;\n  inputLookup: INumberHash | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  model: IRNNTimeStepModel = Object.seal({\n    isInitialized: false,\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRNNTimeStepOptions = defaults();\n  constructor(\n    options: Partial<IRNNTimeStepOptions & IRNNTrainingOptions> = {}\n  ) {\n    super();\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  createInputMatrix(): RandomMatrix {\n    throw new Error('Input Matrices do not exist on RNNTimeStep');\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize } = this.options;\n    const lastHiddenSize = last(this.options.hiddenLayers);\n\n    // whd\n    const outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    const output = new RandomMatrix(outputSize, 1, 0.08);\n    return { output, outputConnector };\n  }\n\n  bindEquation(): void {\n    const { model, options } = this;\n    const { hiddenLayers, inputSize } = options;\n    const layers = model.hiddenLayers;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.input(new Matrix(inputSize, 1)),\n      equationConnection[0],\n      layers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        layers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  initialize(): void {\n    this.model = this.mapModel();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  mapModel(): IRNNTimeStepModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const hiddenLayers = this.createHiddenLayers();\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { outputConnector, output } = this.createOutputMatrices();\n\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n    return Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  backpropagate(): void {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType\n  ): ValuesOf<InputType> {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArray(rawInput as Float32Array);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfArray(rawInput as Float32Array[]);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash); // Backward compatibility, will be result of `unknown` and need casting.  Better to just use net.runObject() directly\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfObject(rawInput as INumberHash[]);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecast<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType,\n    count = 1\n  ): InputType {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArray(rawInput as Float32Array, count);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfArray(rawInput as Float32Array[], count);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash);\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfObject(rawInput as INumberHash[], count);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecastArray(input: Float32Array, count = 1): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    if (this.options.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(\n          Float32Array.from([input[i]])\n        );\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(Float32Array.from([]));\n      }\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return Float32Array.from(result);\n  }\n\n  forecastArrayOfArray(input: Float32Array[], count = 1): Float32Array[] {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [Float32Array.from(lastOutput.weights)];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(Float32Array.from(lastOutput.weights.slice(0)));\n    }\n    this.end();\n    return result;\n  }\n\n  forecastArrayOfObject(input: INumberHash[], count = 1): INumberHash[] {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedData = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedData, count).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: FormattableData[],\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...rnnTrainDefaults,\n      ...trainOpts,\n    };\n    // Don't destructure here because this.setSize() can reset this.options.\n    if (this.options.inputSize === 1 && this.options.outputSize === 1) {\n      this.setSize(data);\n    }\n    this.verifySize();\n\n    const formattedData = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized();\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < formattedData.length; j++) {\n        const err = this.trainPattern(formattedData[j], true);\n        sum += err;\n      }\n      error = sum / formattedData.length;\n\n      if (isNaN(error))\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  trainArrayOfArray(input: Float32Array[]): number {\n    if (input.length < 2) {\n      throw new Error('input must be an array of 2 or more');\n    }\n    const { equations } = this.model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(input: Float32Array[], logErrorRate?: boolean): number {\n    const error = this.trainArrayOfArray(input);\n    this.backpropagate();\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n\n  setSize(data: FormattableData[]): void {\n    let size = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        size = 1;\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        size = (data as number[][][])[0][0].length;\n        break;\n      case 'array,array,object,number':\n        // inputs and outputs should match\n        size = Object.keys(lookup.toTable2D(data as INumberHash[][])).length;\n        break;\n      case 'array,datum,array,array,number':\n        size = ((data as unknown) as Array<{\n          [key: string]: number[][];\n        }>)[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        size = Object.keys(\n          lookup.toInputTable2D(\n            data as Array<{ input: Array<{ [key: string]: number }> }>\n          )\n        ).length;\n        break;\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n    this.options = Object.seal({\n      ...this.options,\n      inputSize: size,\n      outputSize: size,\n    });\n  }\n\n  verifySize(): void {\n    if (this.options.inputSize || this.options.outputSize) {\n      if (this.options.inputSize !== this.options.outputSize) {\n        throw new Error('manually set inputSize and outputSize mismatch');\n      }\n    }\n  }\n\n  runArray(input: Float32Array): number {\n    this.checkRunnable();\n    const { equations } = this.model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n    }\n    this.end();\n    return (lastOutput as Matrix).weights[0];\n  }\n\n  runArrayOfArray(input: Float32Array[]): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      const outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    return lastOutput ?? Float32Array.from([]);\n  }\n\n  runObject(input: INumberHash): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set');\n    }\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastArray(\n          inputArray,\n          this.outputLookupLength - inputArray.length\n        ),\n        inputArray.length\n      );\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastArray(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runArrayOfObject(input: INumberHash[]): INumberHash {\n    if (this.inputLookup === null) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (this.outputLookup === null) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedInput = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedInput, 1).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    )[0];\n  }\n\n  runArrayOfObjectOfArray(input: INumberHash[]): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.runArrayOfArray(\n        lookup.toArrays(this.inputLookup, input, this.inputLookupLength)\n      )\n    );\n  }\n\n  end(): void {\n    this.model.equations[this.model.equations.length - 1].runInput(\n      new Float32Array(this.options.outputSize)\n    );\n  }\n\n  requireInputOutputOfOne(): void {\n    if (this.options.inputSize !== 1) {\n      throw new Error('inputSize must be 1 for this data size');\n    }\n    if (this.options.outputSize !== 1) {\n      throw new Error('outputSize must be 1 for this data size');\n    }\n  }\n\n  // Handles data shape of 'array,number'\n  formatArray(data: number[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from([data[i]]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,array,number'\n  formatArrayOfArray(data: number[][]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize === 1 && outputSize === 1) {\n      for (let i = 0; i < data.length; i++) {\n        result.push(arrayToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    if (inputSize !== data[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== data[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from(data[i]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,object,number'\n  formatArrayOfObject(data: INumberHash[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(objectToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,object,number' when this.options.inputSize > 1\n  formatArrayOfObjectMulti(data: INumberHash[]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push([\n        objectToFloat32Array(data[i], this.inputLookup, this.inputLookupLength),\n      ]);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,number'\n  formatArrayOfDatumOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArrayToFloat32Arrays(\n          datum.input as number[],\n          datum.output as number[]\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,object,number'\n  formatArrayOfDatumOfObject(data: ITrainingDatum[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const inputLookup = new LookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new LookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectToFloat32Arrays(\n          datum.input as INumberHash,\n          datum.output as INumberHash\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,array,number'\n  formatArrayOfArrayOfArray(data: number[][][]): Float32Array[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(arraysToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,object,number'\n  formatArrayOfArrayOfObject(data: INumberHash[][]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const array = [];\n      for (let j = 0; j < data[i].length; j++) {\n        array.push(\n          objectToFloat32Array(\n            data[i][j],\n            this.inputLookup,\n            this.inputLookupLength\n          )\n        );\n      }\n      result.push(array);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,array,number'\n  formatArrayOfDatumOfArrayOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize !== (data[0].input as INumberArray[][])[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== (data[0].output as INumberArray[][])[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArraysToFloat32Arrays(\n          datum.input as number[][],\n          datum.output as number[][]\n        )\n      );\n    }\n    return result;\n  }\n\n  // 'Handles data shape of array,datum,array,object,number'\n  formatArrayOfDatumOfArrayOfObject(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>\n  ): Float32Array[][] {\n    if (!this.inputLookup) {\n      const inputLookup = new ArrayLookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new ArrayLookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set to usable number');\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectsToFloat32Arrays(\n          datum.input,\n          datum.output,\n          this.inputLookup,\n          this.outputLookup,\n          this.inputLookupLength,\n          this.outputLookupLength\n        )\n      );\n    }\n    return result;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: FormattableData[]): Float32Array[][] {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,number':\n        return this.formatArray(data as number[]);\n      case 'array,array,number':\n        return this.formatArrayOfArray(data as number[][]);\n      case 'array,object,number':\n        if (this.options.inputSize === 1) {\n          return this.formatArrayOfObject(data as INumberHash[]);\n        } else {\n          return this.formatArrayOfObjectMulti(data as INumberHash[]);\n        }\n      case 'array,datum,array,number':\n        return this.formatArrayOfDatumOfArray(data as ITrainingDatum[]);\n      case 'array,datum,object,number':\n        return this.formatArrayOfDatumOfObject(data as ITrainingDatum[]);\n      case 'array,array,array,number':\n        return this.formatArrayOfArrayOfArray(data as number[][][]);\n      case 'array,array,object,number':\n        return this.formatArrayOfArrayOfObject(data as INumberHash[][]);\n      case 'array,datum,array,array,number':\n        return this.formatArrayOfDatumOfArrayOfArray(data as ITrainingDatum[]);\n      case 'array,datum,array,object,number':\n        return this.formatArrayOfDatumOfArrayOfObject(\n          data as Array<{\n            input: Array<Record<string, number>>;\n            output: Array<Record<string, number>>;\n          }>\n        );\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  test(data: FormattableData[]): ITestResults {\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const formattedData = this.formatData(data);\n    for (let i = 0; i < formattedData.length; i++) {\n      const input = formattedData[i];\n      const output = this.run(input.splice(0, input.length - 1));\n      const target = input[input.length - 1];\n      let errors = 0;\n      let errorCount = 0;\n      for (let j = 0; j < output.length; j++) {\n        errorCount++;\n        const error = target[j] - output[j];\n        // mse\n        errors += error * error;\n      }\n      errorSum += errors / errorCount;\n      const errorsAbs = Math.abs(errors);\n      if (errorsAbs > this.trainOpts.errorThresh) {\n        const misclass = (data as number[][][])[i];\n        misclasses.push({\n          value: misclass,\n          actual: output,\n        });\n      }\n    }\n    return {\n      error: errorSum / formattedData.length,\n      misclasses,\n      total: formattedData.length,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  addFormat(value: FormattableData): void {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(\n          (value as ITrainingDatum).input as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(\n          (value as ITrainingDatum).output as INumberHash,\n          this.outputLookup ?? {}\n        );\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(\n          value as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(\n            this.inputLookup\n          ).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        const typedValue = value as INumberHash[];\n        for (let i = 0; i < typedValue.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(\n            typedValue[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(\n              this.inputLookup\n            ).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        const typedValue = value as ITrainingDatum;\n        const typedInput = typedValue.input as INumberHash[];\n        for (let i = 0; i < typedInput.length; i++) {\n          this.inputLookup = lookup.addKeys(\n            typedInput[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        const typedOutput = typedValue.output as INumberHash[];\n        for (let i = 0; i < typedOutput.length; i++) {\n          this.outputLookup = lookup.addKeys(\n            typedOutput[i],\n            this.outputLookup ?? {}\n          );\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toJSON(): IRNNTimeStepJSON {\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = { ...this.options, ...rnnDefaults };\n\n    return {\n      type: this.constructor.name,\n      options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: model.outputConnector.toJSON(),\n      output: model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  fromJSON(json: IRNNTimeStepJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    // backward compatibility for hiddenSizes\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this.options = { ...defaults(), ...options };\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(cb?: (src: string) => string): RNNTimeStepFunction {\n    const {\n      model,\n      inputLookup,\n      inputLookupLength,\n      outputLookup,\n      outputLookupLength,\n    } = this;\n    const { inputSize } = this.options;\n    const { equations } = model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString: string) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        if (state.name === 'input') {\n          innerFunctionsSwitch.push(`case '${fnName}':`);\n          innerFunctionsSwitch.push(\n            inputLookup && inputSize === 1\n              ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n              : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];'\n          );\n          innerFunctionsSwitch.push('break;');\n        } else {\n          innerFunctionsSwitch.push(\n            `        case '${fnName}':${\n              fnName !== 'forwardFn'\n                ? ` //compiled from ${fileName(fnName)}`\n                : ''\n            }\n          ${toInner(state.forwardFn.toString())}\n          break;`\n          );\n        }\n      }\n    }\n\n    const forceForecast = inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n    forceForecast\n      ? inputLookup === outputLookup\n        ? inputLookupLength\n        : `input.length + ${outputLookupLength - 1}`\n      : 'input.length'\n  };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${\n      inputSize === 1 && inputLookup\n        ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }'\n        : 'output = state.product.weights;'\n    }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n      ? 'return output[0]'\n      : 'return output'\n  };\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = new Float32Array(rows * columns);\n  }\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function('rawInput', cb ? cb(src) : src) as RNNTimeStepFunction;\n  }\n}\n\nexport type RNNTimeStepFunction = <\n  InputType extends InputOutputValue | InputOutputValue[]\n>(\n  rawInput?: InputType,\n  isSampleI?: boolean,\n  temperature?: number\n) => ValuesOf<InputType>;\n\nexport const trainDefaults = { ...rnnTrainDefaults };\n","import { getGRUHiddenLayer, getGRUEquation, IGRUHiddenLayer } from './gru';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class GRUTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface ILSTMHiddenLayer extends IRNNHiddenLayer {\n  inputMatrix: Matrix;\n  inputHidden: Matrix;\n  inputBias: Matrix;\n  forgetMatrix: Matrix;\n  forgetHidden: Matrix;\n  forgetBias: Matrix;\n  outputMatrix: Matrix;\n  outputHidden: Matrix;\n  outputBias: Matrix;\n  cellActivationMatrix: Matrix;\n  cellActivationHidden: Matrix;\n  cellActivationBias: Matrix;\n}\n\nexport class LSTM extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n\nexport function getHiddenLSTMLayer(\n  hiddenSize: number,\n  prevSize: number\n): ILSTMHiddenLayer {\n  return {\n    // gates parameters\n    // wix\n    inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n    inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n    inputBias: new Matrix(hiddenSize, 1),\n    // wfx\n    forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n    forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n    forgetBias: new Matrix(hiddenSize, 1),\n    // wox\n    outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n    outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n    outputBias: new Matrix(hiddenSize, 1),\n    // cell write params\n    // wcx\n    cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n    cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellActivationBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getLSTMEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: ILSTMHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.inputMatrix ||\n    !hiddenLayer.inputHidden ||\n    !hiddenLayer.inputBias ||\n    !hiddenLayer.forgetMatrix ||\n    !hiddenLayer.forgetHidden ||\n    !hiddenLayer.forgetBias ||\n    !hiddenLayer.outputMatrix ||\n    !hiddenLayer.outputHidden ||\n    !hiddenLayer.outputBias ||\n    !hiddenLayer.cellActivationMatrix ||\n    !hiddenLayer.cellActivationHidden ||\n    !hiddenLayer.cellActivationBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.inputMatrix, inputMatrix),\n        multiply(hiddenLayer.inputHidden, previousResult)\n      ),\n      hiddenLayer.inputBias\n    )\n  );\n\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.forgetMatrix, inputMatrix),\n        multiply(hiddenLayer.forgetHidden, previousResult)\n      ),\n      hiddenLayer.forgetBias\n    )\n  );\n\n  // output gate\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.outputMatrix, inputMatrix),\n        multiply(hiddenLayer.outputHidden, previousResult)\n      ),\n      hiddenLayer.outputBias\n    )\n  );\n\n  // write operation on cells\n  const cellWrite = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n        multiply(hiddenLayer.cellActivationHidden, previousResult)\n      ),\n      hiddenLayer.cellActivationBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n","import { getHiddenLSTMLayer, getLSTMEquation, ILSTMHiddenLayer } from './lstm';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class LSTMTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nexport function range(start: number, end: number): number[] {\n  const result: number[] = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","export function toArray(\n  values: number[] | Float32Array | { [key: string]: number }\n): Float32Array {\n  if (Array.isArray(values)) {\n    return Float32Array.from(values);\n  }\n\n  return Float32Array.from(Object.values(values));\n}\n","import { FeedForward, IFeedForwardJSON } from '../feed-forward';\nimport { recurrentZeros } from '../layer/recurrent-zeros';\nimport { Recurrent } from '../recurrent';\nimport { IRNNJSON, RNN } from '../recurrent/rnn';\nimport {\n  INeuralNetworkData,\n  INeuralNetworkJSON,\n  NeuralNetwork,\n} from '../neural-network';\nimport { GRU } from '../recurrent/gru';\nimport { LSTM } from '../recurrent/lstm';\nimport { NeuralNetworkGPU } from '../neural-network-gpu';\nimport { IRNNTimeStepJSON, RNNTimeStep } from '../recurrent/rnn-time-step';\nimport { LSTMTimeStep } from '../recurrent/lstm-time-step';\nimport { GRUTimeStep } from '../recurrent/gru-time-step';\nimport { ILayer } from '../layer';\n\ninterface LineDrawInfo {\n  className: string;\n  color: string;\n  width: number;\n}\n\ninterface NodeDrawInfo {\n  className: string;\n  color: string;\n}\n\ninterface BaseDrawArgs {\n  pixelX: number;\n  pixelY: number;\n  radius: number;\n  row: number;\n  column: number;\n}\n\ninterface InputDrawArgs extends BaseDrawArgs {\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function drawInput({\n  pixelX,\n  pixelY,\n  radius,\n  inputs,\n  row,\n  line,\n  fontSize,\n  fontClassName,\n}: InputDrawArgs): string {\n  let svg = `<rect\n              x=\"${pixelX / 2 - radius}\"\n              y=\"${pixelY / 2 + row * pixelY - radius}\"\n              width=\"${2 * radius}\"\n              height=\"${2 * radius}\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${inputs.color}\"\n              class=\"${inputs.className}\" />\n            <line\n              x1=\"${pixelX / 4}\"\n              y1=\"${pixelY / 2 + row * pixelY}\"\n              x2=\"${pixelX / 2 - radius}\"\n              y2=\"${pixelY / 2 + row * pixelY}\"\n              style=\"stroke:${line.color};stroke-width:${line.width}\"\n              class=\"${line.className}\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${pixelX / 8}\"\n              y=\"${pixelY / 2 + row * pixelY - 5}\"\n              fill=\"black\"\n              font-size=\"${fontSize}\"\n              class=\"${fontClassName}\">${inputs.labels[row]}</text>`;\n  }\n  return svg;\n}\n\nexport interface NeuronDrawArgs extends BaseDrawArgs {\n  column: number;\n  hidden: NodeDrawInfo;\n}\n\nexport function drawNeuron({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  hidden,\n}: NeuronDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${hidden.color}\"\n            class=\"${hidden.className}\" />`;\n}\n\nexport interface OutputDrawArgs extends BaseDrawArgs {\n  column: number;\n  line: LineDrawInfo;\n  outputs: NodeDrawInfo;\n}\n\nexport function drawOutput({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  line,\n  outputs,\n  radius,\n}: OutputDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${outputs.color}\"\n            class=\"${outputs.className}\" />\n          <line\n            x1=\"${pixelX / 2 + column * pixelX + radius}\"\n            y1=\"${pixelY / 2 + row * pixelY}\"\n            x2=\"${pixelX / 2 + column * pixelX + pixelX / 4}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface BackwardConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  lineY: number;\n  previousConnectionIndex: number;\n  line: LineDrawInfo;\n}\n\nexport function drawBackwardConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  lineY,\n  line,\n  previousConnectionIndex,\n}: BackwardConnectionsDrawArgs): string {\n  return `<line\n            x1=\"${pixelX / 2 + (column - 1) * pixelX + radius}\"\n            y1=\"${lineY / 2 + previousConnectionIndex * lineY}\"\n            x2=\"${pixelX / 2 + column * pixelX - radius}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface NeuralNetworkDrawOptions {\n  sizes: number[];\n  height: number;\n  width: number;\n  radius: number;\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  hidden: NodeDrawInfo;\n  outputs: NodeDrawInfo;\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function neuralNetworkToInnerSVG(\n  options: NeuralNetworkDrawOptions\n): string {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput({ pixelX, pixelY, row, column, ...options });\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput({ pixelX, pixelY, row, column, ...options });\n        } else {\n          svg += drawNeuron({ pixelX, pixelY, row, column, ...options });\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (\n          let previousConnectionIndex = 0;\n          previousConnectionIndex < previousSize;\n          previousConnectionIndex++\n        ) {\n          svg += drawBackwardConnections({\n            pixelX,\n            pixelY,\n            row,\n            column,\n            lineY,\n            previousConnectionIndex,\n            ...options,\n          });\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nexport interface RecurrentConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  recurrentLine: LineDrawInfo;\n}\n\nexport function drawRecurrentConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  recurrentLine,\n}: RecurrentConnectionsDrawArgs): string {\n  const moveX = pixelX / 2 + column * pixelX + radius + 1;\n  const moveY = pixelY / 2 + row * pixelY;\n  const x = moveX - radius * 2 - 2;\n  const y = moveY;\n  const x1 = x + 100;\n  const y1 = y + 50;\n  const x2 = moveX - 100;\n  const y2 = moveY + 50;\n  return `<path\n              d=\"M ${moveX} ${moveY} C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}\"\n              stroke=\"${recurrentLine.color}\"\n              stroke-width=\"${recurrentLine.width}\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${recurrentLine.className}\" />`;\n}\n\nexport interface RecurrentNeuralNetworkDrawOptions\n  extends NeuralNetworkDrawOptions {\n  recurrentLine: LineDrawInfo;\n}\n\nexport function rnnToInnerSVG(\n  options: RecurrentNeuralNetworkDrawOptions\n): string {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${recurrentLine.color}\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToInnerSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({\n        pixelX,\n        pixelY,\n        row,\n        column,\n        radius,\n        recurrentLine,\n      });\n    }\n  }\n  return svg;\n}\n\nexport function getFeedForwardLayers(network: FeedForward): ISimpleNet {\n  const { options } = network;\n  if (!options) {\n    throw new Error('options not defined');\n  }\n  if (!options.inputLayer) {\n    throw new Error('options.inputLater not defined');\n  }\n  if (!options.hiddenLayers) {\n    throw new Error('options.hiddenLayers not defined');\n  }\n  if (options.hiddenLayers.length < 1) {\n    throw new Error('options.hiddenLayers is empty');\n  }\n  if (!options.outputLayer) {\n    throw new Error('options.outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], i));\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    hiddenLayers.length\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function getRecurrentLayers(network: Recurrent): ISimpleNet {\n  const hiddenLayers: ILayer[] = [];\n  const { options } = network;\n  if (!options.inputLayer) {\n    throw new Error('inputLayer not defined');\n  }\n  if (!options.outputLayer) {\n    throw new Error('outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(\n      options.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i)\n    );\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    -1\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function wrapOuterSVG(\n  svgBody: string,\n  width: number,\n  height: number\n): string {\n  // language=html\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${width}\"\n            height=\"${height}\">${svgBody}</svg>`;\n}\n\nexport function getNeuralNetworkJSONSizes(json: INeuralNetworkJSON): number[] {\n  return json.sizes;\n}\n\nexport function getNeuralNetworkSizes<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n>(\n  net:\n    | NeuralNetwork<InputType, OutputType>\n    | NeuralNetworkGPU<InputType, OutputType>\n): number[] {\n  const { options, sizes } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  if (!sizes) {\n    if (typeof inputSize === 'number' && inputSize < 1) {\n      throw new Error('inputSize not set');\n    }\n    if (typeof outputSize === 'number' && outputSize < 1) {\n      throw new Error('outputSize not set');\n    }\n    if (hiddenLayers?.some((v) => v < 1)) {\n      throw new Error('hiddenLayers not set');\n    }\n  }\n  return typeof inputSize === 'number' &&\n    Array.isArray(hiddenLayers) &&\n    typeof outputSize === 'number'\n    ? [inputSize].concat(hiddenLayers).concat([outputSize])\n    : sizes;\n}\n\nexport function getRNNSizes(\n  net: RNN | LSTM | GRU | RNNTimeStep | LSTMTimeStep | GRUTimeStep | IRNNJSON\n): number[] {\n  const { options } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  return [inputSize].concat(hiddenLayers).concat([outputSize]);\n}\n\nexport function defaultOptions(): RecurrentNeuralNetworkDrawOptions {\n  return {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection',\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence',\n    },\n    inputs: {\n      color: 'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input',\n    },\n    outputs: {\n      color: 'rgba(100, 149, 237, 0.5)',\n      className: 'output',\n    },\n    hidden: {\n      color: 'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron',\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250,\n    sizes: [],\n  };\n}\n\nexport interface ISimpleNet {\n  inputSize: number;\n  hiddenLayers: number[];\n  outputSize: number;\n}\nexport interface ISizes {\n  sizes: number[];\n}\n\nexport function toSVG<\n  T extends\n    | ISimpleNet\n    | ISizes\n    | Recurrent\n    | FeedForward\n    | IFeedForwardJSON\n    | RNNTimeStep\n    | IRNNTimeStepJSON\n    | LSTMTimeStep\n    | GRUTimeStep\n    | RNN\n    | IRNNJSON\n    | GRU\n    | LSTM\n    | NeuralNetwork<InputType, OutputType>\n    | INeuralNetworkJSON\n    | NeuralNetworkGPU<InputType, OutputType>,\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n>(\n  net: T,\n  options?:\n    | Partial<RecurrentNeuralNetworkDrawOptions>\n    | Partial<NeuralNetworkDrawOptions>\n): string {\n  const mergedOptions = { ...defaultOptions(), ...options };\n  const { width, height, inputs } = mergedOptions;\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes: number[] = [];\n  if (net instanceof NeuralNetwork || net instanceof NeuralNetworkGPU) {\n    sizes = getNeuralNetworkSizes(net);\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputSize, hiddenLayers, outputSize } = getRecurrentLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputSize, hiddenLayers, outputSize } = getFeedForwardLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // handle json, recurrent first\n  else if (\n    net instanceof RNN ||\n    net instanceof LSTM ||\n    net instanceof GRU ||\n    net instanceof RNNTimeStep ||\n    net instanceof LSTMTimeStep ||\n    net instanceof GRUTimeStep\n  ) {\n    return wrapOuterSVG(\n      rnnToInnerSVG({\n        ...mergedOptions,\n        sizes: checkSizes(\n          getRNNSizes(\n            (net as unknown) as\n              | RNN\n              | LSTM\n              | GRU\n              | RNNTimeStep\n              | LSTMTimeStep\n              | GRUTimeStep\n          ),\n          inputs.labels\n        ),\n      }),\n      width,\n      height\n    );\n  }\n  // handle json, NeuralNetwork\n  else if (net.hasOwnProperty('type')) {\n    switch ((net as INeuralNetworkJSON).type) {\n      case 'NeuralNetwork':\n      case 'NeuralNetworkGPU':\n        return wrapOuterSVG(\n          neuralNetworkToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(\n              getNeuralNetworkJSONSizes(net as INeuralNetworkJSON),\n              inputs.labels\n            ),\n          }),\n          width,\n          height\n        );\n      case 'RNN':\n      case 'GRU':\n      case 'LSTM':\n      case 'RNNTimeStep':\n      case 'GRUTimeStep':\n      case 'LSTMTimeStep':\n        return wrapOuterSVG(\n          rnnToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getRNNSizes(net as IRNNJSON), inputs.labels),\n          }),\n          width,\n          height\n        );\n      default:\n        throw new Error('unrecognized network');\n    }\n  } else if (\n    net.hasOwnProperty('inputSize') &&\n    net.hasOwnProperty('hiddenLayers') &&\n    net.hasOwnProperty('outputSize')\n  ) {\n    const { inputSize, hiddenLayers, outputSize } = net as ISimpleNet;\n    sizes = [inputSize, ...hiddenLayers, outputSize];\n  } else if (net.hasOwnProperty('sizes')) {\n    sizes = (net as ISizes).sizes;\n  } else {\n    throw new Error('unrecognized network');\n  }\n  return wrapOuterSVG(\n    neuralNetworkToInnerSVG({\n      ...mergedOptions,\n      sizes: checkSizes(sizes, inputs.labels),\n    }),\n    width,\n    height\n  );\n}\n\nexport function checkSizes(\n  sizes: number[],\n  labels: string[] | null | undefined\n): number[] {\n  if (!sizes) {\n    throw new Error('sizes not set');\n  }\n  if (sizes.some((size: number) => size < 1)) {\n    throw new Error('sizes not set correctly');\n  }\n  if (labels && labels.length !== sizes[0]) {\n    throw new Error('not enough labels for inputs');\n  }\n  return sizes;\n}\n","import * as activation from './activation';\nimport { AE } from './autoencoder';\nimport CrossValidate from './cross-validate';\nimport { FeedForward } from './feed-forward';\nimport * as layer from './layer';\nimport { layerTypes } from './layer';\nimport { likely } from './likely';\nimport { lookup } from './lookup';\nimport { NeuralNetwork } from './neural-network';\nimport { NeuralNetworkGPU } from './neural-network-gpu';\nimport * as praxis from './praxis';\nimport { Recurrent } from './recurrent';\nimport { GRU } from './recurrent/gru';\nimport { GRUTimeStep } from './recurrent/gru-time-step';\nimport { LSTM } from './recurrent/lstm';\nimport { LSTMTimeStep } from './recurrent/lstm-time-step';\nimport { RNN } from './recurrent/rnn';\nimport { RNNTimeStep } from './recurrent/rnn-time-step';\nimport { DataFormatter } from './utilities/data-formatter';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { ones, ones2D } from './utilities/ones';\nimport * as random from './utilities/random';\nimport { randomWeight } from './utilities/random-weight';\nimport { randos } from './utilities/randos';\nimport { range } from './utilities/range';\nimport { toArray } from './utilities/to-array';\nimport { toSVG } from './utilities/to-svg';\nimport { zeros } from './utilities/zeros';\n\nconst recurrent = {\n  RNNTimeStep,\n  LSTMTimeStep,\n  GRUTimeStep,\n  RNN,\n  LSTM,\n  GRU,\n};\n\nconst utilities = {\n  max,\n  mse,\n  ones,\n  ones2D,\n  random,\n  randomWeight,\n  randos,\n  range,\n  toArray,\n  DataFormatter,\n  zeros,\n  toSVG,\n};\n\nexport {\n  activation,\n  AE,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  recurrent,\n  utilities,\n};\n"],"names":["activate$3","weight","Math","max","measure$3","delta","activate$2","value","exp","measure$2","error","activate$1","tanh","measure$1","activate","measure","f","r","e","n","t","o","i","c","commonjsRequire","u","a","Error","code","p","exports","call","length","require","module","global","factory","self","acorn","this","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","isArray","Array","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","functionFlags","async","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","FUNC_NULLABLE_ID","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","result","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","data","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$9","codePointToString$1","ignoreEscapeSequenceInKeyword","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","total","Infinity","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","version","tokTypes","keywordTypes","tokContexts","defineProperty","glWiretap","gl","undefined","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","contextVariables","entityNames","readPixelsVariableName","imageCount","indent","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","concat","getError","variableName","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","constructor","argumentAsStrings","join","writePPM","readPixels","apply","argumentsToString","addVariable","drawBuffers","methodCallToString","trackablePrimitive","spaces","repeat","width","height","sourceVariable","imageVariable","args","extensionEntityNames","getExtensionEntity","drawBuffersWEBGL","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","window","setupArguments","newArguments","toArray","mock1D","row","Float32Array","output","x","thread","y","z","_fn","mock2D","matrix","mock2DGraphical","mock3D","cube","apiDecorate","kernel","setOutput","setupOutput","graphical","setupGraphical","toJSON","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","flipPixels","_imageData","color","g","b","floor","_colorData","mockMethod","methods","createImageData","Uint8ClampedArray","gpuMock","fn","settings","pixels","halfHeight","bytesPerRow","temp","topOffset","bottomOffset","subarray","copyWithin","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","FunctionNode","CPUFunctionNode","astFunction","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","astReturnStatement","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","astLiteral","isNaN","astErrorOutput","astBinaryExpression","astIdentifierExpression","idtNode","astForStatement","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","astWhileStatement","whileNode","astDoWhileStatement","doWhileNode","astAssignmentExpression","assNode","getDeclaration","assignable","astBlockStatement","bNode","isState","astVariableDeclaration","varDecNode","info","valueType","astIfStatement","ifNode","astSwitchStatement","astThisExpression","tNode","astMemberExpression","mNode","signature","xProperty","yProperty","zProperty","origin","getMemberExpressionDetails","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","astCallExpression","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","astArrayExpression","arrNode","arrLen","astDebuggerStatement","constantsToString","results","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","Kernel","FunctionBuilder","CPUKernel","getFeatures","features","freeze","kernelMap","isIntegerDivisionAccurate","isSupported","isContextMatch","mode","nativeFunctionArguments","nativeFunctionReturnType","combineKernels","combinedKernel","getSignature","super","mergeSettings","_prependedString","translatedSources","initCanvas","document","createElement","OffscreenCanvas","initContext","getContext","initPlugins","argType","getVariableType","strictIntegers","getDimensions","checkOutput","translateSource","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","build","built","setupConstants","kernelString","getKernelString","debug","console","log","run","bind","buildSignature","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_resultKernelHeader","_processConstants","_earlyThrows","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","immutable","pipeline","arrayArguments","checks","checkSubKernels","_mapSubKernels","subKernel","media","videoWidth","videoHeight","ctx","pixelsData","ImageData","drawImage","getImageData","imageArray","pixel","images","imagesArray","_mutableKernel1DResults","_mutableKernel2DResults","_mutableKernel3DResults","_resultMutableKernel1DLoop","_resultImmutableKernel1DLoop","_kernelOutput","_resultMutableKernel2DLoop","_resultImmutableKernel2DLoop","_resultMutableKernel3DLoop","_resultImmutableKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","_getKernelResultTypeConstructorString","constructorString","removeCanvasReference","destroyContext","json","functionNodes","prependString","hasPrependString","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","nativeFunctions","optimizeFloatMemory","precision","dynamicOutput","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","fromJSON","rootNode","subKernelNodes","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","functionNode","traceFunctionCalls","retList","nativeFunctionIndex","dependantNativeFunctionName","splice","functionIndex","dependantFunctionName","getPrototypeString","getPrototypesFromFunctionNames","reverse","getStringFromFunctionNames","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getString","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","j","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","getSubKernelResultType","subKernelNode","called","functionCallIndex","getReturnTypes","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","isIdentifierConstant","firstExpression","inParser","functionAST","inForLoopInit","inForLoopTest","dependencies","getDependencies","realType","isSafeDependencies","identifier","getLookupType","typeLookupMap","getConstantType","constantName","trim","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","getVariableSignature","rightType","lastType","isAstVariable","getCheckVariableType","findIdentifierOrigin","isAstMathVariable","lastReturn","findLastReturn","mathProperties","mathFunctions","every","dependency","isNotSafe","details","returnRawValue","unshift","signatureString","astFunctionDeclaration","astFunctionExpression","astExpressionStatement","astEmptyStatement","astBreakStatement","astContinueStatement","astVariableDeclarator","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astConditionalExpression","debugString","getAstString","splitLines","lineBefore","isChildFunction","esNode","eNode","brNode","crNode","iVarDecNode","sNode","sequenceResult","expressionResult","uNode","checkAndUpconvertBitwiseUnary","logNode","variableSignature","astToFind","stack","atNode","separator","trackIdentifiers","memberExpression","runningContexts","functionContexts","returnStatements","trackedIdentifiers","newFunctionContext","scan","hasState","currentFunctionContext","currentContext","newContext","useFunctionContext","functionContext","getIdentifiers","previousRunningContext","suggestedType","normalizeDeclarations","testIdentifiers","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","postResult","targetName","subKernelsResultVariableSetup","subKernelsResultIndex","getRenderString","findKernelValue","tactic","checkContext","forEach","kernelArgument","uploadValue","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","framebufferName","framebuffer","textureName","getToArrayString","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","readBackValue","kernelResult","flattenedFunctions","isDeclaration","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","variableIndex","variable","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","getIsFloatRead","testContext","testCanvas","getIsIntegerDivisionAccurate","kernelFunction","v1","v2","getIsSpeedTacticSupported","round","isDrawBuffers","getIsDrawBuffers","isFloatRead","isSpeedTacticSupported","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","setupFeatureChecks","getVariablePrecisionString","setFixIntegerDivisionAccuracy","fix","setPrecision","setFloatTextures","warnDeprecated","floatTextures","isStartingVariableName","isVariableChar","char","nextChar","typeMap","lastKernel","texSize","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","transferValues","TextureConstructor","renderRawOutput","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","_textureSwitched","_mappedTextureSwitched","checkTextureSize","pickRenderStrategy","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultTexture","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultPackedPixels","getMainResultString","linesToString","getFloatTacticDeclaration","variablePrecision","getIntTacticDeclaration","getSampler2DTacticDeclaration","getSampler2DArrayTacticDeclaration","clone","resetSwitchingKernels","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","warn","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","updateMaxTexSize","viewport","maxTexSize","delete","_setupOutputTexture","_setupSubOutputTextures","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","updateTextureArgumentRefs","prevArg","_refs","mappedTexture","onActivate","previousKernel","int","float","vec2","vec3","vec4","GLTexture","textureType","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","Texture","beforeMutate","newTexture","cloneTexture","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","copyTexSubImage2D","clear","bindTexture","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","deleteTexture","_framebuffer","getRawValueFramebuffer","activeTexture","TEXTURE15","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","WebGLKernel","testExtensions","HeadlessGLKernel","preserveDrawingBuffer","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","WEBGL_color_buffer_float","getParameter","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","initExtensions","extensions","fallbackRequested","resize","destroyExtensions","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","getSource","updateValue","Input","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","addFunction","addNativeFunction","functionToIGPUFunction","splitArgumentTypes","Int32Array","getBitRatio","needsConstantTypes","setOptimizeFloatMemory","setDebug","setLoopMaxIterations","setConstantTypes","setFunctions","setNativeFunctions","setInjectedNative","setPipeline","setDimensions","setOutputToTexture","setImmutable","setStrictIntegers","setDynamicOutput","setHardcodeConstants","setDynamicArguments","setUseLegacyEncoder","setWarnVarUsage","getCanvas","getWebGl","setArgumentTypes","setTactic","addSubKernel","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","Constructor","getArgumentTypes","sourceString","argumentTypesObject","fragmentShader","E","WebGLFunctionNode","consequentType","alternateType","sanitizeName","castLiteralToFloat","castValueToInteger","castLiteralToInteger","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","bitwiseResult","checkAndUpconvertBitwiseOperators","foundOperator","initString","initNeedsSemiColon","declarationSets","declarationSet","actualType","markupType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","cleanName","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","subNode","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueArray2","WebGLKernelValueArray3","WebGLKernelValueArray4","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","lookupKernelValueType","WebGLKernelValue","WebGLKernelArray","checkSize","setup","requestTexture","setupTexture","defineTexture","onRequestTexture","onRequestIndex","dimensionsId","sizeId","setUniform2fv","setUniform3fv","setUniform4fv","setUniform1i","dimensions","setUniform3iv","setUniform2iv","inputTexture","getMemoryOptimizedFloatTextureSize","uploadArrayLength","setShape","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","setUniform1f","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","Uint32Array","Float64Array","sameError","valueDimensions","TranserArrayType","mrud","vertexShader","canvases","maxTexSizes","WebGLRenderingContext","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","alpha","depth","antialias","pluginsToUse","some","pluginName","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","failureResult","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","createFramebuffer","rawValueFramebuffers","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","setupReturnTypes","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","_replaceOutputTexture","drawArrays","TRIANGLE_STRIP","_replaceSubOutputTextures","getInternalFormat","getTextureFormat","format","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","setUniform4iv","uniform4iv","_getFragShaderArtifactMap","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","FLOAT_TACTIC_DECLARATION","INT_TACTIC_DECLARATION","SAMPLER_2D_TACTIC_DECLARATION","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","_getVertShaderArtifactMap","_getTextureCoordinate","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","replaceArtifacts","src","artifact","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","textureCacheIndex","idx","kernels","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueArray2","WebGL2KernelValueArray3","WebGL2KernelValueArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","TEXTURE_2D_ARRAY","texImage3D","xOffset","yOffset","imageDepth","texSubImage3D","RGBA32F","WebGL2Kernel","WebGL2RenderingContext","MAX_DRAW_BUFFERS","EXT_color_buffer_float","R32F","RED","RG32F","RG","REPEAT","texStorage2D","lib","GPU","bindTo","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","disableValidation","enableValidation","isGPUSupported","isKernelMapSupported","isOffscreenCanvasSupported","Worker","importScripts","isWebGLSupported","isWebGL2Supported","isHeadlessGLSupported","isCanvasSupported","HTMLCanvasElement","isGPUHTMLImageArraySupported","isSinglePrecisionSupported","chooseKernel","ExternalKernel","createKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","reasons","_kernel","existingKernel","newKernel","mergedSettings","createKernelMap","argument2Type","injectNative","setTimeout","firstKernel","upgradedSettings","floatOutput","outputToTexture","outputImmutable","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","shortcut","accept","replacementKernel","bindKernelToShortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","random","functionReturnType","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","getSystemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","ImageBitmap","texelCount","closestSquareDimensions","sqrt","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","getMinifySafeName","dollarSign","doubleUnderscore","singleUnderscore","lookup","toTable","hashes","hash","reduce","memo","toHash","toTable2D","objects2D","table","valueIndex","objects","toInputTable2D","tableIndex","dataIndex","toOutputTable2D","arrayLength","toArrayShort","toArrays","toObject","toObjectPartial","limit","dataShape","shape","lastData","possibleNumber","addKeys","__assign","commonjsGlobal","thaw","Block","Thaw","items","_a","defaultSettings","each","isStopped","tick","timeout","thawing","clearTimeout","thaws","delay","enumerable","stopAll","stop","makeReady","insert","addArray","insertArray","before","after","count","arraysToFloat32Arrays","arrays","inputOutputArraysToFloat32Arrays","arrayToFloat32Arrays","inputOutputArrayToFloat32Arrays","arrayToFloat32Array","inputOutputObjectsToFloat32Arrays","inputTable","outputTable","inputLength","outputLength","objectToFloat32Arrays","inputOutputObjectToFloat32Arrays","objectToFloat32Array","LookupTable","mse$1","errors","sum","randomWeight","randomFloat","gaussRandom","returnV","vVal","randomInteger","randomN","mu","std","randos","randos2D","randos3D","zeros$1","getTypedArrayFn","defaults$8","inputSize","outputSize","binaryThresh","trainDefaults$3","activation","iterations","errorThresh","logPeriod","leakyReluAlpha","learningRate","momentum","callbackPeriod","beta1","beta2","epsilon","NeuralNetwork","trainOpts","sizes","outputLayer","biases","weights","outputs","deltas","changes","errorCheckInterval","inputLookup","inputLookupLength","outputLookup","outputLookupLength","_formatInput","_formatOutput","runInput","setActivation","calculateDeltas","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_objectSpread","updateTrainingOptions","hiddenLayers","initialize","layerIndex","nodeIndex","prevSize","praxis","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","formattedInput","validateInput","layer","activeLayer","activeWeights","activeBiases","activeOutputs","activeSize","verifyIsInitialized","preparedData","merged","validateTrainingOptions","setLogMethod","validations","callback","getTrainOptsJSON","logTrainingStatus","status","calculateTrainingError","trainPattern","trainPatterns","trainingTick","endTime","Date","now","prepTraining","formatData","validateData","train","trainAsync","thawedTrain","browser","trainError","logErrorRate","adjustWeights","activeOutput","activeError","activeDeltas","nextLayer","currentSize","currentOutputs","nextWeights","nextDeltas","currentErrors","currentDeltas","incoming","activeDelta","activeChanges","change","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentWeights","currentBiases","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","addFormat","_b","misclasses","errorSum","falsePos","falseNeg","truePos","trueNeg","actual","expected","misclass","recall","accuracy","jsonLayerWeights","layerWeights","jsonLayerBiases","layerBiases","jsonLayers","layers","toFunction","cb","needsVar","nodeHandle","bias","weightsArray","subNodeIndex","checkKeys","find","layersAsMath","gpuInstance","makeKernel","_gpuInstance","gpuBrowser","makeKernelMap","kernelInput","release","possibleTexture","fill","weightedSumSigmoid","inputs","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChange","previousOutput","addWeights","addBiases","mse","NeuralNetworkGPU","texturizeInputData","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","getMSE","_addMSE","_divideMSESum","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","prevSum","getChanges","changeBiases","weightedSum","calcDeltas","targets","previousOutputs","previousChanges","mseSum","outputTextures","texturizeOutputData","UntrainedNeuralNetworkError","neuralNetwork","AE","decodedSize","denoiser","denoise","decode","decoder","encode","encodedInput","encodedLayer","likelyIncludesAnomalies","anomalyThreshold","anomalies","denoised","abs","previousValue","preprocessedData","datum","createDecoder","encodedLayerIndex","CrossValidate","initClassifier","avgs","testTime","trainTime","stats","testSize","trainSize","sets","testPartition","trainSet","testSet","classifier","beginTrain","trainingStats","beginTest","testStats","endTest","network","shuffleArray","binaryStats","isBinary","dclone","isBinaryStats","isBinaryPartitionResults","toNeuralNetwork","crossValidateJson","winningJSON","prev","mse2d","isBinaryResults","MeanSquaredError","_ref","calculate","addAbsolute","prevError","prevLayerErrors","divide","baseLayerDefaultSettings","praxisOpts","cleanupDeltas","BaseLayer","predictKernel","compareKernel","setupPraxis","title","initPraxis","setupKernels","isTraining","reuseKernels","predict","compare","targetValues","learn","toUntypedArray","zeros2D","zeros3D","Activation","inputLayer","Filter","filterCount","filterWidth","filterHeight","filters","filterDeltas","Internal","Modifier","Operator","inputLayer1","inputLayer2","compare1D","compare2D$5","Target","InternalModel","EntryPoint","Model","oldWeights","BasePraxis","layerTemplate","update$2","defaultSettings$1","ArthurDeviationBiases","arthurDeviationBiases","updateChange","update$1","incomingWeights","inputDeltas","lastChange","inputDelta","weightsLayer","incomingLayer","deltaLayer","ArthurDeviationWeights","arthurDeviationWeights","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","defaults$7","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","traverseLayersFrom","flattenLayers","checkSameSize","layer1","layer2","predict$8","inputWeights1","inputWeights2","Add","add$1","defaults$6","Random","predict$7","weights1","weights2","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply$1","predict2D$4","predict3D$5","compare2D$4","compare3D$4","Sigmoid","sigmoid$1","arthurFeedForward","initWeightsPraxis","initBiasesPraxis","biasesLayer","sigmoidLayer","weightsPraxis","getStride","defaults","stride","strideX","strideY","getPadding","padding","paddingX","paddingY","predict$6","startFilterX","startInputX","endFilterX","inputWidth","startFilterY","startInputY","endFilterY","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas$1","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas$1","compareBiases$1","biasDeltas","defaults$5","Convolution","compareFilterDeltasKernel","compareInputDeltasKernel","compareBiasesKernel","_c","convolution","setDropout","dropout","trainingPredict","probability","predict$5","compare$3","dropouts","dropoutDefaults","Dropout","predictKernelMap","feedForward","predict$4","predict3D$4","compareInputDeltas","compareInputDeltas3D","compareBiases","compareFilterDeltas","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","fullyConnected","predict$3","Negative","negative","predict$2","inputLayerWeights1","inputLayerWeights2","compare$2","MultiplyElement","multiplyElement$1","ones$1","ones2D","Ones","ones","predict2D$3","predict3D$3","compare2D$3","compare3D$3","Tanh","tanh$1","Zeros","zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","defaults$4","reshapeInput","predict1D","predict2D$2","predict3D$2","compare2D$2","compare3D$2","LeakyRelu","leakyRelu","lstmCell","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","outputGateConnector","setSwitchY","setSwitchX","predict$1","unclippedStartInputX","unclippedStartInputY","unclippedEndInputX","unclippedEndInputY","endInputX","endInputY","largestValue","compare$1","switchX","switchY","xCenter","yCenter","invStrideX","invStrideY","startSourceX","startSourceY","endSourceX","outputWidth","endSourceY","outputHeight","backY","backX","switchXValue","switchYValue","defaults$3","Pool","pool","RecurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","predict2D$1","compare2D$1","predict3D$1","compare3D$1","Relu","relu$1","rnnCell","transition","Regression","regression","getMaxValue2D","maxInput","getMaxValue3D","getSum2D","getSum3D","getExponentials","getExponentials3D","predict2D","exponentials","exponentialsSum","predict3D","compare2D","indicator","compare3D","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","layerTypes","layerNameTypes","layerFromJSON","jsonLayer","layerNameType","Layer","defaults$2","trainDefaults$2","FeedForward","_inputLayer","_hiddenLayers","_outputLayer","_model","meanSquaredError","_updateTrainingOptions","_validateTrainingOptions","_setLogMethod","_connectOptionsLayers","inputLayerIndex","outputLayerIndex","_connectNewLayers","_connectHiddenLayers","previousLayer","hiddenLayer","initializeLayers","lastLayer","typeSafeInput","_prepTraining","continueTicking","calculateError","_calculateTrainingError","_trainPatterns","_trainingTick","formattedData","transferData","_trainPattern","resultArray","_calculateDeltas","tmp","inputDatumCheck","lookupTable","datumParam","outputDatumCheck","transferredData","transferInput","transferOutput","formattedDatum","inputLayer1Index","inputLayer2Index","getLayer","_d","likely","net","TypeError","maxProp","entries","_ref2","RecurrentConnection","setLayer","Recurrent","_outputConnection","_layerSets","_hiddenLayerOutputIndices","_connectLayers","_connectLayersDeep","previousLayers","usedHiddenLayerOutputIndex","findInputLayer","layerSettings","previousHiddenLayerOutput","layerSet","initializeDeep","runInputs","lastLayerUsed","trainPatters","lastLayerSet","Matrix","rows","columns","getWeight","ix","setWeight","getDelta","setDelta","fromArray","deltasToArray","weightsToArray","iterate","rowIndex","columnIndex","callbacks","RandomMatrix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","isSetup","buildCharactersFromIterable","buildTables","addInputOutput","addUnrecognized","tempCharactersTable","dataFormatterIndex","dataFormatterLength","iteratable","characterIndex","charactersLength","character","addCharacters","charactersTable","toIndexes","unrecognized","toIndexesInputOutput","toIndexesValue","toCharacters","indices","addSpecial","fromAllPrintable","fromAllPrintableInputOutput","dataFormatter","fromStringInputOutput","fromArrayInputOutput","validateAndCast","flatArray","fromString","special","specialIndex","toFunctionString","formatDataIn","formatDataOut","copy","product","addB","allOnes","cloneNegative","multiply","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","leftIndex","rightIndex","multiplyB","leftRowRoot","rightRow","backPropagateValue","multiplyElement","multiplyElementB","relu","reluB","rowPluck","rowPluckIndex","rowBase","rowPluckB","sigmoid","sigmoidB","mwi","softmax","maxVal","tanhB","Equation","inputRow","forwardFn","backpropagationFn","subtract","inputValue","inputMatrixToRow","observe","runIndex","backpropagate","backpropagateIndex","predictTarget","predictTargetIndex","logProbabilities","probabilities","maxI","maxv","maxix","sampleI","trainDefaults$1","defaults$1","inputRange","regc","clipval","maxPredictionLength","RNN","stepCache","runs","ratioClipped","model","seal","isInitialized","equations","allMatrices","equationConnections","outputConnector","initialLayerInputs","mapModel","createHiddenLayers","hiddenLayersModel","getHiddenLayer","hiddenSize","getEquation","equation","inputMatrix","previousResult","createInputMatrix","createOutputMatrices","lastHiddenSize","bindEquation","equationConnection","hiddenMatrix","trainInput","log2ppl","inputIndex","inputMax","equationIndex","numClipped","numTot","matrixIndex","checkRunnable","rawInput","isSampleI","temperature","previousIndex","outputMatrix","probs","jsonString","previousConnectionIndex","m","connection","matrixOrigin","stateIndex","matrixToString","toInner","fnParts","fnBodyParts","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","GRU","getGRUHiddenLayer","getGRUEquation","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","ArrayLookupTable","ioValue","RNNTimeStep","trainDefaults","runArray","runArrayOfArray","runObject","runArrayOfObject","forecast","forecastArray","forecastArrayOfArray","forecastArrayOfObject","lastOutput","setSize","verifySize","trainArrayOfArray","inputArray","runArrayOfObjectOfArray","requireInputOutputOfOne","formatArray","formatArrayOfArray","formatArrayOfObject","formatArrayOfObjectMulti","formatArrayOfDatumOfArray","formatArrayOfDatumOfObject","formatArrayOfArrayOfArray","formatArrayOfArrayOfObject","formatArrayOfDatumOfArrayOfArray","formatArrayOfDatumOfArrayOfObject","errorCount","typedValue","typedInput","_e","typedOutput","_f","formatInputData","formatOutputData","forceForecast","GRUTimeStep","LSTM","getHiddenLSTMLayer","getLSTMEquation","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","drawInput","_ref3","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","_ref4","hidden","drawOutput","_ref5","drawBackwardConnections","_ref6","lineY","neuralNetworkToInnerSVG","previousSize","drawRecurrentConnections","_ref7","recurrentLine","moveX","moveY","x1","y1","x2","y2","rnnToInnerSVG","getFeedForwardLayers","getRecurrentLayers","wrapOuterSVG","svgBody","getNeuralNetworkJSONSizes","getNeuralNetworkSizes","getRNNSizes","toSVG","mergedOptions","checkSizes","recurrent","utilities","random$1"],"sourceRoot":""}